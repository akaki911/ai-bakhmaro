{
  "keywords": [
    "booking",
    "bookings",
    "calendar",
    "cottage",
    "hotel",
    "vehicle",
    "horse",
    "snowmobile",
    "provider",
    "providers",
    "finance",
    "bank",
    "commission",
    "notification",
    "rental"
  ],
  "files": [
    {
      "path": ".github/workflows/ci-cd-pipeline.yml",
      "occurrences": [
        {
          "line": 70,
          "keywords": [
            "notification"
          ],
          "text": "echo \"üì£ Deployment notifications can be added here (Slack, Email, etc.).\""
        }
      ]
    },
    {
      "path": ".github/workflows/firebase-deploy.yml",
      "occurrences": [
        {
          "line": 58,
          "keywords": [
            "notification"
          ],
          "text": "echo \"üì¢ Deployment notification...\""
        }
      ]
    },
    {
      "path": ".github/workflows/firebase-hosting-merge.yml",
      "occurrences": [
        {
          "line": 53,
          "keywords": [
            "notification"
          ],
          "text": "echo \"üì¢ Deployment notification...\""
        }
      ]
    },
    {
      "path": "README.md",
      "occurrences": [
        {
          "line": 17,
          "keywords": [
            "booking",
            "cottage",
            "hotel",
            "provider"
          ],
          "text": "All booking, cottage, hotel, and provider modules were removed. Any remaining references to those domains should be treated as bugs and reported."
        },
        {
          "line": 77,
          "keywords": [
            "cottage"
          ],
          "text": "> ‚ö†Ô∏è Production deployments must source every `VITE_FIREBASE_*` value from environment variables. The repository now ships only placeholder fallbacks to support local scaffolding, and the retired `bakhmaro-cottages` project identifiers are forbidden in production bundles."
        }
      ]
    },
    {
      "path": "ai-frontend/.env.example",
      "occurrences": [
        {
          "line": 52,
          "keywords": [
            "provider"
          ],
          "text": "VITE_AI_PROVIDER=groq"
        }
      ]
    },
    {
      "path": "ai-frontend/pages/api/auth/me.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "role: 'CUSTOMER' | 'PROVIDER' | 'SUPER_ADMIN';"
        },
        {
          "line": 81,
          "keywords": [
            "provider"
          ],
          "text": "// Check for session cookies (Provider/Customer sessions)"
        },
        {
          "line": 92,
          "keywords": [
            "provider"
          ],
          "text": "email: 'provider@bakhmaro.ge',"
        },
        {
          "line": 93,
          "keywords": [
            "provider"
          ],
          "text": "role: 'PROVIDER',"
        },
        {
          "line": 94,
          "keywords": [
            "provider"
          ],
          "text": "displayName: 'Provider User'"
        }
      ]
    },
    {
      "path": "ai-frontend/src/AdminLogs.tsx",
      "occurrences": [
        {
          "line": 15,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 39,
          "keywords": [
            "booking",
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "const [resourceFilter, setResourceFilter] = useState<'all' | 'cottage' | 'hotel' | 'vehicle' | 'user' | 'booking'>('all');"
        },
        {
          "line": 105,
          "keywords": [
            "cottage"
          ],
          "text": "case 'cottage': return 'üè†';"
        },
        {
          "line": 106,
          "keywords": [
            "hotel"
          ],
          "text": "case 'hotel': return 'üè®';"
        },
        {
          "line": 107,
          "keywords": [
            "vehicle"
          ],
          "text": "case 'vehicle': return 'üöó';"
        },
        {
          "line": 109,
          "keywords": [
            "booking"
          ],
          "text": "case 'booking': return 'üìÖ';"
        },
        {
          "line": 116,
          "keywords": [
            "cottage"
          ],
          "text": "case 'cottage': return '·Éô·Éù·É¢·Éî·ÉØ·Éò';"
        },
        {
          "line": 117,
          "keywords": [
            "hotel"
          ],
          "text": "case 'hotel': return '·É°·Éê·É°·É¢·É£·Éõ·É†·Éù';"
        },
        {
          "line": 118,
          "keywords": [
            "vehicle"
          ],
          "text": "case 'vehicle': return '·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò';"
        },
        {
          "line": 120,
          "keywords": [
            "booking"
          ],
          "text": "case 'booking': return '·ÉØ·Éê·Éï·É®·Éê·Éú·Éò';"
        },
        {
          "line": 269,
          "keywords": [
            "cottage"
          ],
          "text": "<option value=\"cottage\">·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò</option>"
        },
        {
          "line": 270,
          "keywords": [
            "hotel"
          ],
          "text": "<option value=\"hotel\">·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·Éî·Éë·Éò</option>"
        },
        {
          "line": 271,
          "keywords": [
            "vehicle"
          ],
          "text": "<option value=\"vehicle\">·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò</option>"
        },
        {
          "line": 273,
          "keywords": [
            "booking"
          ],
          "text": "<option value=\"booking\">·ÉØ·Éê·Éï·É®·Éú·Éî·Éë·Éò</option>"
        },
        {
          "line": 348,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-4 h-4 text-gray-400 mr-2\" />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/AdminMyProfile.tsx",
      "occurrences": [
        {
          "line": 12,
          "keywords": [
            "calendar"
          ],
          "text": "CalendarCheck,"
        },
        {
          "line": 69,
          "keywords": [
            "provider"
          ],
          "text": ": user?.role === 'PROVIDER_ADMIN'"
        },
        {
          "line": 71,
          "keywords": [
            "provider"
          ],
          "text": ": user?.role === 'PROVIDER'"
        },
        {
          "line": 146,
          "keywords": [
            "calendar"
          ],
          "text": "icon: CalendarCheck,"
        }
      ]
    },
    {
      "path": "ai-frontend/src/AdminPanel.tsx",
      "occurrences": [
        {
          "line": 10,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 65,
          "keywords": [
            "provider"
          ],
          "text": "if (!isAuthenticated || !user || (user.role !== 'SUPER_ADMIN' && user.role !== 'PROVIDER')) {"
        },
        {
          "line": 360,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-10 h-10 text-green-200\" />"
        },
        {
          "line": 407,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-8 h-8 text-green-200\" />"
        },
        {
          "line": 502,
          "keywords": [
            "booking"
          ],
          "text": "onClick={() => navigateToSection('bookings')}"
        },
        {
          "line": 512,
          "keywords": [
            "cottage"
          ],
          "text": "onClick={() => navigateToSection('cottages')}"
        },
        {
          "line": 522,
          "keywords": [
            "vehicle"
          ],
          "text": "onClick={() => navigateToSection('vehicles')}"
        },
        {
          "line": 532,
          "keywords": [
            "calendar"
          ],
          "text": "onClick={() => navigateToSection('calendar')}"
        },
        {
          "line": 535,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-6 h-6 text-purple-600 dark:text-purple-400 mx-auto mb-2\" />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/App.tsx",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "provider"
          ],
          "text": "import { QueryClient, QueryClientProvider } from '@tanstack/react-query';"
        },
        {
          "line": 12,
          "keywords": [
            "provider"
          ],
          "text": "import { AuthProvider } from './contexts/AuthContext';"
        },
        {
          "line": 13,
          "keywords": [
            "provider"
          ],
          "text": "import { ThemeProvider } from './contexts/ThemeContext';"
        },
        {
          "line": 113,
          "keywords": [
            "provider"
          ],
          "text": "<QueryClientProvider client={queryClient}>"
        },
        {
          "line": 114,
          "keywords": [
            "provider"
          ],
          "text": "<AuthProvider>"
        },
        {
          "line": 115,
          "keywords": [
            "provider"
          ],
          "text": "<ThemeProvider>"
        },
        {
          "line": 121,
          "keywords": [
            "provider"
          ],
          "text": "</ThemeProvider>"
        },
        {
          "line": 122,
          "keywords": [
            "provider"
          ],
          "text": "</AuthProvider>"
        },
        {
          "line": 123,
          "keywords": [
            "provider"
          ],
          "text": "</QueryClientProvider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/HorseForm.tsx",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "horse"
          ],
          "text": "interface Horse {"
        },
        {
          "line": 29,
          "keywords": [
            "horse"
          ],
          "text": "interface HorseFormProps {"
        },
        {
          "line": 30,
          "keywords": [
            "horse"
          ],
          "text": "editingHorse?: Horse | null;"
        },
        {
          "line": 35,
          "keywords": [
            "horse"
          ],
          "text": "export default function HorseForm({ editingHorse, onSave, onCancel }: HorseFormProps) {"
        },
        {
          "line": 57,
          "keywords": [
            "horse"
          ],
          "text": "if (editingHorse) {"
        },
        {
          "line": 59,
          "keywords": [
            "horse"
          ],
          "text": "name: editingHorse.name || '',"
        },
        {
          "line": 60,
          "keywords": [
            "horse"
          ],
          "text": "breed: editingHorse.breed || '',"
        },
        {
          "line": 61,
          "keywords": [
            "horse"
          ],
          "text": "pricePerDay: editingHorse.pricePerDay || 0,"
        },
        {
          "line": 62,
          "keywords": [
            "horse"
          ],
          "text": "pricePerHour: editingHorse.pricePerHour || 0,"
        },
        {
          "line": 63,
          "keywords": [
            "horse"
          ],
          "text": "age: editingHorse.age || 0,"
        },
        {
          "line": 64,
          "keywords": [
            "horse"
          ],
          "text": "color: editingHorse.color || '',"
        },
        {
          "line": 65,
          "keywords": [
            "horse"
          ],
          "text": "height: editingHorse.height || '',"
        },
        {
          "line": 66,
          "keywords": [
            "horse"
          ],
          "text": "temperament: editingHorse.temperament || '',"
        },
        {
          "line": 67,
          "keywords": [
            "horse"
          ],
          "text": "experience: editingHorse.experience || '',"
        },
        {
          "line": 68,
          "keywords": [
            "horse"
          ],
          "text": "location: editingHorse.location || '',"
        },
        {
          "line": 69,
          "keywords": [
            "horse"
          ],
          "text": "description: editingHorse.description || '',"
        },
        {
          "line": 70,
          "keywords": [
            "horse"
          ],
          "text": "isAvailable: editingHorse.isAvailable ?? true"
        },
        {
          "line": 72,
          "keywords": [
            "horse"
          ],
          "text": "setExistingImages(editingHorse.images || []);"
        },
        {
          "line": 74,
          "keywords": [
            "horse"
          ],
          "text": "}, [editingHorse]);"
        },
        {
          "line": 107,
          "keywords": [
            "horse"
          ],
          "text": "const imageRef = ref(storage, `horses/${Date.now()}_${image.name}`);"
        },
        {
          "line": 129,
          "keywords": [
            "horse"
          ],
          "text": "const horseData = {"
        },
        {
          "line": 136,
          "keywords": [
            "horse"
          ],
          "text": "if (editingHorse?.id) {"
        },
        {
          "line": 137,
          "keywords": [
            "horse"
          ],
          "text": "await updateDoc(doc(db, 'horses', editingHorse.id), horseData);"
        },
        {
          "line": 140,
          "keywords": [
            "horse"
          ],
          "text": "await addDoc(collection(db, 'horses'), {"
        },
        {
          "line": 141,
          "keywords": [
            "horse"
          ],
          "text": "...horseData,"
        },
        {
          "line": 149,
          "keywords": [
            "horse"
          ],
          "text": "console.error('Error saving horse:', error);"
        },
        {
          "line": 174,
          "keywords": [
            "horse"
          ],
          "text": "{editingHorse ? '·É™·ÉÆ·Éî·Éú·Éò·É° ·É†·Éî·Éì·Éê·É•·É¢·Éò·É†·Éî·Éë·Éê' : '·Éê·ÉÆ·Éê·Éö·Éò ·É™·ÉÆ·Éî·Éú·Éò·É° ·Éì·Éê·Éõ·Éê·É¢·Éî·Éë·Éê'}"
        },
        {
          "line": 420,
          "keywords": [
            "horse"
          ],
          "text": "{editingHorse ? '·Éí·Éê·Éú·Éê·ÉÆ·Éö·Éî·Éë·Éê' : '·É®·Éî·Éú·Éê·ÉÆ·Éï·Éê'}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/HotelBookingForm.tsx",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "export default function HotelBookingForm() {"
        },
        {
          "line": 6,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "<h1 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">Hotel bookings unavailable</h1>"
        },
        {
          "line": 8,
          "keywords": [
            "hotel"
          ],
          "text": "Direct hotel reservations are no longer managed here. Transition to the AI workspace dashboards to coordinate partner"
        }
      ]
    },
    {
      "path": "ai-frontend/src/SnowmobileForm.tsx",
      "occurrences": [
        {
          "line": 10,
          "keywords": [
            "snowmobile"
          ],
          "text": "interface Snowmobile {"
        },
        {
          "line": 32,
          "keywords": [
            "snowmobile"
          ],
          "text": "interface SnowmobileFormProps {"
        },
        {
          "line": 33,
          "keywords": [
            "snowmobile"
          ],
          "text": "editingSnowmobile?: Snowmobile | null;"
        },
        {
          "line": 38,
          "keywords": [
            "snowmobile"
          ],
          "text": "export default function SnowmobileForm({ editingSnowmobile, onSave, onCancel }: SnowmobileFormProps) {"
        },
        {
          "line": 62,
          "keywords": [
            "snowmobile"
          ],
          "text": "if (editingSnowmobile) {"
        },
        {
          "line": 64,
          "keywords": [
            "snowmobile"
          ],
          "text": "name: editingSnowmobile.name || '',"
        },
        {
          "line": 65,
          "keywords": [
            "snowmobile"
          ],
          "text": "brand: editingSnowmobile.brand || '',"
        },
        {
          "line": 66,
          "keywords": [
            "snowmobile"
          ],
          "text": "model: editingSnowmobile.model || '',"
        },
        {
          "line": 67,
          "keywords": [
            "snowmobile"
          ],
          "text": "year: editingSnowmobile.year || new Date().getFullYear(),"
        },
        {
          "line": 68,
          "keywords": [
            "snowmobile"
          ],
          "text": "pricePerDay: editingSnowmobile.pricePerDay || 0,"
        },
        {
          "line": 69,
          "keywords": [
            "snowmobile"
          ],
          "text": "pricePerHour: editingSnowmobile.pricePerHour || 0,"
        },
        {
          "line": 70,
          "keywords": [
            "snowmobile"
          ],
          "text": "engineSize: editingSnowmobile.engineSize || '',"
        },
        {
          "line": 71,
          "keywords": [
            "snowmobile"
          ],
          "text": "trackLength: editingSnowmobile.trackLength || '',"
        },
        {
          "line": 72,
          "keywords": [
            "snowmobile"
          ],
          "text": "maxSpeed: editingSnowmobile.maxSpeed || '',"
        },
        {
          "line": 73,
          "keywords": [
            "snowmobile"
          ],
          "text": "capacity: editingSnowmobile.capacity || 1,"
        },
        {
          "line": 74,
          "keywords": [
            "snowmobile"
          ],
          "text": "isAvailable: editingSnowmobile.isAvailable ?? true,"
        },
        {
          "line": 75,
          "keywords": [
            "snowmobile"
          ],
          "text": "location: editingSnowmobile.location || '',"
        },
        {
          "line": 76,
          "keywords": [
            "snowmobile"
          ],
          "text": "description: editingSnowmobile.description || '',"
        },
        {
          "line": 77,
          "keywords": [
            "snowmobile"
          ],
          "text": "fuelType: editingSnowmobile.fuelType || '·Éë·Éî·Éú·Éñ·Éò·Éú·Éò',"
        },
        {
          "line": 78,
          "keywords": [
            "snowmobile"
          ],
          "text": "images: editingSnowmobile.images || []"
        },
        {
          "line": 81,
          "keywords": [
            "snowmobile"
          ],
          "text": "}, [editingSnowmobile]);"
        },
        {
          "line": 98,
          "keywords": [
            "snowmobile"
          ],
          "text": "const snowmobileData = {"
        },
        {
          "line": 104,
          "keywords": [
            "snowmobile"
          ],
          "text": "if (editingSnowmobile) {"
        },
        {
          "line": 105,
          "keywords": [
            "snowmobile"
          ],
          "text": "await updateDoc(doc(db, 'snowmobiles', editingSnowmobile.id), snowmobileData);"
        },
        {
          "line": 108,
          "keywords": [
            "snowmobile"
          ],
          "text": "await addDoc(collection(db, 'snowmobiles'), {"
        },
        {
          "line": 109,
          "keywords": [
            "snowmobile"
          ],
          "text": "...snowmobileData,"
        },
        {
          "line": 117,
          "keywords": [
            "snowmobile"
          ],
          "text": "console.error('Error saving snowmobile:', error);"
        },
        {
          "line": 135,
          "keywords": [
            "snowmobile"
          ],
          "text": "{editingSnowmobile ? '·Éó·Éù·Éï·Éö·Éõ·Éê·Éï·Éö·Éò·É° ·É†·Éî·Éì·Éê·É•·É¢·Éò·É†·Éî·Éë·Éê' : '·Éê·ÉÆ·Éê·Éö·Éò ·Éó·Éù·Éï·Éö·Éõ·Éê·Éï·Éê·Éö·Éò'}"
        },
        {
          "line": 162,
          "keywords": [
            "snowmobile"
          ],
          "text": "placeholder=\"·Éõ·Éê·Éí: Arctic Cat Snowmobile\""
        }
      ]
    },
    {
      "path": "ai-frontend/src/VehicleBookingForm.tsx",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "export default function VehicleBookingForm() {"
        },
        {
          "line": 6,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "<h1 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">Vehicle bookings unavailable</h1>"
        },
        {
          "line": 8,
          "keywords": [
            "vehicle"
          ],
          "text": "The legacy vehicle reservation form has been retired. Please coordinate logistics through the AI workspace tools instead."
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AIAssistantEnhanced.tsx",
      "occurrences": [
        {
          "line": 704,
          "keywords": [
            "provider"
          ],
          "text": "const AUTHORIZED_AI_ROLES = [\"SUPER_ADMIN\", \"PROVIDER_ADMIN\", \"ADMIN\"]; // Authorized roles"
        },
        {
          "line": 1573,
          "keywords": [
            "booking"
          ],
          "text": "üí° ·Éõ·Éê·Éí·Éê·Éö·Éò·Éó·Éò: \"·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò·Éê BookingService-·É®·Éò?\" ·Éê·Éú \"·É†·Éù·Éí·Éù·É† ·Éõ·É£·É®·Éê·Éù·Éë·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê?\""
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AIDashboardShell.tsx",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "provider"
          ],
          "text": "import { AIModeProvider } from '../contexts/AIModeContext';"
        },
        {
          "line": 5,
          "keywords": [
            "provider"
          ],
          "text": "import { AssistantModeProvider } from '../contexts/AssistantModeContext';"
        },
        {
          "line": 6,
          "keywords": [
            "provider"
          ],
          "text": "import { PermissionsProvider } from '../contexts/PermissionsContext';"
        },
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "import { FilePreviewProvider } from '../contexts/FilePreviewProvider';"
        },
        {
          "line": 30,
          "keywords": [
            "provider"
          ],
          "text": "<AIModeProvider>"
        },
        {
          "line": 31,
          "keywords": [
            "provider"
          ],
          "text": "<AssistantModeProvider>"
        },
        {
          "line": 32,
          "keywords": [
            "provider"
          ],
          "text": "<PermissionsProvider>"
        },
        {
          "line": 33,
          "keywords": [
            "provider"
          ],
          "text": "<FilePreviewProvider>"
        },
        {
          "line": 44,
          "keywords": [
            "provider"
          ],
          "text": "</FilePreviewProvider>"
        },
        {
          "line": 45,
          "keywords": [
            "provider"
          ],
          "text": "</PermissionsProvider>"
        },
        {
          "line": 46,
          "keywords": [
            "provider"
          ],
          "text": "</AssistantModeProvider>"
        },
        {
          "line": 47,
          "keywords": [
            "provider"
          ],
          "text": "</AIModeProvider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AIDeveloper/tabs/ConsoleTab.tsx",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "provider"
          ],
          "text": "import { DevConsoleProvider } from '../../../contexts/DevConsoleContext';"
        },
        {
          "line": 30,
          "keywords": [
            "provider"
          ],
          "text": "<DevConsoleProvider>"
        },
        {
          "line": 32,
          "keywords": [
            "provider"
          ],
          "text": "</DevConsoleProvider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AIDeveloperPanel.tsx",
      "occurrences": [
        {
          "line": 41,
          "keywords": [
            "provider"
          ],
          "text": "import { DevConsoleProvider } from \"../contexts/DevConsoleContext\";"
        },
        {
          "line": 1110,
          "keywords": [
            "provider"
          ],
          "text": "<DevConsoleProvider>"
        },
        {
          "line": 1460,
          "keywords": [
            "provider"
          ],
          "text": "</DevConsoleProvider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AIMemoryManager/ContextActions.tsx",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 39,
          "keywords": [
            "calendar"
          ],
          "text": "case 'system': return <Calendar className=\"w-4 h-4 text-yellow-400\" />;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AdminMessagingDashboard.tsx",
      "occurrences": [
        {
          "line": 21,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 68,
          "keywords": [
            "provider"
          ],
          "text": "const isAdmin = user && ['SUPER_ADMIN', 'ADMIN', 'PROVIDER_ADMIN'].includes(user.role);"
        },
        {
          "line": 125,
          "keywords": [
            "provider"
          ],
          "text": "if (user && (['SUPER_ADMIN', 'ADMIN', 'PROVIDER_ADMIN'].includes(user.role) || user.role === 'CUSTOMER')) {"
        },
        {
          "line": 171,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId,"
        },
        {
          "line": 275,
          "keywords": [
            "booking"
          ],
          "text": "if (conversation.bookingId) {"
        },
        {
          "line": 287,
          "keywords": [
            "booking"
          ],
          "text": "if (conversation.metadata?.bookingReference) {"
        },
        {
          "line": 288,
          "keywords": [
            "booking"
          ],
          "text": "adminConversation.tags.push(conversation.metadata.bookingReference);"
        },
        {
          "line": 759,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-3 h-3\" />"
        },
        {
          "line": 761,
          "keywords": [
            "booking"
          ],
          "text": "{selectedConversation.bookingId && ("
        },
        {
          "line": 764,
          "keywords": [
            "booking"
          ],
          "text": "<span>·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê: {selectedConversation.bookingId}</span>"
        },
        {
          "line": 1220,
          "keywords": [
            "booking"
          ],
          "text": "{conversation.bookingId && `·ÉØ·Éê·Éï·É®·Éê·Éú·Éò: ${conversation.bookingId}`}"
        },
        {
          "line": 1231,
          "keywords": [
            "booking"
          ],
          "text": "{conversation.type === 'booking' ? '·ÉØ·Éê·Éï·É®·Éê·Éú·Éò' :"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AdvancedSearch.tsx",
      "occurrences": [
        {
          "line": 50,
          "keywords": [
            "provider"
          ],
          "text": "// Preview functionality using unified provider"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/AutoUpdateControl.tsx",
      "occurrences": [
        {
          "line": 269,
          "keywords": [
            "notification"
          ],
          "text": "{/* Toast Notification */}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/Backup/BackupTab.tsx",
      "occurrences": [
        {
          "line": 363,
          "keywords": [
            "provider"
          ],
          "text": "{t('backup.enableHint', 'Enable the backup provider from Settings to restore automated snapshots.')}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/BankInfoForm.tsx",
      "occurrences": [
        {
          "line": 5,
          "keywords": [
            "bank"
          ],
          "text": "interface BankInfo {"
        },
        {
          "line": 6,
          "keywords": [
            "bank"
          ],
          "text": "bankName: string;"
        },
        {
          "line": 7,
          "keywords": [
            "bank"
          ],
          "text": "bankAccount: string;"
        },
        {
          "line": 10,
          "keywords": [
            "bank"
          ],
          "text": "interface BankInfoFormProps {"
        },
        {
          "line": 11,
          "keywords": [
            "bank"
          ],
          "text": "bankInfo: BankInfo;"
        },
        {
          "line": 12,
          "keywords": [
            "bank"
          ],
          "text": "onChange: (bankInfo: BankInfo) => void;"
        },
        {
          "line": 17,
          "keywords": [
            "bank"
          ],
          "text": "const georgianBanks = ["
        },
        {
          "line": 19,
          "keywords": [
            "bank"
          ],
          "text": "{ value: '·É°·Éê·É•·Éê·É†·Éó·Éï·Éî·Éö·Éù·É° ·Éë·Éê·Éú·Éô·Éò (Bank of Georgia)', label: 'üè¶ ·É°·Éê·É•·Éê·É†·Éó·Éï·Éî·Éö·Éù·É° ·Éë·Éê·Éú·Éô·Éò (Bank of Georgia)' },"
        },
        {
          "line": 28,
          "keywords": [
            "bank"
          ],
          "text": "export default function BankInfoForm({"
        },
        {
          "line": 29,
          "keywords": [
            "bank"
          ],
          "text": "bankInfo,"
        },
        {
          "line": 33,
          "keywords": [
            "bank"
          ],
          "text": "}: BankInfoFormProps) {"
        },
        {
          "line": 35,
          "keywords": [
            "bank"
          ],
          "text": "const [customBankName, setCustomBankName] = useState('');"
        },
        {
          "line": 37,
          "keywords": [
            "bank"
          ],
          "text": "const handleBankChange = (field: keyof BankInfo, value: string) => {"
        },
        {
          "line": 39,
          "keywords": [
            "bank"
          ],
          "text": "...bankInfo,"
        },
        {
          "line": 98,
          "keywords": [
            "bank"
          ],
          "text": "value={bankInfo.bankName}"
        },
        {
          "line": 100,
          "keywords": [
            "bank"
          ],
          "text": "handleBankChange('bankName', e.target.value);"
        },
        {
          "line": 102,
          "keywords": [
            "bank"
          ],
          "text": "setCustomBankName('');"
        },
        {
          "line": 109,
          "keywords": [
            "bank"
          ],
          "text": "{georgianBanks.map((bank) => ("
        },
        {
          "line": 110,
          "keywords": [
            "bank"
          ],
          "text": "<option key={bank.value} value={bank.value}>"
        },
        {
          "line": 111,
          "keywords": [
            "bank"
          ],
          "text": "{bank.label}"
        },
        {
          "line": 118,
          "keywords": [
            "bank"
          ],
          "text": "{bankInfo.bankName === '·É°·ÉÆ·Éï·Éê' && ("
        },
        {
          "line": 125,
          "keywords": [
            "bank"
          ],
          "text": "value={customBankName}"
        },
        {
          "line": 127,
          "keywords": [
            "bank"
          ],
          "text": "setCustomBankName(e.target.value);"
        },
        {
          "line": 128,
          "keywords": [
            "bank"
          ],
          "text": "handleBankChange('bankName', e.target.value);"
        },
        {
          "line": 145,
          "keywords": [
            "bank"
          ],
          "text": "value={bankInfo.bankAccount}"
        },
        {
          "line": 146,
          "keywords": [
            "bank"
          ],
          "text": "onChange={(e) => handleBankChange('bankAccount', e.target.value)}"
        },
        {
          "line": 176,
          "keywords": [
            "bank"
          ],
          "text": "export type { BankInfo };"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/BookingModal.tsx",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "booking"
          ],
          "text": "interface BookingModalProps {"
        },
        {
          "line": 4,
          "keywords": [
            "cottage"
          ],
          "text": "cottageId?: string;"
        },
        {
          "line": 5,
          "keywords": [
            "cottage"
          ],
          "text": "cottageName?: string;"
        },
        {
          "line": 8,
          "keywords": [
            "booking"
          ],
          "text": "booking?: unknown;"
        },
        {
          "line": 10,
          "keywords": [
            "booking"
          ],
          "text": "onBookingUpdated?: () => void;"
        },
        {
          "line": 13,
          "keywords": [
            "booking"
          ],
          "text": "export default function BookingModal({"
        },
        {
          "line": 14,
          "keywords": [
            "cottage"
          ],
          "text": "cottageName,"
        },
        {
          "line": 17,
          "keywords": [
            "booking"
          ],
          "text": "}: BookingModalProps) {"
        },
        {
          "line": 27,
          "keywords": [
            "booking"
          ],
          "text": "Legacy booking disabled"
        },
        {
          "line": 29,
          "keywords": [
            "cottage"
          ],
          "text": "{cottageName ? ("
        },
        {
          "line": 31,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "The historic booking workflow for <span className=\"font-medium\">{cottageName}</span> has been retired as part of the"
        },
        {
          "line": 36,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "Cottage bookings are no longer available in this environment."
        },
        {
          "line": 43,
          "keywords": [
            "rental"
          ],
          "text": "To manage AI workspace resources, please use the new admin surfaces instead of the legacy rental forms."
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/Calendar.tsx",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "calendar"
          ],
          "text": "interface CalendarProps {"
        },
        {
          "line": 16,
          "keywords": [
            "calendar"
          ],
          "text": "const Calendar: React.FC<CalendarProps> = ({"
        },
        {
          "line": 54,
          "keywords": [
            "calendar"
          ],
          "text": "// Generate calendar days"
        },
        {
          "line": 55,
          "keywords": [
            "calendar"
          ],
          "text": "const calendarDays = [];"
        },
        {
          "line": 59,
          "keywords": [
            "calendar"
          ],
          "text": "calendarDays.push(null);"
        },
        {
          "line": 64,
          "keywords": [
            "calendar"
          ],
          "text": "calendarDays.push(day);"
        },
        {
          "line": 131,
          "keywords": [
            "calendar"
          ],
          "text": "{/* Calendar Header */}"
        },
        {
          "line": 171,
          "keywords": [
            "calendar"
          ],
          "text": "{/* Calendar Body */}"
        },
        {
          "line": 185,
          "keywords": [
            "calendar"
          ],
          "text": "{/* Calendar Grid */}"
        },
        {
          "line": 187,
          "keywords": [
            "calendar"
          ],
          "text": "{calendarDays.map((day, index) => {"
        },
        {
          "line": 278,
          "keywords": [
            "calendar"
          ],
          "text": "export default Calendar;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/ChatPanel.tsx",
      "occurrences": [
        {
          "line": 974,
          "keywords": [
            "cottage"
          ],
          "text": "'Bakhmaro Cottages Platform',"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/CheckpointManager.tsx",
      "occurrences": [
        {
          "line": 5,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar, User, FileText, Info, Archive,"
        },
        {
          "line": 197,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-3 h-3\" />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/EnhancedMessagingSystem.tsx",
      "occurrences": [
        {
          "line": 29,
          "keywords": [
            "provider"
          ],
          "text": "senderRole: 'CUSTOMER' | 'PROVIDER_ADMIN' | 'SUPER_ADMIN';"
        },
        {
          "line": 50,
          "keywords": [
            "booking"
          ],
          "text": "bookingId?: string;"
        },
        {
          "line": 51,
          "keywords": [
            "booking"
          ],
          "text": "bookingContext?: {"
        },
        {
          "line": 53,
          "keywords": [
            "cottage",
            "horse",
            "hotel",
            "snowmobile",
            "vehicle"
          ],
          "text": "listingType: 'cottage' | 'hotel' | 'vehicle' | 'horse' | 'snowmobile';"
        },
        {
          "line": 95,
          "keywords": [
            "booking"
          ],
          "text": "const [activeFilter, setActiveFilter] = useState<'all' | 'unread' | 'support' | 'bookings' | 'urgent'>('all');"
        },
        {
          "line": 152,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: 'booking-123',"
        },
        {
          "line": 153,
          "keywords": [
            "booking"
          ],
          "text": "bookingContext: {"
        },
        {
          "line": 155,
          "keywords": [
            "cottage"
          ],
          "text": "listingType: 'cottage',"
        },
        {
          "line": 275,
          "keywords": [
            "booking"
          ],
          "text": "if (selectedConversation?.bookingContext && quickReply.placeholders) {"
        },
        {
          "line": 282,
          "keywords": [
            "booking"
          ],
          "text": "content = content.replace(`{${placeholder}}`, selectedConversation.bookingContext?.listingName || '');"
        },
        {
          "line": 285,
          "keywords": [
            "booking"
          ],
          "text": "content = content.replace(`{${placeholder}}`, selectedConversation.bookingContext?.checkIn || '');"
        },
        {
          "line": 345,
          "keywords": [
            "booking"
          ],
          "text": ") || conversation.bookingContext?.listingName.toLowerCase().includes(searchTerm.toLowerCase());"
        },
        {
          "line": 351,
          "keywords": [
            "booking"
          ],
          "text": "case 'bookings': return !conversation.isSupport && conversation.bookingId;"
        },
        {
          "line": 362,
          "keywords": [
            "cottage"
          ],
          "text": "case 'cottage': return 'üè°';"
        },
        {
          "line": 363,
          "keywords": [
            "hotel"
          ],
          "text": "case 'hotel': return 'üè®';"
        },
        {
          "line": 364,
          "keywords": [
            "vehicle"
          ],
          "text": "case 'vehicle': return 'üöô';"
        },
        {
          "line": 365,
          "keywords": [
            "horse"
          ],
          "text": "case 'horse': return 'üêé';"
        },
        {
          "line": 366,
          "keywords": [
            "snowmobile"
          ],
          "text": "case 'snowmobile': return 'üõ∑';"
        },
        {
          "line": 455,
          "keywords": [
            "booking"
          ],
          "text": "{ key: 'bookings', label: '·ÉØ·Éê·Éï·É®·Éú·Éî·Éë·Éò' },"
        },
        {
          "line": 488,
          "keywords": [
            "booking"
          ],
          "text": "{conversation.bookingContext && ("
        },
        {
          "line": 490,
          "keywords": [
            "booking"
          ],
          "text": "{getListingIcon(conversation.bookingContext.listingType)}"
        },
        {
          "line": 499,
          "keywords": [
            "booking"
          ],
          "text": ": conversation.bookingContext?.listingName ||"
        },
        {
          "line": 506,
          "keywords": [
            "booking"
          ],
          "text": "{conversation.bookingContext && ("
        },
        {
          "line": 508,
          "keywords": [
            "booking"
          ],
          "text": "{conversation.bookingContext.checkIn} - {conversation.bookingContext.checkOut}"
        },
        {
          "line": 561,
          "keywords": [
            "booking"
          ],
          "text": "{selectedConversation.bookingContext && ("
        },
        {
          "line": 563,
          "keywords": [
            "booking"
          ],
          "text": "{selectedConversation.bookingContext.listingName} ‚Ä¢"
        },
        {
          "line": 564,
          "keywords": [
            "booking"
          ],
          "text": "{selectedConversation.bookingContext.checkIn} - {selectedConversation.bookingContext.checkOut}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/FilePreview.tsx",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "provider"
          ],
          "text": "* Uses FilePreviewProvider for centralized state management"
        },
        {
          "line": 19,
          "keywords": [
            "calendar"
          ],
          "text": "IconCalendar,"
        },
        {
          "line": 329,
          "keywords": [
            "calendar"
          ],
          "text": "<IconCalendar size={14} className=\"text-gray-500\" />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/GitHubManagement/GitHubAnalyticsTab.tsx",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/GitHubManagement/GitHubVersionTab.tsx",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 636,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar size={12} />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/HorseCard.tsx",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "calendar"
          ],
          "text": "import { Activity, MapPin, Calendar, DollarSign, Edit, Trash2, Eye, Clock, Users } from 'lucide-react';"
        },
        {
          "line": 5,
          "keywords": [
            "horse"
          ],
          "text": "interface Horse {"
        },
        {
          "line": 25,
          "keywords": [
            "horse"
          ],
          "text": "interface HorseCardProps {"
        },
        {
          "line": 26,
          "keywords": [
            "horse"
          ],
          "text": "horse: Horse;"
        },
        {
          "line": 33,
          "keywords": [
            "horse"
          ],
          "text": "export default function HorseCard({ horse, viewMode, onEdit, onDelete, onView }: HorseCardProps) {"
        },
        {
          "line": 51,
          "keywords": [
            "horse"
          ],
          "text": "{horse.images && horse.images.length > 0 ? ("
        },
        {
          "line": 53,
          "keywords": [
            "horse"
          ],
          "text": "src={horse.images[0]}"
        },
        {
          "line": 54,
          "keywords": [
            "horse"
          ],
          "text": "alt={horse.name}"
        },
        {
          "line": 66,
          "keywords": [
            "horse"
          ],
          "text": "<h3 className=\"text-lg font-bold text-gray-900 dark:text-white truncate\">{horse.name}</h3>"
        },
        {
          "line": 68,
          "keywords": [
            "horse"
          ],
          "text": "horse.isAvailable"
        },
        {
          "line": 72,
          "keywords": [
            "horse"
          ],
          "text": "{horse.isAvailable ? '·ÉÆ·Éî·Éö·Éõ·Éò·É°·Éê·É¨·Éï·Éì·Éù·Éõ·Éò' : '·Éì·Éê·Éô·Éê·Éï·Éî·Éë·É£·Éö·Éò'}"
        },
        {
          "line": 77,
          "keywords": [
            "horse"
          ],
          "text": "<span>{horse.breed}</span>"
        },
        {
          "line": 78,
          "keywords": [
            "horse"
          ],
          "text": "{horse.age > 0 && <span>{horse.age} ·É¨·Éö·Éò·É°</span>}"
        },
        {
          "line": 79,
          "keywords": [
            "horse"
          ],
          "text": "{horse.color && <span>{horse.color}</span>}"
        },
        {
          "line": 82,
          "keywords": [
            "horse"
          ],
          "text": "<span>{horse.location}</span>"
        },
        {
          "line": 90,
          "keywords": [
            "horse"
          ],
          "text": "{horse.pricePerHour > 0 && ("
        },
        {
          "line": 92,
          "keywords": [
            "horse"
          ],
          "text": "{horse.pricePerHour}‚Çæ/·É°·Éê·Éê·Éó·Éò"
        },
        {
          "line": 96,
          "keywords": [
            "horse"
          ],
          "text": "{horse.pricePerDay}‚Çæ/·Éì·É¶·Éî"
        },
        {
          "line": 141,
          "keywords": [
            "horse"
          ],
          "text": "{horse.images && horse.images.length > 0 ? ("
        },
        {
          "line": 143,
          "keywords": [
            "horse"
          ],
          "text": "src={horse.images[0]}"
        },
        {
          "line": 144,
          "keywords": [
            "horse"
          ],
          "text": "alt={horse.name}"
        },
        {
          "line": 155,
          "keywords": [
            "horse"
          ],
          "text": "horse.isAvailable"
        },
        {
          "line": 159,
          "keywords": [
            "horse"
          ],
          "text": "{horse.isAvailable ? '·ÉÆ·Éî·Éö·Éõ·Éò·É°·Éê·É¨·Éï·Éì·Éù·Éõ·Éò' : '·Éì·Éê·Éô·Éê·Éï·Éî·Éë·É£·Éö·Éò'}"
        },
        {
          "line": 163,
          "keywords": [
            "horse"
          ],
          "text": "{horse.pricePerDay > 0 && ("
        },
        {
          "line": 167,
          "keywords": [
            "horse"
          ],
          "text": "{horse.pricePerDay}‚Çæ/·Éì·É¶·Éî"
        },
        {
          "line": 175,
          "keywords": [
            "horse"
          ],
          "text": "<h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">{horse.name}</h3>"
        },
        {
          "line": 177,
          "keywords": [
            "horse"
          ],
          "text": "<span className=\"font-medium\">{horse.breed}</span>"
        },
        {
          "line": 178,
          "keywords": [
            "horse"
          ],
          "text": "{horse.age > 0 && <span>{horse.age} ·É¨·Éö·Éò·É°</span>}"
        },
        {
          "line": 179,
          "keywords": [
            "horse"
          ],
          "text": "{horse.color && <span>{horse.color}</span>}"
        },
        {
          "line": 183,
          "keywords": [
            "horse"
          ],
          "text": "{horse.description && ("
        },
        {
          "line": 185,
          "keywords": [
            "horse"
          ],
          "text": "{horse.description}"
        },
        {
          "line": 192,
          "keywords": [
            "horse"
          ],
          "text": "<span>{horse.location}</span>"
        },
        {
          "line": 195,
          "keywords": [
            "horse"
          ],
          "text": "{horse.height && ("
        },
        {
          "line": 198,
          "keywords": [
            "horse"
          ],
          "text": "<span>·É°·Éò·Éõ·Éê·É¶·Éö·Éî: {horse.height}</span>"
        },
        {
          "line": 202,
          "keywords": [
            "horse"
          ],
          "text": "{horse.temperament && ("
        },
        {
          "line": 205,
          "keywords": [
            "horse"
          ],
          "text": "<span>{horse.temperament}</span>"
        },
        {
          "line": 209,
          "keywords": [
            "horse"
          ],
          "text": "{horse.experience && ("
        },
        {
          "line": 212,
          "keywords": [
            "horse"
          ],
          "text": "<span>{horse.experience}</span>"
        },
        {
          "line": 217,
          "keywords": [
            "horse"
          ],
          "text": "{horse.pricePerHour > 0 && ("
        },
        {
          "line": 222,
          "keywords": [
            "horse"
          ],
          "text": "<span className=\"font-medium\">{horse.pricePerHour}‚Çæ/·É°·Éê·Éê·Éó·Éò</span>"
        },
        {
          "line": 225,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-4 h-4 mr-1\" />"
        },
        {
          "line": 226,
          "keywords": [
            "horse"
          ],
          "text": "<span className=\"font-medium\">{horse.pricePerDay}‚Çæ/·Éì·É¶·Éî</span>"
        },
        {
          "line": 233,
          "keywords": [
            "horse"
          ],
          "text": "<span>·Éì·Éê·Éõ·Éê·É¢·Éî·Éë·É£·Éö·Éò: {formatDate(horse.createdAt)}</span>"
        },
        {
          "line": 234,
          "keywords": [
            "horse"
          ],
          "text": "<span>·Éí·Éê·Éú·Éê·ÉÆ·Éö·Éì·Éê: {formatDate(horse.updatedAt)}</span>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/MessagingNotificationSystem.tsx",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "notification"
          ],
          "text": "interface NotificationData {"
        },
        {
          "line": 20,
          "keywords": [
            "notification"
          ],
          "text": "const MessagingNotificationSystem: React.FC = () => {"
        },
        {
          "line": 23,
          "keywords": [
            "notification"
          ],
          "text": "const [notifications, setNotifications] = useState<NotificationData[]>([]);"
        },
        {
          "line": 24,
          "keywords": [
            "notification"
          ],
          "text": "const [showNotifications, setShowNotifications] = useState(false);"
        },
        {
          "line": 28,
          "keywords": [
            "notification"
          ],
          "text": "// Mock notifications - replace with real-time Firebase listener"
        },
        {
          "line": 29,
          "keywords": [
            "notification"
          ],
          "text": "const mockNotifications: NotificationData[] = ["
        },
        {
          "line": 56,
          "keywords": [
            "notification"
          ],
          "text": "setNotifications(mockNotifications);"
        },
        {
          "line": 59,
          "keywords": [
            "notification"
          ],
          "text": "// Play notification sound"
        },
        {
          "line": 60,
          "keywords": [
            "notification"
          ],
          "text": "const playNotificationSound = () => {"
        },
        {
          "line": 69,
          "keywords": [
            "notification"
          ],
          "text": "// Send email notification for unread messages"
        },
        {
          "line": 70,
          "keywords": [
            "notification"
          ],
          "text": "const sendEmailNotification = async (notification: NotificationData) => {"
        },
        {
          "line": 72,
          "keywords": [
            "notification"
          ],
          "text": "console.log('Sending email notification:', notification);"
        },
        {
          "line": 76,
          "keywords": [
            "notification"
          ],
          "text": "// Check for new notifications and send alerts"
        },
        {
          "line": 77,
          "keywords": [
            "notification"
          ],
          "text": "const unreadNotifications = notifications.filter(n => !n.isRead);"
        },
        {
          "line": 79,
          "keywords": [
            "notification"
          ],
          "text": "if (unreadNotifications.length > 0) {"
        },
        {
          "line": 80,
          "keywords": [
            "notification"
          ],
          "text": "// Play sound for urgent notifications"
        },
        {
          "line": 81,
          "keywords": [
            "notification"
          ],
          "text": "const urgentNotifications = unreadNotifications.filter(n => n.priority === 'urgent');"
        },
        {
          "line": 82,
          "keywords": [
            "notification"
          ],
          "text": "if (urgentNotifications.length > 0) {"
        },
        {
          "line": 83,
          "keywords": [
            "notification"
          ],
          "text": "playNotificationSound();"
        },
        {
          "line": 86,
          "keywords": [
            "notification"
          ],
          "text": "// Send browser notification if permission granted"
        },
        {
          "line": 87,
          "keywords": [
            "notification"
          ],
          "text": "if (Notification.permission === 'granted') {"
        },
        {
          "line": 88,
          "keywords": [
            "notification"
          ],
          "text": "unreadNotifications.forEach(notification => {"
        },
        {
          "line": 89,
          "keywords": [
            "notification"
          ],
          "text": "new Notification(notification.title, {"
        },
        {
          "line": 90,
          "keywords": [
            "notification"
          ],
          "text": "body: notification.message,"
        },
        {
          "line": 92,
          "keywords": [
            "notification"
          ],
          "text": "tag: notification.id"
        },
        {
          "line": 97,
          "keywords": [
            "notification"
          ],
          "text": "// Send email notifications after 15 minutes for unread messages"
        },
        {
          "line": 98,
          "keywords": [
            "notification"
          ],
          "text": "unreadNotifications.forEach(notification => {"
        },
        {
          "line": 99,
          "keywords": [
            "notification"
          ],
          "text": "const timeSinceReceived = Date.now() - notification.timestamp.getTime();"
        },
        {
          "line": 101,
          "keywords": [
            "notification"
          ],
          "text": "sendEmailNotification(notification);"
        },
        {
          "line": 105,
          "keywords": [
            "notification"
          ],
          "text": "}, [notifications, soundEnabled]);"
        },
        {
          "line": 107,
          "keywords": [
            "notification"
          ],
          "text": "// Request notification permission"
        },
        {
          "line": 109,
          "keywords": [
            "notification"
          ],
          "text": "if (Notification.permission === 'default') {"
        },
        {
          "line": 110,
          "keywords": [
            "notification"
          ],
          "text": "Notification.requestPermission();"
        },
        {
          "line": 114,
          "keywords": [
            "notification"
          ],
          "text": "const markAsRead = (notificationId: string) => {"
        },
        {
          "line": 115,
          "keywords": [
            "notification"
          ],
          "text": "setNotifications(prev =>"
        },
        {
          "line": 116,
          "keywords": [
            "notification"
          ],
          "text": "prev.map(n => n.id === notificationId ? { ...n, isRead: true } : n)"
        },
        {
          "line": 120,
          "keywords": [
            "notification"
          ],
          "text": "const clearAllNotifications = () => {"
        },
        {
          "line": 121,
          "keywords": [
            "notification"
          ],
          "text": "setNotifications(prev => prev.map(n => ({ ...n, isRead: true })));"
        },
        {
          "line": 124,
          "keywords": [
            "notification"
          ],
          "text": "const unreadCount = notifications.filter(n => !n.isRead).length;"
        },
        {
          "line": 126,
          "keywords": [
            "notification"
          ],
          "text": "const getNotificationIcon = (type: string, priority: string) => {"
        },
        {
          "line": 145,
          "keywords": [
            "notification"
          ],
          "text": "{/* Notification Bell */}"
        },
        {
          "line": 147,
          "keywords": [
            "notification"
          ],
          "text": "onClick={() => setShowNotifications(!showNotifications)}"
        },
        {
          "line": 162,
          "keywords": [
            "notification"
          ],
          "text": "{/* Notifications Dropdown */}"
        },
        {
          "line": 163,
          "keywords": [
            "notification"
          ],
          "text": "{showNotifications && ("
        },
        {
          "line": 179,
          "keywords": [
            "notification"
          ],
          "text": "onClick={clearAllNotifications}"
        },
        {
          "line": 190,
          "keywords": [
            "notification"
          ],
          "text": "onClick={() => setShowNotifications(false)}"
        },
        {
          "line": 202,
          "keywords": [
            "notification"
          ],
          "text": "{/* Notifications List */}"
        },
        {
          "line": 204,
          "keywords": [
            "notification"
          ],
          "text": "{notifications.length === 0 ? ("
        },
        {
          "line": 214,
          "keywords": [
            "notification"
          ],
          "text": "notifications.map((notification) => ("
        },
        {
          "line": 216,
          "keywords": [
            "notification"
          ],
          "text": "key={notification.id}"
        },
        {
          "line": 217,
          "keywords": [
            "notification"
          ],
          "text": "onClick={() => markAsRead(notification.id)}"
        },
        {
          "line": 219,
          "keywords": [
            "notification"
          ],
          "text": "getPriorityColor(notification.priority)"
        },
        {
          "line": 223,
          "keywords": [
            "notification"
          ],
          "text": "!notification.isRead ? 'font-medium' : 'opacity-75'"
        },
        {
          "line": 228,
          "keywords": [
            "notification"
          ],
          "text": "{getNotificationIcon(notification.type, notification.priority)}"
        },
        {
          "line": 235,
          "keywords": [
            "notification"
          ],
          "text": "{notification.title}"
        },
        {
          "line": 237,
          "keywords": [
            "notification"
          ],
          "text": "{!notification.isRead && ("
        },
        {
          "line": 244,
          "keywords": [
            "notification"
          ],
          "text": "{notification.message}"
        },
        {
          "line": 249,
          "keywords": [
            "notification"
          ],
          "text": "{notification.timestamp.toLocaleString('ka-GE', {"
        },
        {
          "line": 283,
          "keywords": [
            "notification"
          ],
          "text": "export default MessagingNotificationSystem;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/MessagingSystem.tsx",
      "occurrences": [
        {
          "line": 2,
          "keywords": [
            "calendar"
          ],
          "text": "import { MessageSquare, Send, X, User, Calendar, Paperclip, Phone, Mail, Search, MoreVertical, Image, File, CheckCheck, Check, Clock } from 'lucide-react';"
        },
        {
          "line": 22,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: string;"
        },
        {
          "line": 39,
          "keywords": [
            "booking"
          ],
          "text": "selectedBooking?: any | null;"
        },
        {
          "line": 42,
          "keywords": [
            "booking"
          ],
          "text": "export default function MessagingSystem({ isOpen, onClose, selectedBooking }: MessagingSystemProps) {"
        },
        {
          "line": 56,
          "keywords": [
            "booking"
          ],
          "text": "// If specific booking is selected, create or find conversation"
        },
        {
          "line": 57,
          "keywords": [
            "booking"
          ],
          "text": "if (selectedBooking) {"
        },
        {
          "line": 58,
          "keywords": [
            "booking"
          ],
          "text": "handleBookingConversation();"
        },
        {
          "line": 60,
          "keywords": [
            "booking"
          ],
          "text": "// If no booking selected, create/find support conversation"
        },
        {
          "line": 64,
          "keywords": [
            "booking"
          ],
          "text": "}, [user, isOpen, selectedBooking]);"
        },
        {
          "line": 66,
          "keywords": [
            "booking"
          ],
          "text": "const handleBookingConversation = async () => {"
        },
        {
          "line": 67,
          "keywords": [
            "booking"
          ],
          "text": "if (!selectedBooking || !user) return;"
        },
        {
          "line": 69,
          "keywords": [
            "booking"
          ],
          "text": "// Find existing conversation for this booking"
        },
        {
          "line": 71,
          "keywords": [
            "booking"
          ],
          "text": "conv.bookingId === selectedBooking.id"
        },
        {
          "line": 78,
          "keywords": [
            "booking"
          ],
          "text": "// Create new conversation for this booking"
        },
        {
          "line": 80,
          "keywords": [
            "booking"
          ],
          "text": "selectedBooking.id,"
        },
        {
          "line": 81,
          "keywords": [
            "booking"
          ],
          "text": "selectedBooking.hostInfo?.name || '·Éõ·Éî·Éû·Éê·É¢·É†·Éù·Éú·Éî',"
        },
        {
          "line": 82,
          "keywords": [
            "booking"
          ],
          "text": "selectedBooking.hostInfo?.phone || '·Éõ·Éî·Éû·Éê·É¢·É†·Éù·Éú·Éî',"
        },
        {
          "line": 83,
          "keywords": [
            "booking"
          ],
          "text": "selectedBooking.property"
        },
        {
          "line": 143,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId || '',"
        },
        {
          "line": 258,
          "keywords": [
            "booking"
          ],
          "text": "const createConversation = async (bookingId: string, otherUserId: string, otherUserName: string, listingTitle: string) => {"
        },
        {
          "line": 262,
          "keywords": [
            "booking"
          ],
          "text": "const isSupport = bookingId.startsWith('support-');"
        },
        {
          "line": 265,
          "keywords": [
            "booking"
          ],
          "text": "bookingId,"
        },
        {
          "line": 267,
          "keywords": [
            "booking"
          ],
          "text": "listingType: isSupport ? 'support' : 'booking',"
        },
        {
          "line": 534,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-3 h-3\" />"
        },
        {
          "line": 535,
          "keywords": [
            "booking"
          ],
          "text": "<span>·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê #{selectedConversation.bookingId}</span>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/ReplitInterface.tsx",
      "occurrences": [
        {
          "line": 123,
          "keywords": [
            "provider"
          ],
          "text": "// Preview functionality using unified provider"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/SecurityAuditTab.tsx",
      "occurrences": [
        {
          "line": 17,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 65,
          "keywords": [
            "provider"
          ],
          "text": "const availableRoles = ['SUPER_ADMIN', 'PROVIDER', 'CUSTOMER'];"
        },
        {
          "line": 186,
          "keywords": [
            "provider"
          ],
          "text": "'PROVIDER': '·Éõ·Éù·Éõ·É¨·Éù·Éì·Éî·Éë·Éî·Éö·Éò',"
        },
        {
          "line": 434,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-3 h-3\" />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/SnowmobileCard.tsx",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "calendar"
          ],
          "text": "Calendar,"
        },
        {
          "line": 17,
          "keywords": [
            "snowmobile"
          ],
          "text": "interface Snowmobile {"
        },
        {
          "line": 39,
          "keywords": [
            "snowmobile"
          ],
          "text": "interface SnowmobileCardProps {"
        },
        {
          "line": 40,
          "keywords": [
            "snowmobile"
          ],
          "text": "snowmobile: Snowmobile;"
        },
        {
          "line": 46,
          "keywords": [
            "snowmobile"
          ],
          "text": "export default function SnowmobileCard({ snowmobile, viewMode, onEdit, onDelete }: SnowmobileCardProps) {"
        },
        {
          "line": 63,
          "keywords": [
            "snowmobile"
          ],
          "text": "<h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">{snowmobile.name}</h3>"
        },
        {
          "line": 65,
          "keywords": [
            "snowmobile"
          ],
          "text": "snowmobile.isAvailable"
        },
        {
          "line": 69,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.isAvailable ? ("
        },
        {
          "line": 86,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.brand} {snowmobile.model} ({snowmobile.year})"
        },
        {
          "line": 90,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.capacity} ·Éõ·Éí·Éñ·Éê·Éï·É†·Éò"
        },
        {
          "line": 94,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.location}"
        },
        {
          "line": 96,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.engineSize && ("
        },
        {
          "line": 99,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.engineSize}"
        },
        {
          "line": 109,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.pricePerDay}‚Çæ"
        },
        {
          "line": 112,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.pricePerHour > 0 && ("
        },
        {
          "line": 114,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.pricePerHour}‚Çæ/·É°·Éó"
        },
        {
          "line": 160,
          "keywords": [
            "snowmobile"
          ],
          "text": "<h3 className=\"text-lg font-bold text-gray-900 dark:text-white\">{snowmobile.name}</h3>"
        },
        {
          "line": 162,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.brand} {snowmobile.model}"
        },
        {
          "line": 168,
          "keywords": [
            "snowmobile"
          ],
          "text": "snowmobile.isAvailable"
        },
        {
          "line": 172,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.isAvailable ? ("
        },
        {
          "line": 189,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.pricePerDay}‚Çæ"
        },
        {
          "line": 192,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.pricePerHour > 0 && ("
        },
        {
          "line": 194,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.pricePerHour}‚Çæ ·É°·Éê·Éê·Éó·É®·Éò"
        },
        {
          "line": 202,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"w-4 h-4 mr-2 text-gray-400\" />"
        },
        {
          "line": 203,
          "keywords": [
            "snowmobile"
          ],
          "text": "<span>·É¨·Éî·Éö·Éò: {snowmobile.year}</span>"
        },
        {
          "line": 208,
          "keywords": [
            "snowmobile"
          ],
          "text": "<span>·Éõ·Éí·Éñ·Éê·Éï·É†·Éî·Éë·Éò: {snowmobile.capacity}</span>"
        },
        {
          "line": 213,
          "keywords": [
            "snowmobile"
          ],
          "text": "<span>·Éõ·Éì·Éî·Éë·Éê·É†·Éî·Éù·Éë·Éê: {snowmobile.location}</span>"
        },
        {
          "line": 216,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.engineSize && ("
        },
        {
          "line": 219,
          "keywords": [
            "snowmobile"
          ],
          "text": "<span>·É´·É†·Éê·Éï·Éê: {snowmobile.engineSize}</span>"
        },
        {
          "line": 223,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.maxSpeed && ("
        },
        {
          "line": 226,
          "keywords": [
            "snowmobile"
          ],
          "text": "<span>·Éõ·Éê·É•·É°. ·É°·Éò·É©·É•·Éê·É†·Éî: {snowmobile.maxSpeed}</span>"
        },
        {
          "line": 230,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.trackLength && ("
        },
        {
          "line": 233,
          "keywords": [
            "snowmobile"
          ],
          "text": "<span>·Éö·Éî·Éú·É¢·Éò·É° ·É°·Éò·Éí·É†·É´·Éî: {snowmobile.trackLength}</span>"
        },
        {
          "line": 239,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.description && ("
        },
        {
          "line": 242,
          "keywords": [
            "snowmobile"
          ],
          "text": "{snowmobile.description}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/UserProfile.tsx",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "booking"
          ],
          "text": "onNavigate: (section: 'bookings' | 'favorites' | 'reviews') => void;"
        },
        {
          "line": 34,
          "keywords": [
            "booking"
          ],
          "text": "const handleMenuClick = (section: 'bookings' | 'favorites' | 'reviews') => {"
        },
        {
          "line": 58,
          "keywords": [
            "booking"
          ],
          "text": "onClick={() => handleMenuClick('bookings')}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/admin/AIDeveloperManagementPanel.tsx",
      "occurrences": [
        {
          "line": 81,
          "keywords": [
            "provider"
          ],
          "text": "provider: string;"
        },
        {
          "line": 421,
          "keywords": [
            "provider"
          ],
          "text": "provider: fallbackStatus?.provider ?? 'offline',"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/admin/ai-panel/AnalyticsPanel.tsx",
      "occurrences": [
        {
          "line": 14,
          "keywords": [
            "provider"
          ],
          "text": "provider: string;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/admin/ai-panel/FallbackControlCard.tsx",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "provider"
          ],
          "text": "provider: string;"
        },
        {
          "line": 13,
          "keywords": [
            "provider"
          ],
          "text": "export function FallbackControlCard({ enabled, forced, provider, isUpdating, onToggle }: FallbackControlCardProps) {"
        },
        {
          "line": 16,
          "keywords": [
            "provider"
          ],
          "text": "const providerLabel = provider === 'openai' ? 'OpenAI' : '·Éö·Éù·Éô·Éê·Éö·É£·É†·Éò';"
        },
        {
          "line": 32,
          "keywords": [
            "provider"
          ],
          "text": "·É†·Éù·Éì·Éî·É°·Éê·É™ backup ·É†·Éî·Éü·Éò·Éõ·Éò ·É©·Éê·É†·Éó·É£·Éö·Éò·Éê, ·Éû·Éê·É°·É£·ÉÆ·Éî·Éë·É° ·Éò·É¶·Éî·Éë·Éó {providerLabel} ·Éõ·Éù·Éì·Éî·Éö·Éò·Éì·Éê·Éú, ·É†·Éê·Éó·Éê ·Éí·É£·É†·É£·Éö·Éù·É°·Éí·Éê·Éú ·Éî·Éö·Éù·Éì·Éù·Éó ·Éó·Éê·Éú·Éõ·Éò·Éõ·Éì·Éî·Éï·É†·É£·Éö ·Éû·Éê·É°·É£·ÉÆ·Éî·Éë·É° Groq-·Éò·É° ·É®·Éî·É§·Éî·É†·ÉÆ·Éî·Éë·Éî·Éë·Éò·É° ·Éì·É†·Éù·É°."
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/futuristic-chat/AIChatInterface.tsx",
      "occurrences": [
        {
          "line": 160,
          "keywords": [
            "booking"
          ],
          "text": "'booking',"
        },
        {
          "line": 161,
          "keywords": [
            "cottage"
          ],
          "text": "'cottage',"
        },
        {
          "line": 320,
          "keywords": [
            "cottage"
          ],
          "text": "en: \"I'm here to help with guest topics only‚ÄîBakhmaro cottages, pricing, weather, routes, and tours. I can't assist with technical questions.\","
        },
        {
          "line": 953,
          "keywords": [
            "cottage"
          ],
          "text": "'Which cottages are free in Bakhmaro this month?',"
        },
        {
          "line": 954,
          "keywords": [
            "cottage"
          ],
          "text": "'What is the nightly rate for a cottage for 4 guests?',"
        },
        {
          "line": 973,
          "keywords": [
            "cottage"
          ],
          "text": "'Which cottage fits 6 guests and what are the prices?',"
        },
        {
          "line": 974,
          "keywords": [
            "rental"
          ],
          "text": "'Which local attractions do you recommend during a rental?',"
        },
        {
          "line": 1538,
          "keywords": [
            "calendar"
          ],
          "text": "'Style: Short sentences with UI navigation steps (e.g., \"Go to: Menu ‚Üí Calendar ‚Üí +\").',"
        }
      ]
    },
    {
      "path": "ai-frontend/src/components/futuristic-chat/FuturisticChatPanel.tsx",
      "occurrences": [
        {
          "line": 617,
          "keywords": [
            "cottage"
          ],
          "text": "onClick={() => onSuggestionSelect(language === 'ka' ? '·É®·Éî·Éê·Éõ·Éù·É¨·Éõ·Éî ·Éë·Éê·ÉÆ·Éõ·Éê·É†·Éù·É° ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò' : 'Check cottages in Bakhmaro')}"
        },
        {
          "line": 624,
          "keywords": [
            "cottage"
          ],
          "text": "{language === 'ka' ? '·É®·Éî·Éê·Éõ·Éù·É¨·Éõ·Éî ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò' : 'Check cottages'}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/AIModeContext.tsx",
      "occurrences": [
        {
          "line": 44,
          "keywords": [
            "provider"
          ],
          "text": "export const AIModeProvider = ({ children }: { children: ReactNode }) => {"
        },
        {
          "line": 83,
          "keywords": [
            "provider"
          ],
          "text": "return <AIModeContext.Provider value={value}>{children}</AIModeContext.Provider>;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/AssistantModeContext.tsx",
      "occurrences": [
        {
          "line": 116,
          "keywords": [
            "provider"
          ],
          "text": "export const AssistantModeProvider = ({ children }: { children: ReactNode }) => {"
        },
        {
          "line": 257,
          "keywords": [
            "provider"
          ],
          "text": "return <AssistantModeContext.Provider value={value}>{children}</AssistantModeContext.Provider>;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/AuthContext.tsx",
      "occurrences": [
        {
          "line": 24,
          "keywords": [
            "booking"
          ],
          "text": "import type { AuthContextType, BookingUserData, User, UserRole } from './AuthContext.types';"
        },
        {
          "line": 25,
          "keywords": [
            "booking"
          ],
          "text": "export type { UserRole, AuthContextType, BookingUserData, User } from './AuthContext.types';"
        },
        {
          "line": 47,
          "keywords": [
            "provider"
          ],
          "text": "export const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {"
        },
        {
          "line": 345,
          "keywords": [
            "booking"
          ],
          "text": "const createUserDocument = async (firebaseUser: FirebaseUser, role: UserRole = 'CUSTOMER', additionalData?: BookingUserData) => {"
        },
        {
          "line": 362,
          "keywords": [
            "notification"
          ],
          "text": "notifications: { email: true, sms: !!additionalData?.phoneNumber, push: false },"
        },
        {
          "line": 366,
          "keywords": [
            "booking"
          ],
          "text": "totalBookings: 0,"
        },
        {
          "line": 368,
          "keywords": [
            "booking"
          ],
          "text": "registrationSource: 'booking_form'"
        },
        {
          "line": 678,
          "keywords": [
            "booking"
          ],
          "text": "const register = async (email: string, password: string, role: UserRole = 'CUSTOMER', additionalData?: BookingUserData) => {"
        },
        {
          "line": 868,
          "keywords": [
            "provider"
          ],
          "text": "} else if (currentUserRole === 'PROVIDER') {"
        },
        {
          "line": 869,
          "keywords": [
            "provider"
          ],
          "text": "logoutTarget = '/login/provider';"
        },
        {
          "line": 870,
          "keywords": [
            "provider"
          ],
          "text": "console.log('üîß [AUTH] PROVIDER logout - redirecting to provider login');"
        },
        {
          "line": 963,
          "keywords": [
            "booking"
          ],
          "text": "// Booking integration methods - simplified"
        },
        {
          "line": 964,
          "keywords": [
            "booking"
          ],
          "text": "const registerFromBookingForm = async (userData: BookingUserData): Promise<User> => {"
        },
        {
          "line": 982,
          "keywords": [
            "booking"
          ],
          "text": "// SOL-431: Update route advice after registration from booking form"
        },
        {
          "line": 1329,
          "keywords": [
            "booking"
          ],
          "text": "registerFromBookingForm,"
        },
        {
          "line": 1361,
          "keywords": [
            "provider"
          ],
          "text": "return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/AuthContext.types.ts",
      "occurrences": [
        {
          "line": 1,
          "keywords": [
            "provider"
          ],
          "text": "export type UserRole = 'CUSTOMER' | 'PROVIDER' | 'PROVIDER_ADMIN' | 'SUPER_ADMIN';"
        },
        {
          "line": 22,
          "keywords": [
            "booking"
          ],
          "text": "export interface BookingUserData {"
        },
        {
          "line": 36,
          "keywords": [
            "booking"
          ],
          "text": "register: (email: string, password: string, role?: UserRole, additionalData?: BookingUserData) => Promise<void>;"
        },
        {
          "line": 44,
          "keywords": [
            "booking"
          ],
          "text": "registerFromBookingForm: (userData: BookingUserData) => Promise<User>;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/DebugContext.tsx",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "interface DebugProviderProps {"
        },
        {
          "line": 11,
          "keywords": [
            "provider"
          ],
          "text": "export const DebugProvider: React.FC<DebugProviderProps> = ({ children }) => {"
        },
        {
          "line": 50,
          "keywords": [
            "provider"
          ],
          "text": "<DebugContext.Provider value={value}>"
        },
        {
          "line": 52,
          "keywords": [
            "provider"
          ],
          "text": "</DebugContext.Provider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/DevConsoleContext.tsx",
      "occurrences": [
        {
          "line": 6,
          "keywords": [
            "provider"
          ],
          "text": "// Provider component props"
        },
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "interface DevConsoleProviderProps {"
        },
        {
          "line": 11,
          "keywords": [
            "provider"
          ],
          "text": "// Provider component"
        },
        {
          "line": 12,
          "keywords": [
            "provider"
          ],
          "text": "export const DevConsoleProvider: React.FC<DevConsoleProviderProps> = ({ children }) => {"
        },
        {
          "line": 55,
          "keywords": [
            "provider"
          ],
          "text": "<DevConsoleContext.Provider value={contextValue}>"
        },
        {
          "line": 57,
          "keywords": [
            "provider"
          ],
          "text": "</DevConsoleContext.Provider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/FilePreviewProvider.tsx",
      "occurrences": [
        {
          "line": 2,
          "keywords": [
            "provider"
          ],
          "text": "* Unified File Preview Provider"
        },
        {
          "line": 13,
          "keywords": [
            "provider"
          ],
          "text": "interface FilePreviewProviderProps {"
        },
        {
          "line": 19,
          "keywords": [
            "provider"
          ],
          "text": "export const FilePreviewProvider: React.FC<FilePreviewProviderProps> = ({"
        },
        {
          "line": 230,
          "keywords": [
            "provider"
          ],
          "text": "<FilePreviewContext.Provider value={value}>"
        },
        {
          "line": 232,
          "keywords": [
            "provider"
          ],
          "text": "</FilePreviewContext.Provider>"
        },
        {
          "line": 236,
          "keywords": [
            "provider"
          ],
          "text": "export default FilePreviewProvider;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/PermissionsContext.tsx",
      "occurrences": [
        {
          "line": 30,
          "keywords": [
            "provider"
          ],
          "text": "interface PermissionsProviderProps {"
        },
        {
          "line": 44,
          "keywords": [
            "provider"
          ],
          "text": "export const PermissionsProvider: React.FC<PermissionsProviderProps> = ({ children }) => {"
        },
        {
          "line": 83,
          "keywords": [
            "provider"
          ],
          "text": "<PermissionsContext.Provider value={contextValue}>"
        },
        {
          "line": 85,
          "keywords": [
            "provider"
          ],
          "text": "</PermissionsContext.Provider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/ThemeContext.tsx",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "interface ThemeProviderProps {"
        },
        {
          "line": 11,
          "keywords": [
            "provider"
          ],
          "text": "export const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {"
        },
        {
          "line": 73,
          "keywords": [
            "provider"
          ],
          "text": "<ThemeContext.Provider value={value}>"
        },
        {
          "line": 75,
          "keywords": [
            "provider"
          ],
          "text": "</ThemeContext.Provider>"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useAIMode.ts",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('useAIMode must be used within an AIModeProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useAssistantMode.ts",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('useAssistantMode must be used within an AssistantModeProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useAuth.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "console.error('‚ùå [AUTH] useAuth must be used within an AuthProvider');"
        },
        {
          "line": 8,
          "keywords": [
            "provider"
          ],
          "text": "console.error('‚ùå [AUTH] Make sure App is wrapped with AuthProvider');"
        },
        {
          "line": 15,
          "keywords": [
            "provider"
          ],
          "text": "login: async () => ({ success: false, error: 'AuthProvider not found' }),"
        },
        {
          "line": 36,
          "keywords": [
            "provider"
          ],
          "text": "reason: 'AuthProvider not found',"
        },
        {
          "line": 56,
          "keywords": [
            "booking"
          ],
          "text": "registerFromBookingForm: async () => ({ id: '', email: '', role: 'CUSTOMER', authMethod: 'firebase' }),"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useDebug.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('useDebug must be used within a DebugProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useDevConsole.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('useDevConsole must be used within a DevConsoleProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useFilePreview.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('useFilePreview must be used within a FilePreviewProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/usePermissions.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('usePermissions must be used within a PermissionsProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/contexts/useTheme.ts",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "throw new Error('useTheme must be used within a ThemeProvider');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/features/devconsole-v2/components/AdvancedFilters.tsx",
      "occurrences": [
        {
          "line": 48,
          "keywords": [
            "booking"
          ],
          "text": "{ value: '/api/booking/*', label: 'üìÖ Booking APIs', color: 'bg-blue-100 text-blue-800' },"
        }
      ]
    },
    {
      "path": "ai-frontend/src/features/devconsole-v2/components/RealTimeErrorMonitor.tsx",
      "occurrences": [
        {
          "line": 205,
          "keywords": [
            "notification"
          ],
          "text": "{language === 'ka' ? '·ÉÆ·Éõ·Éò·É° ·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò' : 'Sound Notifications'}"
        },
        {
          "line": 347,
          "keywords": [
            "notification"
          ],
          "text": "{/* Toast Notifications for Critical Errors */}"
        }
      ]
    },
    {
      "path": "ai-frontend/src/hooks/useBackupService.ts",
      "occurrences": [
        {
          "line": 53,
          "keywords": [
            "provider"
          ],
          "text": "provider: string | null;"
        },
        {
          "line": 95,
          "keywords": [
            "provider"
          ],
          "text": "provider: (data as any).provider ?? null,"
        },
        {
          "line": 107,
          "keywords": [
            "provider"
          ],
          "text": "provider: null,"
        },
        {
          "line": 118,
          "keywords": [
            "provider"
          ],
          "text": "provider: null,"
        }
      ]
    },
    {
      "path": "ai-frontend/src/hooks/useStubData.ts",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "provider"
          ],
          "text": "// No stub data - all providers should be real"
        },
        {
          "line": 6,
          "keywords": [
            "provider"
          ],
          "text": "export const useStubData = (providerId: string | undefined) => {"
        },
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "const [provider, setProvider] = useState<User | null>(null);"
        },
        {
          "line": 12,
          "keywords": [
            "provider"
          ],
          "text": "console.time('STUB: Provider data fetch');"
        },
        {
          "line": 16,
          "keywords": [
            "provider"
          ],
          "text": "setProvider(null);"
        },
        {
          "line": 17,
          "keywords": [
            "provider"
          ],
          "text": "setError('No stub data available - use real providers only');"
        },
        {
          "line": 19,
          "keywords": [
            "provider"
          ],
          "text": "console.timeEnd('STUB: Provider data fetch');"
        },
        {
          "line": 23,
          "keywords": [
            "provider"
          ],
          "text": "}, [providerId]);"
        },
        {
          "line": 25,
          "keywords": [
            "provider"
          ],
          "text": "const updateProvider = async (updates: Partial<User>) => {"
        },
        {
          "line": 26,
          "keywords": [
            "provider"
          ],
          "text": "console.time('STUB: Provider update');"
        },
        {
          "line": 30,
          "keywords": [
            "provider"
          ],
          "text": "console.timeEnd('STUB: Provider update');"
        },
        {
          "line": 37,
          "keywords": [
            "provider"
          ],
          "text": "provider,"
        },
        {
          "line": 40,
          "keywords": [
            "provider"
          ],
          "text": "updateProvider"
        }
      ]
    },
    {
      "path": "ai-frontend/src/i18n/locales/en.json",
      "occurrences": [
        {
          "line": 677,
          "keywords": [
            "cottage"
          ],
          "text": "\"text\": \"Hi! I'm Gurulo, your Bakhmaro trip guide. Share when you're visiting and I'll line up cozy cottages and ideas.\","
        },
        {
          "line": 679,
          "keywords": [
            "cottage"
          ],
          "text": "{ \"label\": \"Next weekend availability\", \"value\": \"Check Bakhmaro cottages next weekend\" },"
        },
        {
          "line": 685,
          "keywords": [
            "cottage"
          ],
          "text": "\"onlyConsumerTopics\": \"I'm here to help with guest topics only‚ÄîBakhmaro cottages, pricing, weather, routes, and tours. I can't assist with technical questions.\","
        }
      ]
    },
    {
      "path": "ai-frontend/src/index.css",
      "occurrences": [
        {
          "line": 372,
          "keywords": [
            "provider"
          ],
          "text": ".admin-role-badge--provider {"
        },
        {
          "line": 385,
          "keywords": [
            "provider"
          ],
          "text": ".dark .admin-role-badge--provider {"
        },
        {
          "line": 2682,
          "keywords": [
            "calendar"
          ],
          "text": "/* Calendar dark mode improvements */"
        },
        {
          "line": 2683,
          "keywords": [
            "calendar"
          ],
          "text": ".dark .calendar-day {"
        },
        {
          "line": 2688,
          "keywords": [
            "calendar"
          ],
          "text": ".dark .calendar-day:hover {"
        },
        {
          "line": 2743,
          "keywords": [
            "booking"
          ],
          "text": "/* Custom animations for booking completion glow effects */"
        },
        {
          "line": 2906,
          "keywords": [
            "cottage"
          ],
          "text": "/* Consistent aspect ratios for cottage images */"
        },
        {
          "line": 2907,
          "keywords": [
            "cottage"
          ],
          "text": ".cottage-image {"
        },
        {
          "line": 3038,
          "keywords": [
            "calendar"
          ],
          "text": "/* Custom Calendar Styles */"
        },
        {
          "line": 3039,
          "keywords": [
            "calendar"
          ],
          "text": ".custom-calendar {"
        },
        {
          "line": 3043,
          "keywords": [
            "calendar"
          ],
          "text": ".custom-calendar .calendar-day {"
        },
        {
          "line": 3047,
          "keywords": [
            "calendar"
          ],
          "text": ".custom-calendar .calendar-day:hover {"
        },
        {
          "line": 3059,
          "keywords": [
            "calendar"
          ],
          "text": "input[type=\"date\"]::-webkit-calendar-picker-indicator {"
        },
        {
          "line": 3066,
          "keywords": [
            "calendar"
          ],
          "text": ".georgian-calendar {"
        },
        {
          "line": 3070,
          "keywords": [
            "calendar"
          ],
          "text": ".georgian-calendar .month-name {"
        },
        {
          "line": 3075,
          "keywords": [
            "calendar"
          ],
          "text": ".georgian-calendar .day-name {"
        },
        {
          "line": 3081,
          "keywords": [
            "calendar"
          ],
          "text": "/* Smooth animations for calendar navigation */"
        },
        {
          "line": 3082,
          "keywords": [
            "calendar"
          ],
          "text": ".calendar-fade-enter {"
        },
        {
          "line": 3087,
          "keywords": [
            "calendar"
          ],
          "text": ".calendar-fade-enter-active {"
        },
        {
          "line": 3093,
          "keywords": [
            "calendar"
          ],
          "text": ".calendar-fade-exit {"
        },
        {
          "line": 3098,
          "keywords": [
            "calendar"
          ],
          "text": ".calendar-fade-exit-active {"
        },
        {
          "line": 3264,
          "keywords": [
            "calendar"
          ],
          "text": "/* Compact calendar specific styles */"
        },
        {
          "line": 3265,
          "keywords": [
            "calendar"
          ],
          "text": ".compact-calendar {"
        },
        {
          "line": 3270,
          "keywords": [
            "calendar"
          ],
          "text": ".compact-calendar .calendar-day {"
        },
        {
          "line": 3276,
          "keywords": [
            "calendar"
          ],
          "text": ".compact-calendar .calendar-header {"
        },
        {
          "line": 3280,
          "keywords": [
            "calendar"
          ],
          "text": ".compact-calendar .calendar-body {"
        },
        {
          "line": 3411,
          "keywords": [
            "booking"
          ],
          "text": "/* Booking card responsive fixes */"
        }
      ]
    },
    {
      "path": "ai-frontend/src/lib/firebase/auth.ts",
      "occurrences": [
        {
          "line": 15,
          "keywords": [
            "provider"
          ],
          "text": "PhoneAuthProvider,"
        },
        {
          "line": 38,
          "keywords": [
            "provider"
          ],
          "text": "PhoneAuthProvider,"
        },
        {
          "line": 54,
          "keywords": [
            "provider"
          ],
          "text": "AuthProvider,"
        }
      ]
    },
    {
      "path": "ai-frontend/src/pages/AdminPasskeyLogin.tsx",
      "occurrences": [
        {
          "line": 32,
          "keywords": [
            "provider"
          ],
          "text": "const oauthProviders = ["
        },
        {
          "line": 261,
          "keywords": [
            "provider"
          ],
          "text": "{oauthProviders.map(({ name, Icon }) => ("
        }
      ]
    },
    {
      "path": "ai-frontend/src/pages/DeviceManagement.tsx",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "calendar"
          ],
          "text": "import { Shield, Smartphone, Monitor, Trash2, Calendar, MapPin, Info, CheckCircle, AlertTriangle } from 'lucide-react';"
        },
        {
          "line": 110,
          "keywords": [
            "provider"
          ],
          "text": "case 'PROVIDER': return 'bg-blue-100 text-blue-800 border-blue-200';"
        },
        {
          "line": 259,
          "keywords": [
            "provider"
          ],
          "text": "device.registeredRole === 'PROVIDER' ? '·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò' :"
        },
        {
          "line": 263,
          "keywords": [
            "calendar"
          ],
          "text": "<Calendar className=\"h-4 w-4 mr-1\" />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/pages/ProviderLogin.tsx",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "const ProviderLogin: React.FC = () => {"
        },
        {
          "line": 23,
          "keywords": [
            "provider"
          ],
          "text": "navigate('/provider/dashboard');"
        },
        {
          "line": 101,
          "keywords": [
            "provider"
          ],
          "text": "onClick={() => navigate('/register?role=provider')}"
        },
        {
          "line": 122,
          "keywords": [
            "provider"
          ],
          "text": "export default ProviderLogin;"
        }
      ]
    },
    {
      "path": "ai-frontend/src/pages/RoleSelection.tsx",
      "occurrences": [
        {
          "line": 99,
          "keywords": [
            "provider"
          ],
          "text": "const ProviderModal = ({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) => {"
        },
        {
          "line": 123,
          "keywords": [
            "provider"
          ],
          "text": "navigate('/register?role=provider');"
        },
        {
          "line": 373,
          "keywords": [
            "provider"
          ],
          "text": "{/* Provider */}"
        },
        {
          "line": 375,
          "keywords": [
            "provider"
          ],
          "text": "onClick={() => handleRoleSelect('provider')}"
        },
        {
          "line": 426,
          "keywords": [
            "provider"
          ],
          "text": "<ProviderModal isOpen={selectedModal === 'provider'} onClose={closeModal} />"
        }
      ]
    },
    {
      "path": "ai-frontend/src/schemas/validationSchemas.ts",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "booking"
          ],
          "text": "// Booking validation schema"
        },
        {
          "line": 5,
          "keywords": [
            "booking"
          ],
          "text": "export const bookingSchema = z.object({"
        },
        {
          "line": 13,
          "keywords": [
            "provider"
          ],
          "text": "providerId: z.string().min(1, '·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò ·Éê·É£·É™·Éò·Éö·Éî·Éë·Éî·Éö·Éò·Éê'),"
        },
        {
          "line": 15,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "resourceType: z.enum(['cottage', 'hotel', 'vehicle'], {"
        },
        {
          "line": 25,
          "keywords": [
            "cottage"
          ],
          "text": "// Cottage validation schema"
        },
        {
          "line": 26,
          "keywords": [
            "cottage"
          ],
          "text": "export const cottageSchema = z.object({"
        },
        {
          "line": 39,
          "keywords": [
            "provider"
          ],
          "text": "providerId: z.string().min(1, '·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò ·Éê·É£·É™·Éò·Éö·Éî·Éë·Éî·Éö·Éò·Éê'),"
        },
        {
          "line": 48,
          "keywords": [
            "vehicle"
          ],
          "text": "// Vehicle validation schema"
        },
        {
          "line": 49,
          "keywords": [
            "vehicle"
          ],
          "text": "export const vehicleSchema = z.object({"
        },
        {
          "line": 57,
          "keywords": [
            "provider"
          ],
          "text": "providerId: z.string().min(1, '·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò ·Éê·É£·É™·Éò·Éö·Éî·Éë·Éî·Éö·Éò·Éê'),"
        },
        {
          "line": 70,
          "keywords": [
            "provider"
          ],
          "text": "role: z.enum(['CUSTOMER', 'PROVIDER', 'ADMIN', 'SUPER_ADMIN'])"
        },
        {
          "line": 73,
          "keywords": [
            "commission"
          ],
          "text": "// Commission validation schema"
        },
        {
          "line": 74,
          "keywords": [
            "commission"
          ],
          "text": "export const commissionSchema = z.object({"
        },
        {
          "line": 75,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: z.string().min(1, '·ÉØ·Éê·Éï·É®·Éú·Éò·É° ID ·Éê·É£·É™·Éò·Éö·Éî·Éë·Éî·Éö·Éò·Éê'),"
        },
        {
          "line": 78,
          "keywords": [
            "commission"
          ],
          "text": "commissionAmount: z.number().positive('·Éô·Éù·Éõ·Éò·É°·Éò·Éò·É° ·Éó·Éê·Éú·ÉÆ·Éê ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É° ·Éì·Éê·Éì·Éî·Éë·Éò·Éó·Éò'),"
        },
        {
          "line": 82,
          "keywords": [
            "hotel"
          ],
          "text": "// Hotel validation schema"
        },
        {
          "line": 83,
          "keywords": [
            "hotel"
          ],
          "text": "export const hotelSchema = z.object({"
        },
        {
          "line": 91,
          "keywords": [
            "provider"
          ],
          "text": "providerId: z.string().min(1, '·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò ·Éê·É£·É™·Éò·Éö·Éî·Éë·Éî·Éö·Éò·Éê'),"
        },
        {
          "line": 99,
          "keywords": [
            "booking"
          ],
          "text": "export const validateBooking = (data: unknown) => bookingSchema.safeParse(data);"
        },
        {
          "line": 100,
          "keywords": [
            "cottage"
          ],
          "text": "export const validateCottage = (data: unknown) => cottageSchema.safeParse(data);"
        },
        {
          "line": 101,
          "keywords": [
            "vehicle"
          ],
          "text": "export const validateVehicle = (data: unknown) => vehicleSchema.safeParse(data);"
        },
        {
          "line": 103,
          "keywords": [
            "commission"
          ],
          "text": "export const validateCommission = (data: unknown) => commissionSchema.safeParse(data);"
        },
        {
          "line": 104,
          "keywords": [
            "hotel"
          ],
          "text": "export const validateHotel = (data: unknown) => hotelSchema.safeParse(data);"
        }
      ]
    },
    {
      "path": "ai-frontend/src/services/adminAiApi.ts",
      "occurrences": [
        {
          "line": 78,
          "keywords": [
            "provider"
          ],
          "text": "provider: string;"
        },
        {
          "line": 83,
          "keywords": [
            "provider"
          ],
          "text": "const payload = await request<{ backupMode: boolean; forced: boolean; provider: string; updatedAt: string }>('/fallback');"
        },
        {
          "line": 87,
          "keywords": [
            "provider"
          ],
          "text": "provider: payload.provider ?? 'offline',"
        },
        {
          "line": 93,
          "keywords": [
            "provider"
          ],
          "text": "const payload = await request<{ backupMode: boolean; forced?: boolean; provider?: string; updatedAt?: string }>("
        },
        {
          "line": 104,
          "keywords": [
            "provider"
          ],
          "text": "provider: payload.provider ?? 'offline',"
        }
      ]
    },
    {
      "path": "ai-frontend/src/services/globalValidationService.ts",
      "occurrences": [
        {
          "line": 40,
          "keywords": [
            "cottage"
          ],
          "text": "validateCottageForm(data: any): ValidationResult {"
        },
        {
          "line": 41,
          "keywords": [
            "cottage"
          ],
          "text": "return this.validateForm(data, 'cottage');"
        },
        {
          "line": 44,
          "keywords": [
            "booking"
          ],
          "text": "validateBookingForm(data: any): ValidationResult {"
        },
        {
          "line": 45,
          "keywords": [
            "booking"
          ],
          "text": "return this.validateForm(data, 'booking');"
        },
        {
          "line": 48,
          "keywords": [
            "vehicle"
          ],
          "text": "validateVehicleForm(data: any): ValidationResult {"
        },
        {
          "line": 49,
          "keywords": [
            "vehicle"
          ],
          "text": "return this.validateForm(data, 'vehicle');"
        },
        {
          "line": 52,
          "keywords": [
            "hotel"
          ],
          "text": "validateHotelForm(data: any): ValidationResult {"
        },
        {
          "line": 53,
          "keywords": [
            "hotel"
          ],
          "text": "return this.validateForm(data, 'hotel');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/services/messagingService.ts",
      "occurrences": [
        {
          "line": 70,
          "keywords": [
            "booking"
          ],
          "text": "bookingReference: subject"
        },
        {
          "line": 82,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "// Helper function to get provider's limited conversations (only their bookings and support)"
        },
        {
          "line": 83,
          "keywords": [
            "provider"
          ],
          "text": "export const getProviderConversations = async (providerId: string): Promise<Conversation[]> => {"
        },
        {
          "line": 87,
          "keywords": [
            "provider"
          ],
          "text": "// Get conversations where provider is a participant"
        },
        {
          "line": 88,
          "keywords": [
            "provider"
          ],
          "text": "const providerConversationsQuery = query("
        },
        {
          "line": 90,
          "keywords": [
            "provider"
          ],
          "text": "where('participantIds', 'array-contains', providerId),"
        },
        {
          "line": 94,
          "keywords": [
            "provider"
          ],
          "text": "const snapshot = await getDocs(providerConversationsQuery);"
        },
        {
          "line": 97,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "// Get provider's own bookings to validate conversation access"
        },
        {
          "line": 98,
          "keywords": [
            "booking"
          ],
          "text": "const bookingsRef = collection(db, 'bookings');"
        },
        {
          "line": 99,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "const providerBookingsQuery = query("
        },
        {
          "line": 100,
          "keywords": [
            "booking"
          ],
          "text": "bookingsRef,"
        },
        {
          "line": 101,
          "keywords": [
            "provider"
          ],
          "text": "where('providerId', '==', providerId)"
        },
        {
          "line": 103,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "const providerBookings = await getDocs(providerBookingsQuery);"
        },
        {
          "line": 104,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "const providerBookingIds = new Set(providerBookings.docs.map(doc => doc.id));"
        },
        {
          "line": 109,
          "keywords": [
            "provider"
          ],
          "text": "// Provider can only see:"
        },
        {
          "line": 111,
          "keywords": [
            "booking"
          ],
          "text": "// 2. Booking conversations for their own bookings"
        },
        {
          "line": 114,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "(data.type === 'booking' && data.bookingId && providerBookingIds.has(data.bookingId));"
        },
        {
          "line": 120,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId,"
        },
        {
          "line": 143,
          "keywords": [
            "provider"
          ],
          "text": "console.error('Error fetching provider conversations:', error);"
        },
        {
          "line": 176,
          "keywords": [
            "booking"
          ],
          "text": "type: 'booking' | 'support' | 'general';"
        },
        {
          "line": 177,
          "keywords": [
            "booking"
          ],
          "text": "bookingId?: string;"
        },
        {
          "line": 190,
          "keywords": [
            "booking"
          ],
          "text": "bookingReference?: string;"
        },
        {
          "line": 263,
          "keywords": [
            "provider"
          ],
          "text": "// For provider admins, use the restricted function with fallback"
        },
        {
          "line": 264,
          "keywords": [
            "provider"
          ],
          "text": "if (userRole === 'PROVIDER_ADMIN') {"
        },
        {
          "line": 266,
          "keywords": [
            "provider"
          ],
          "text": "return await getProviderConversations(userId);"
        },
        {
          "line": 268,
          "keywords": [
            "provider"
          ],
          "text": "console.warn('‚ö†Ô∏è Provider conversations failed, using fallback:', error);"
        },
        {
          "line": 290,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId,"
        },
        {
          "line": 323,
          "keywords": [
            "provider"
          ],
          "text": "// This is also the fallback for failed provider/admin queries"
        },
        {
          "line": 351,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId,"
        },
        {
          "line": 651,
          "keywords": [
            "booking"
          ],
          "text": "type: 'booking' | 'support' | 'general',"
        },
        {
          "line": 656,
          "keywords": [
            "booking"
          ],
          "text": "bookingId?: string;"
        },
        {
          "line": 658,
          "keywords": [
            "booking"
          ],
          "text": "bookingReference?: string;"
        },
        {
          "line": 831,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId,"
        },
        {
          "line": 902,
          "keywords": [
            "provider"
          ],
          "text": "if (!userData || !['SUPER_ADMIN', 'ADMIN', 'PROVIDER_ADMIN'].includes(userData.role)) {"
        },
        {
          "line": 1137,
          "keywords": [
            "provider"
          ],
          "text": "const isAdmin = userData && ['SUPER_ADMIN', 'ADMIN', 'PROVIDER_ADMIN'].includes(userData.role);"
        },
        {
          "line": 1325,
          "keywords": [
            "provider"
          ],
          "text": "if (userRole === 'PROVIDER_ADMIN') {"
        },
        {
          "line": 1326,
          "keywords": [
            "provider"
          ],
          "text": "// Provider admins see only conversations related to their properties"
        },
        {
          "line": 1340,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: data.bookingId,"
        },
        {
          "line": 1367,
          "keywords": [
            "provider"
          ],
          "text": "console.error('Error fetching provider conversations:', error);"
        }
      ]
    },
    {
      "path": "ai-frontend/src/types/autoImprove.ts",
      "occurrences": [
        {
          "line": 114,
          "keywords": [
            "notification"
          ],
          "text": "export interface AutoImproveNotificationSettings {"
        },
        {
          "line": 128,
          "keywords": [
            "notification"
          ],
          "text": "notificationSettings: AutoImproveNotificationSettings;"
        },
        {
          "line": 142,
          "keywords": [
            "notification"
          ],
          "text": "notificationSettings: {"
        }
      ]
    },
    {
      "path": "ai-frontend/src/types/user.ts",
      "occurrences": [
        {
          "line": 1,
          "keywords": [
            "provider"
          ],
          "text": "export type UserRole = 'SUPER_ADMIN' | 'ADMIN' | 'PROVIDER_ADMIN' | 'CUSTOMER';"
        }
      ]
    },
    {
      "path": "ai-frontend/src/utils/createTestLogs.ts",
      "occurrences": [
        {
          "line": 67,
          "keywords": [
            "cottage"
          ],
          "text": "await logger.logAPI('TestModule', 'GET /api/cottages', 200, undefined, 'test-user-id', 'test@example.com');"
        },
        {
          "line": 68,
          "keywords": [
            "booking"
          ],
          "text": "await logger.logAPI('TestModule', 'POST /api/bookings', 201, undefined, 'test-user-id', 'test@example.com');"
        },
        {
          "line": 71,
          "keywords": [
            "cottage"
          ],
          "text": "await logger.logAPI('TestModule', 'PUT /api/cottages/1', 500, undefined, 'test-user-id', 'test@example.com');"
        }
      ]
    },
    {
      "path": "ai-frontend/src/utils/georgianCulturalAdapter.ts",
      "occurrences": [
        {
          "line": 227,
          "keywords": [
            "bank"
          ],
          "text": "class GeorgianBankPaymentService {"
        },
        {
          "line": 231,
          "keywords": [
            "bank"
          ],
          "text": "? 'https://api.libertybank.ge'"
        },
        {
          "line": 232,
          "keywords": [
            "bank"
          ],
          "text": ": 'https://sandbox.libertybank.ge';"
        }
      ]
    },
    {
      "path": "ai-frontend/src/utils/validation.ts",
      "occurrences": [
        {
          "line": 300,
          "keywords": [
            "bank"
          ],
          "text": "const bankAndAccount = cleanIban.substring(4);"
        },
        {
          "line": 301,
          "keywords": [
            "bank"
          ],
          "text": "if (bankAndAccount.length !== 18) {"
        },
        {
          "line": 305,
          "keywords": [
            "bank"
          ],
          "text": "if (!/^[A-Z0-9]{18}$/.test(bankAndAccount)) {"
        }
      ]
    },
    {
      "path": "ai-frontend/tsconfig.app.tsbuildinfo",
      "occurrences": [
        {
          "line": 1,
          "keywords": [
            "bank",
            "booking",
            "calendar",
            "horse",
            "hotel",
            "notification",
            "provider",
            "snowmobile",
            "vehicle"
          ],
          "text": "{\"root\":[\"./src/adminlogs.tsx\",\"./src/adminmyprofile.tsx\",\"./src/adminpanel.tsx\",\"./src/app.tsx\",\"./src/horseform.tsx\",\"./src/hotelbookingform.tsx\",\"./src/layout.tsx\",\"./src/login.tsx\",\"./src/snowmobileform.tsx\",\"./src/vehiclebookingform.tsx\",\"./src/firebase.ts\",\"./src/firebaseconfig.ts\",\"./src/global.d.ts\",\"./src/main.tsx\",\"./src/setupeventsource.ts\",\"./src/setupfetch.ts\",\"./src/vite-env.d.ts\",\"./src/api/autoimprove.ts\",\"./src/components/aiassistantenhanced.tsx\",\"./src/components/aidashboardshell.tsx\",\"./src/components/aideveloperpanel.tsx\",\"./src/components/aimemorymanager.tsx\",\"./src/components/airolloutmanager.tsx\",\"./src/components/aiservicestatus.tsx\",\"./src/components/activitylog.tsx\",\"./src/components/adminmessagingdashboard.tsx\",\"./src/components/advancedsearch.tsx\",\"./src/components/autoupdatecontrol.tsx\",\"./src/components/autoupdatemonitoringdashboard.tsx\",\"./src/components/backupsystemdashboard.tsx\",\"./src/components/bankinfoform.tsx\",\"./src/components/bookingmodal.tsx\",\"./src/components/calendar.tsx\",\"./src/components/canarydeploymentpanel.tsx\",\"./src/components/chatpanel.tsx\",\"./src/components/checkpointmanager.tsx\",\"./src/components/codeeditor.tsx\",\"./src/components/consolelogger.ts\",\"./src/components/devconsolepanel.tsx\",\"./src/components/emptystate.tsx\",\"./src/components/enhancedmessagerenderer.tsx\",\"./src/components/enhancedmessagingsystem.tsx\",\"./src/components/enterprisecollaboration.tsx\",\"./src/components/errorboundary.tsx\",\"./src/components/errortoastcontainer.tsx\",\"./src/components/explorerpanel.tsx\",\"./src/components/fallbackfilelist.tsx\",\"./src/components/filepreview.tsx\",\"./src/components/filetree.tsx\",\"./src/components/fileviewer.tsx\",\"./src/components/footer.tsx\",\"./src/components/georgianprogrammingterminology.tsx\",\"./src/components/header.tsx\",\"./src/components/horsecard.tsx\",\"./src/components/liveagentview.tsx\",\"./src/components/liveprogresspanel.tsx\",\"./src/components/messagerenderer.tsx\",\"./src/components/messagingnotificationsystem.tsx\",\"./src/components/messagingsystem.tsx\",\"./src/components/ownerfilter.tsx\",\"./src/components/performancedashboard.tsx\",\"./src/components/performancemetrics.tsx\",\"./src/components/planbuildtoggle.tsx\",\"./src/components/postapplyhealthcheck.tsx\",\"./src/components/postapplyverification.tsx\",\"./src/components/protectedroute.tsx\",\"./src/components/reactdevtoolsdebugger.tsx\",\"./src/components/replitassistantpanel.tsx\",\"./src/components/replitinterface.tsx\",\"./src/components/roleselectionwithdebug.tsx\",\"./src/components/searchinput.tsx\",\"./src/components/securecopybutton.tsx\",\"./src/components/securityaudittab.tsx\",\"./src/components/sessionsidebar.tsx\",\"./src/components/snowmobilecard.tsx\",\"./src/components/statusfilter.tsx\",\"./src/components/switch.tsx\",\"./src/components/systemmonitoringdashboard.tsx\",\"./src/components/termsagreementmodal.tsx\",\"./src/components/themetoggle.tsx\",\"./src/components/userprofile.tsx\",\"./src/components/validationmodal.tsx\",\"./src/components/viewtoggle.tsx\",\"./src/components/warningtoast.tsx\",\"./src/components/aideveloper/autoimprove/aiassistantactivitycard.tsx\",\"./src/components/aideveloper/autoimprove/autoimproveemptystate.tsx\",\"./src/components/aideveloper/autoimprove/brainstatuscard.tsx\",\"./src/components/aideveloper/autoimprove/filterbar.tsx\",\"./src/components/aideveloper/autoimprove/gurulogauge.tsx\",\"./src/components/aideveloper/autoimprove/gurulometricbadge.tsx\",\"./src/components/aideveloper/autoimprove/improvesidebar.tsx\",\"./src/components/aideveloper/autoimprove/metriccard.tsx\",\"./src/components/aideveloper/autoimprove/metricstrip.tsx\",\"./src/components/aideveloper/autoimprove/theme.ts\",\"./src/components/aideveloper/autoimprove/types.ts\",\"./src/components/aideveloper/autoimprove/brain/controls.tsx\",\"./src/components/aideveloper/autoimprove/brain/history.tsx\",\"./src/components/aideveloper/autoimprove/brain/lastoutcome.tsx\",\"./src/components/aideveloper/autoimprove/brain/livefeed.tsx\",\"./src/components/aideveloper/autoimprove/brain/metrics.tsx\",\"./src/components/aideveloper/autoimprove/brain/nextaction.tsx\",\"./src/components/aideveloper/autoimprove/brain/statusstrip.tsx\",\"./src/components/aideveloper/autoimprove/brain/thinkingnow.tsx\",\"./src/components/aideveloper/autoimprove/brain/types.ts\",\"./src/components/aideveloper/helpers/checklistbadge.tsx\",\"./src/components/aideveloper/helpers/diffviewer.tsx\",\"./src/components/aideveloper/helpers/riskbadge.tsx\",\"./src/components/aideveloper/helpers/statusindicators.tsx\",\"./src/components/aideveloper/helpers/index.ts\",\"./src/components/aideveloper/memory/memorycontrolspanel.tsx\",\"./src/components/aideveloper/tabs/autoimprovetab.tsx\",\"./src/components/aideveloper/tabs/backuptab.tsx\",\"./src/components/aideveloper/tabs/chattab.tsx\",\"./src/components/aideveloper/tabs/consoletab.tsx\",\"./src/components/aideveloper/tabs/explorertab.tsx\",\"./src/components/aideveloper/tabs/githubtab.tsx\",\"./src/components/aideveloper/tabs/logstab.tsx\",\"./src/components/aideveloper/tabs/memorytab.tsx\",\"./src/components/aideveloper/tabs/settingstab.tsx\",\"./src/components/aideveloper/tabs/index.ts\",\"./src/components/aideveloper/tabs/autoimprove/brainpage.tsx\",\"./src/components/aideveloper/tabs/autoimprove/constants/metrictonemap.ts\",\"./src/components/aideveloper/tabs/autoimprove/hooks/useautoimprovemetrics.ts\",\"./src/components/aideveloper/tabs/autoimprove/hooks/usemonitorstatus.ts\",\"./src/components/aideveloper/tabs/secrets/confirmdelete.tsx\",\"./src/components/aideveloper/tabs/secrets/scannerpanel.tsx\",\"./src/components/aideveloper/tabs/secrets/secreteditormodal.tsx\",\"./src/components/aideveloper/tabs/secrets/secretlist.tsx\",\"./src/components/aideveloper/tabs/secrets/secretspage.tsx\",\"./src/components/aideveloper/tabs/secrets/usagesdrawer.tsx\",\"./src/components/aideveloper/tabs/secrets/index.ts\",\"./src/components/aideveloper/tabs/secrets/types.ts\",\"./src/components/aideveloper/tabs/tests/newtestmodal.tsx\",\"./src/components/aideveloper/tabs/tests/testlist.tsx\",\"./src/components/aideveloper/tabs/tests/testrunnerpanel.tsx\",\"./src/components/aideveloper/tabs/tests/testspage.tsx\",\"./src/components/aideveloper/tabs/tests/types.ts\",\"./src/components/aimemorymanager/codepreferences.tsx\",\"./src/components/aimemorymanager/contextactions.tsx\",\"./src/components/aimemorymanager/errorregistry.tsx\",\"./src/components/aimemorymanager/personalinfoeditor.tsx\",\"./src/components/aimemorymanager/rulesmanager.tsx\",\"./src/components/aimemorymanager/statsviewer.tsx\",\"./src/components/aimemorymanager/index.tsx\",\"./src/components/autoimprove/autoimprovetracemonitor.tsx\",\"./src/components/backup/backuptab.tsx\",\"./src/components/chat/composer.tsx\",\"./src/components/chat/diffcard.tsx\",\"./src/components/chat/message.tsx\",\"./src/components/chat/settingsmenu.tsx\",\"./src/components/chat/activity/activitytimeline.tsx\",\"./src/components/chat/activity/commandcard.tsx\",\"./src/components/chat/activity/filechangecard.tsx\",\"./src/components/chat/activity/scancard.tsx\",\"./src/components/gitinterface/gitinterface.tsx\",\"./src/components/gitinterface/index.ts\",\"./src/components/safetyswitch/actionpreviewmodal.tsx\",\"./src/components/safetyswitch/progresstracker.tsx\",\"./src/components/safetyswitch/safetyswitch.tsx\",\"./src/components/safetyswitch/index.ts\",\"./src/components/safetyswitch/types.ts\",\"./src/components/shared/errorcard.tsx\",\"./src/components/admin/aidevelopermanagementpanel.tsx\",\"./src/components/admin/aidiagnosticscenter.tsx\",\"./src/components/admin/ai-panel/analyticspanel.tsx\",\"./src/components/admin/ai-panel/analyticssection.tsx\",\"./src/components/admin/ai-panel/chatconfigsection.tsx\",\"./src/components/admin/ai-panel/fallbackcontrolcard.tsx\",\"./src/components/admin/ai-panel/integrationssection.tsx\",\"./src/components/admin/ai-panel/overviewsection.tsx\",\"./src/components/admin/ai-panel/promptspanel.tsx\",\"./src/components/admin/ai-panel/trendcharts.tsx\",\"./src/components/admin/ai-panel/uicustomizationsection.tsx\",\"./src/components/admin/ai-panel/usermanagementsection.tsx\",\"./src/components/admin/ai-panel/userspanel.tsx\",\"./src/components/admin/ai-panel/constants.ts\",\"./src/components/admin/ai-panel/types.ts\",\"./src/components/file-tree/fileoperations.tsx\",\"./src/components/file-tree/filesearch.tsx\",\"./src/components/file-tree/filetreecore.tsx\",\"./src/components/file-tree/filetreenode.tsx\",\"./src/components/file-tree/tabmanager.tsx\",\"./src/components/file-tree/index.ts\",\"./src/components/futuristic-chat/aichatinterface.tsx\",\"./src/components/futuristic-chat/chatcloud.tsx\",\"./src/components/futuristic-chat/futuristicchatpanel.tsx\",\"./src/components/illustrations/gurulofsqillustration.tsx\",\"./src/components/layout/diagnosticbanner.tsx\",\"./src/components/layout/headertokens.ts\",\"./src/components/ui/card.tsx\",\"./src/config/gurulocore.ts\",\"./src/contexts/aimodecontext.tsx\",\"./src/contexts/assistantmodecontext.tsx\",\"./src/contexts/authcontext.tsx\",\"./src/contexts/authcontext.types.ts\",\"./src/contexts/authcontextobject.ts\",\"./src/contexts/debugcontext.tsx\",\"./src/contexts/debugcontext.types.ts\",\"./src/contexts/debugcontextobject.ts\",\"./src/contexts/devconsolecontext.tsx\",\"./src/contexts/devconsolecontext.types.ts\",\"./src/contexts/devconsolecontextobject.ts\",\"./src/contexts/filepreviewcontext.types.ts\",\"./src/contexts/filepreviewcontextobject.ts\",\"./src/contexts/filepreviewprovider.tsx\",\"./src/contexts/permissionscontext.tsx\",\"./src/contexts/permissionscontext.types.ts\",\"./src/contexts/permissionscontextobject.ts\",\"./src/contexts/themecontext.tsx\",\"./src/contexts/themecontext.types.ts\",\"./src/contexts/themecontextobject.ts\",\"./src/contexts/useaimode.ts\",\"./src/contexts/useassistantmode.ts\",\"./src/contexts/useauth.ts\",\"./src/contexts/usedebug.ts\",\"./src/contexts/usedevconsole.ts\",\"./src/contexts/usefilepreview.ts\",\"./src/contexts/usepermissions.ts\",\"./src/contexts/usetheme.ts\",\"./src/features/browsertesting/testingdashboard.tsx\",\"./src/features/connectors/connectormanager.tsx\",\"./src/features/devconsole/commandpalette.tsx\",\"./src/features/devconsole/consolestream.tsx\",\"./src/features/devconsole/devconsolepage.tsx\",\"./src/features/devconsole/jobspanel.tsx\",\"./src/features/devconsole/metricspanel.tsx\",\"./src/features/devconsole/sidebar.tsx\",\"./src/features/devconsole/statusbar.tsx\",\"./src/features/devconsole/testspanel.tsx\",\"./src/features/devconsole/store.ts\",\"./src/features/devconsole-v2/devconsolev2container.tsx\",\"./src/features/devconsole-v2/consolestore.ts\",\"./src/features/devconsole-v2/promptconfig.ts\",\"./src/features/devconsole-v2/storage.ts\",\"./src/features/devconsole-v2/types.ts\",\"./src/features/devconsole-v2/useconsolestream.ts\",\"./src/features/devconsole-v2/components/advancedfilters.tsx\",\"./src/features/devconsole-v2/components/consoletoolbar.tsx\",\"./src/features/devconsole-v2/components/exportmenu.tsx\",\"./src/features/devconsole-v2/components/livemetrics.tsx\",\"./src/features/devconsole-v2/components/logline.tsx\",\"./src/features/devconsole-v2/components/loglist.tsx\",\"./src/features/devconsole-v2/components/metaviewer.tsx\",\"./src/features/devconsole-v2/components/multitabterminal.tsx\",\"./src/features/devconsole-v2/components/realtimeerrormonitor.tsx\",\"./src/features/devconsole-v2/components/servicepanel.tsx\",\"./src/features/devconsole-v2/components/servicesview.tsx\",\"./src/features/devconsole-v2/components/shortcutshelp.tsx\",\"./src/features/devconsole-v2/hooks/userealtimeerrors.ts\",\"./src/features/devconsole-v2/hooks/useterminalstore.ts\",\"./src/features/devconsole-v2/types/terminal.ts\",\"./src/features/devconsole-v2/utils/serviceurls.d.ts\",\"./src/features/file-tree/types.ts\",\"./src/features/file-tree/hooks/usefiletree.ts\",\"./src/features/file-tree/hooks/usefiletreecore.ts\",\"./src/features/secrets/secretsadminpanel.tsx\",\"./src/hooks/useaiservicestate.ts\",\"./src/hooks/useasyncaction.ts\",\"./src/hooks/useattachments.ts\",\"./src/hooks/usebackupservice.ts\",\"./src/hooks/usebrowsertestingroutes.ts\",\"./src/hooks/usecomponenterrorlogging.ts\",\"./src/hooks/usedailygreeting.ts\",\"./src/hooks/usedarkmode.ts\",\"./src/hooks/usedebuglogging.ts\",\"./src/hooks/usediagnosticvisibility.ts\",\"./src/hooks/useerrortoastmanager.ts\",\"./src/hooks/usefeatureflag.ts\",\"./src/hooks/usefileoperations.ts\",\"./src/hooks/usefilepreview.ts\",\"./src/hooks/usefiletree.ts\",\"./src/hooks/usegithubdata.ts\",\"./src/hooks/uselogging.ts\",\"./src/hooks/usememorymanagement.ts\",\"./src/hooks/useperformancemonitor.ts\",\"./src/hooks/useretryfetch.ts\",\"./src/hooks/usesafetyswitch.ts\",\"./src/hooks/usesecureinput.ts\",\"./src/hooks/usestubdata.ts\",\"./src/hooks/usesystemstate.ts\",\"./src/hooks/useuierrorcapture.ts\",\"./src/hooks/useuistate.ts\",\"./src/hooks/memory/useerrorregistry.ts\",\"./src/hooks/memory/usegurulomemory.ts\",\"./src/hooks/memory/usememorycontrols.ts\",\"./src/hooks/memory/usememorysync.ts\",\"./src/hooks/memory/usepersonalinfo.ts\",\"./src/hooks/memory/usestats.ts\",\"./src/i18n/config.ts\",\"./src/layout/adminlayout.tsx\",\"./src/lib/apibase.shared.d.ts\",\"./src/lib/apibase.ts\",\"./src/lib/env.ts\",\"./src/lib/featureflags.ts\",\"./src/lib/identity.ts\",\"./src/lib/singleflight.ts\",\"./src/lib/firebase/auth.ts\",\"./src/lib/firebase/firestore.ts\",\"./src/lib/firebase/storage.ts\",\"./src/lib/sse/autoimprovesse.ts\",\"./src/pages/adminpasskeylogin.tsx\",\"./src/pages/adminpasskeyquicklogin.tsx\",\"./src/pages/customerlogin.tsx\",\"./src/pages/devicemanagement.tsx\",\"./src/pages/githubstub.tsx\",\"./src/pages/gurulamanagementpage.tsx\",\"./src/pages/providerlogin.tsx\",\"./src/pages/roleselection.tsx\",\"./src/pages/memory.tsx\",\"./src/schemas/validationschemas.ts\",\"./src/services/systemcleanerservice.ts\",\"./src/services/activityclient.ts\",\"./src/services/adminaiapi.ts\",\"./src/services/auditservice.ts\",\"./src/services/autoimproveservice.ts\",\"./src/services/autoimprovestorageservice.ts\",\"./src/services/browsertestingrunnerservice.ts\",\"./src/services/enhancedsearchservice.ts\",\"./src/services/feedbackapi.ts\",\"./src/services/globalerrorhandler.ts\",\"./src/services/globalvalidationservice.ts\",\"./src/services/integrationregistryservice.ts\",\"./src/services/loggingservice.ts\",\"./src/services/messagingservice.ts\",\"./src/services/mockdatagenerator.ts\",\"./src/services/secretsadminapi.ts\",\"./src/services/secretsvaultservice.ts\",\"./src/state/brainmachine.ts\",\"./src/types/activity.ts\",\"./src/types/aimemory.ts\",\"./src/types/autoimprove.ts\",\"./src/types/chartjs.d.ts\",\"./src/types/filetree.ts\",\"./src/types/global.d.ts\",\"./src/types/react-chartjs-2.d.ts\",\"./src/types/swr.d.ts\",\"./src/types/user.ts\",\"./src/utils/admintoken.ts\",\"./src/utils/aifallback.ts\",\"./src/utils/backendurl.ts\",\"./src/utils/base64url.ts\",\"./src/utils/cleanmessagingdata.ts\",\"./src/utils/codedecoder.ts\",\"./src/utils/connectionmanager.ts\",\"./src/utils/correlationid.ts\",\"./src/utils/createtestlogs.ts\",\"./src/utils/debugapiwrapper.ts\",\"./src/utils/debughelpers.ts\",\"./src/utils/debugtest.ts\",\"./src/utils/devlogger.ts\",\"./src/utils/devicefingerprint.ts\",\"./src/utils/diffmetrics.ts\",\"./src/utils/enhancedmessageformatter.ts\",\"./src/utils/errorloggingwrapper.ts\",\"./src/utils/featureflags.ts\",\"./src/utils/filetreeutils.ts\",\"./src/utils/firebasecleanup.ts\",\"./src/utils/firebasequotamanager.ts\",\"./src/utils/firestorebatch.ts\",\"./src/utils/georgianchatformatter.ts\",\"./src/utils/georgianculturaladapter.ts\",\"./src/utils/georgiangrammarparser.ts\",\"./src/utils/georgianlanguageenhancer.ts\",\"./src/utils/georgiansupport.ts\",\"./src/utils/georgianterminologymapper.ts\",\"./src/utils/githubtestutils.ts\",\"./src/utils/githubverification.ts\",\"./src/utils/gurulocoreadapter.ts\",\"./src/utils/http.ts\",\"./src/utils/httpheaders.ts\",\"./src/utils/networkerrordetection.ts\",\"./src/utils/ratelimithandler.ts\",\"./src/utils/ratelimitedfetch.ts\",\"./src/utils/searchalgorithms.ts\",\"./src/utils/systemhealthcheck.ts\",\"./src/utils/systemverification.ts\",\"./src/utils/testdebugconsole.ts\",\"./src/utils/time.ts\",\"./src/utils/validation.ts\",\"./src/utils/webauthn_support.ts\",\"./src/utils/ai-panel/colorhelpers.ts\",\"./src/utils/ai-panel/formathelpers.ts\",\"./src/utils/ai-panel/index.ts\",\"./src/utils/ai-panel/statushelpers.ts\",\"./src/utils/ai-panel/uimaphelpers.ts\",\"./src/utils/ai-panel/verification.ts\"],\"version\":\"5.9.2\"}"
        }
      ]
    },
    {
      "path": "ai-service/.env.example",
      "occurrences": [
        {
          "line": 114,
          "keywords": [
            "provider"
          ],
          "text": "# üßÆ AI PROVIDER CONFIGURATION"
        }
      ]
    },
    {
      "path": "ai-service/README.md",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "booking"
          ],
          "text": "ü§ñ **Standalone AI service for the Bakhmaro booking platform**"
        }
      ]
    },
    {
      "path": "ai-service/agents/codex_agent.js",
      "occurrences": [
        {
          "line": 232,
          "keywords": [
            "notification"
          ],
          "text": "this.logger.warn('Slack notification failed', error && error.message ? error.message : error);"
        }
      ]
    },
    {
      "path": "ai-service/agents/codex_agent.ts",
      "occurrences": [
        {
          "line": 277,
          "keywords": [
            "notification"
          ],
          "text": "this.logger.warn('Slack notification failed', error?.message || error);"
        }
      ]
    },
    {
      "path": "ai-service/code_index.json",
      "occurrences": [
        {
          "line": 797,
          "keywords": [
            "cottage"
          ],
          "text": "\"attached_assets/CottagePage_1752272130290.tsx\": {"
        },
        {
          "line": 798,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"attached_assets/CottagePage_1752272130290.tsx\","
        },
        {
          "line": 817,
          "keywords": [
            "calendar"
          ],
          "text": "\"./components/Calendar\","
        },
        {
          "line": 819,
          "keywords": [
            "booking"
          ],
          "text": "\"./components/BookingModal\""
        },
        {
          "line": 822,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagePage\","
        },
        {
          "line": 823,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottage\","
        },
        {
          "line": 829,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagePage\","
        },
        {
          "line": 853,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./components/VehicleCard\","
        },
        {
          "line": 854,
          "keywords": [
            "hotel"
          ],
          "text": "\"./components/HotelCard\","
        },
        {
          "line": 856,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\","
        },
        {
          "line": 857,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 864,
          "keywords": [
            "booking"
          ],
          "text": "\"handleBookingClick\""
        },
        {
          "line": 1063,
          "keywords": [
            "commission"
          ],
          "text": "\"backend/routes/commission.js\": {"
        },
        {
          "line": 1064,
          "keywords": [
            "commission"
          ],
          "text": "\"path\": \"backend/routes/commission.js\","
        },
        {
          "line": 1095,
          "keywords": [
            "provider"
          ],
          "text": "\"path\": \"/provider/:providerId/summary\""
        },
        {
          "line": 1099,
          "keywords": [
            "provider"
          ],
          "text": "\"path\": \"/provider/:providerId/invoices\""
        },
        {
          "line": 1103,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"path\": \"/provider/:providerId/commission-rate\""
        },
        {
          "line": 1159,
          "keywords": [
            "notification"
          ],
          "text": "\"backend/routes/notifications.js\": {"
        },
        {
          "line": 1160,
          "keywords": [
            "notification"
          ],
          "text": "\"path\": \"backend/routes/notifications.js\","
        },
        {
          "line": 1181,
          "keywords": [
            "notification"
          ],
          "text": "\"path\": \"/:notificationId/read\""
        },
        {
          "line": 1193,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"/booking-created\""
        },
        {
          "line": 1229,
          "keywords": [
            "commission"
          ],
          "text": "\"backend/services/commissionService.js\": {"
        },
        {
          "line": 1230,
          "keywords": [
            "commission"
          ],
          "text": "\"path\": \"backend/services/commissionService.js\","
        },
        {
          "line": 1240,
          "keywords": [
            "commission"
          ],
          "text": "\"CommissionService\""
        },
        {
          "line": 1346,
          "keywords": [
            "commission"
          ],
          "text": "\"functions/scheduledCommission.js\": {"
        },
        {
          "line": 1347,
          "keywords": [
            "commission"
          ],
          "text": "\"path\": \"functions/scheduledCommission.js\","
        },
        {
          "line": 1435,
          "keywords": [
            "bank"
          ],
          "text": "\"src/AdminBankAccounts.tsx\": {"
        },
        {
          "line": 1436,
          "keywords": [
            "bank"
          ],
          "text": "\"path\": \"src/AdminBankAccounts.tsx\","
        },
        {
          "line": 1456,
          "keywords": [
            "bank"
          ],
          "text": "\"./components/BankAccountManager\","
        },
        {
          "line": 1460,
          "keywords": [
            "bank"
          ],
          "text": "\"AdminBankAccounts\","
        },
        {
          "line": 1461,
          "keywords": [
            "bank"
          ],
          "text": "\"fetchBankAccounts\","
        },
        {
          "line": 1470,
          "keywords": [
            "bank"
          ],
          "text": "\"AdminBankAccounts\""
        },
        {
          "line": 1473,
          "keywords": [
            "commission"
          ],
          "text": "\"src/AdminCommission.tsx\": {"
        },
        {
          "line": 1474,
          "keywords": [
            "commission"
          ],
          "text": "\"path\": \"src/AdminCommission.tsx\","
        },
        {
          "line": 1482,
          "keywords": [
            "commission"
          ],
          "text": "\"name\": \"AdminCommission\","
        },
        {
          "line": 1496,
          "keywords": [
            "commission"
          ],
          "text": "\"fetchCommissions\","
        },
        {
          "line": 1497,
          "keywords": [
            "commission"
          ],
          "text": "\"updateCommissionStatus\","
        },
        {
          "line": 1498,
          "keywords": [
            "commission"
          ],
          "text": "\"deleteCommission\","
        },
        {
          "line": 1508,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/AdminCottages.tsx\": {"
        },
        {
          "line": 1509,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/AdminCottages.tsx\","
        },
        {
          "line": 1533,
          "keywords": [
            "cottage"
          ],
          "text": "\"AdminCottages\","
        },
        {
          "line": 1534,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottages\","
        },
        {
          "line": 1535,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchBookings\","
        },
        {
          "line": 1536,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "\"fetchCottageBookingsWithGuests\","
        },
        {
          "line": 1537,
          "keywords": [
            "notification"
          ],
          "text": "\"generateNotifications\","
        },
        {
          "line": 1538,
          "keywords": [
            "cottage"
          ],
          "text": "\"filterAndSortCottages\","
        },
        {
          "line": 1540,
          "keywords": [
            "cottage"
          ],
          "text": "\"toggleCottageStatus\","
        },
        {
          "line": 1542,
          "keywords": [
            "cottage"
          ],
          "text": "\"toggleCottageSelection\","
        },
        {
          "line": 1543,
          "keywords": [
            "cottage"
          ],
          "text": "\"selectAllCottages\","
        },
        {
          "line": 1544,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "\"getBookingsForCottage\","
        },
        {
          "line": 1545,
          "keywords": [
            "booking",
            "calendar"
          ],
          "text": "\"renderBookingCalendarModal\","
        },
        {
          "line": 1546,
          "keywords": [
            "booking"
          ],
          "text": "\"getBookingForDate\","
        },
        {
          "line": 1548,
          "keywords": [
            "calendar"
          ],
          "text": "\"renderMiniCalendar\","
        },
        {
          "line": 1555,
          "keywords": [
            "cottage"
          ],
          "text": "\"AdminCottages\""
        },
        {
          "line": 1595,
          "keywords": [
            "horse"
          ],
          "text": "\"src/AdminHorses.tsx\": {"
        },
        {
          "line": 1596,
          "keywords": [
            "horse"
          ],
          "text": "\"path\": \"src/AdminHorses.tsx\","
        },
        {
          "line": 1616,
          "keywords": [
            "horse"
          ],
          "text": "\"./HorseForm\","
        },
        {
          "line": 1617,
          "keywords": [
            "horse"
          ],
          "text": "\"./components/HorseCard\","
        },
        {
          "line": 1625,
          "keywords": [
            "horse"
          ],
          "text": "\"AdminHorses\","
        },
        {
          "line": 1626,
          "keywords": [
            "horse"
          ],
          "text": "\"fetchHorses\","
        },
        {
          "line": 1628,
          "keywords": [
            "horse"
          ],
          "text": "\"filterAndSortHorses\","
        },
        {
          "line": 1635,
          "keywords": [
            "horse"
          ],
          "text": "\"AdminHorses\""
        },
        {
          "line": 1638,
          "keywords": [
            "hotel"
          ],
          "text": "\"src/AdminHotels.tsx\": {"
        },
        {
          "line": 1639,
          "keywords": [
            "hotel"
          ],
          "text": "\"path\": \"src/AdminHotels.tsx\","
        },
        {
          "line": 1657,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 1665,
          "keywords": [
            "hotel"
          ],
          "text": "\"AdminHotels\","
        },
        {
          "line": 1666,
          "keywords": [
            "hotel"
          ],
          "text": "\"fetchHotels\","
        },
        {
          "line": 1667,
          "keywords": [
            "notification"
          ],
          "text": "\"generateNotifications\","
        },
        {
          "line": 1668,
          "keywords": [
            "hotel"
          ],
          "text": "\"filterAndSortHotels\","
        },
        {
          "line": 1670,
          "keywords": [
            "hotel"
          ],
          "text": "\"toggleHotelStatus\","
        },
        {
          "line": 1672,
          "keywords": [
            "hotel"
          ],
          "text": "\"toggleHotelSelection\","
        },
        {
          "line": 1673,
          "keywords": [
            "hotel"
          ],
          "text": "\"selectAllHotels\","
        },
        {
          "line": 1680,
          "keywords": [
            "hotel"
          ],
          "text": "\"AdminHotels\""
        },
        {
          "line": 1718,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"src/AdminProviderBookings.tsx\": {"
        },
        {
          "line": 1719,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"path\": \"src/AdminProviderBookings.tsx\","
        },
        {
          "line": 1727,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"name\": \"AdminProviderBookings\","
        },
        {
          "line": 1741,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchBookings\","
        },
        {
          "line": 1742,
          "keywords": [
            "booking"
          ],
          "text": "\"updateBookingStatus\","
        },
        {
          "line": 1752,
          "keywords": [
            "provider"
          ],
          "text": "\"src/AdminProviders.tsx\": {"
        },
        {
          "line": 1753,
          "keywords": [
            "provider"
          ],
          "text": "\"path\": \"src/AdminProviders.tsx\","
        },
        {
          "line": 1761,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"AdminProviders\","
        },
        {
          "line": 1776,
          "keywords": [
            "provider"
          ],
          "text": "\"fetchProviders\","
        },
        {
          "line": 1777,
          "keywords": [
            "provider"
          ],
          "text": "\"toggleProviderStatus\","
        },
        {
          "line": 1778,
          "keywords": [
            "provider"
          ],
          "text": "\"deleteProvider\""
        },
        {
          "line": 1784,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"src/AdminSnowmobiles.tsx\": {"
        },
        {
          "line": 1785,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"path\": \"src/AdminSnowmobiles.tsx\","
        },
        {
          "line": 1805,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"./SnowmobileForm\","
        },
        {
          "line": 1806,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"./components/SnowmobileCard\","
        },
        {
          "line": 1814,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"AdminSnowmobiles\","
        },
        {
          "line": 1815,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"fetchSnowmobiles\","
        },
        {
          "line": 1817,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"filterAndSortSnowmobiles\","
        },
        {
          "line": 1824,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"AdminSnowmobiles\""
        },
        {
          "line": 1862,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/AdminVehicles.tsx\": {"
        },
        {
          "line": 1863,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/AdminVehicles.tsx\","
        },
        {
          "line": 1883,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./VehicleForm\","
        },
        {
          "line": 1884,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./components/VehicleCard\","
        },
        {
          "line": 1892,
          "keywords": [
            "vehicle"
          ],
          "text": "\"AdminVehicles\","
        },
        {
          "line": 1893,
          "keywords": [
            "vehicle"
          ],
          "text": "\"fetchVehicles\","
        },
        {
          "line": 1895,
          "keywords": [
            "vehicle"
          ],
          "text": "\"filterAndSortVehicles\","
        },
        {
          "line": 1902,
          "keywords": [
            "vehicle"
          ],
          "text": "\"AdminVehicles\""
        },
        {
          "line": 1935,
          "keywords": [
            "cottage"
          ],
          "text": "\"./CottagePage\","
        },
        {
          "line": 1936,
          "keywords": [
            "booking"
          ],
          "text": "\"./BookingForm\","
        },
        {
          "line": 1938,
          "keywords": [
            "calendar"
          ],
          "text": "\"./CalendarView\","
        },
        {
          "line": 1939,
          "keywords": [
            "cottage"
          ],
          "text": "\"./AdminCottages\","
        },
        {
          "line": 1940,
          "keywords": [
            "cottage"
          ],
          "text": "\"./CottageForm\","
        },
        {
          "line": 1941,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./VehiclePage\","
        },
        {
          "line": 1942,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "\"./VehicleBookingForm\","
        },
        {
          "line": 1943,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./AdminVehicles\","
        },
        {
          "line": 1944,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./VehicleForm\","
        },
        {
          "line": 1945,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./VehiclesList\","
        },
        {
          "line": 1946,
          "keywords": [
            "horse"
          ],
          "text": "\"./AdminHorses\","
        },
        {
          "line": 1947,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"./AdminSnowmobiles\","
        },
        {
          "line": 1950,
          "keywords": [
            "bank"
          ],
          "text": "\"./AdminBankAccounts\","
        },
        {
          "line": 1952,
          "keywords": [
            "hotel"
          ],
          "text": "\"./AdminHotels\","
        },
        {
          "line": 1953,
          "keywords": [
            "hotel"
          ],
          "text": "\"./HotelForm\","
        },
        {
          "line": 1954,
          "keywords": [
            "hotel"
          ],
          "text": "\"./HotelPage\","
        },
        {
          "line": 1955,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "\"./HotelBookingForm\","
        },
        {
          "line": 1956,
          "keywords": [
            "hotel"
          ],
          "text": "\"./HotelsList\","
        },
        {
          "line": 1957,
          "keywords": [
            "cottage"
          ],
          "text": "\"./CottagesList\","
        },
        {
          "line": 1958,
          "keywords": [
            "provider"
          ],
          "text": "\"./ProviderDetails\","
        },
        {
          "line": 1959,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"./AdminProviderBookings\","
        },
        {
          "line": 1961,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"./ProviderBookings\","
        },
        {
          "line": 1964,
          "keywords": [
            "booking"
          ],
          "text": "\"./services/bookingExpirationService\","
        },
        {
          "line": 1965,
          "keywords": [
            "bank"
          ],
          "text": "\"./components/BankAccountManager\","
        },
        {
          "line": 1968,
          "keywords": [
            "provider"
          ],
          "text": "\"./AdminProviders\","
        },
        {
          "line": 1969,
          "keywords": [
            "commission"
          ],
          "text": "\"./AdminCommission\","
        },
        {
          "line": 1984,
          "keywords": [
            "booking"
          ],
          "text": "\"src/BookingForm.tsx\": {"
        },
        {
          "line": 1985,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/BookingForm.tsx\","
        },
        {
          "line": 2005,
          "keywords": [
            "calendar"
          ],
          "text": "\"./components/Calendar\","
        },
        {
          "line": 2006,
          "keywords": [
            "booking"
          ],
          "text": "\"./components/BookingAuth\","
        },
        {
          "line": 2012,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingForm\","
        },
        {
          "line": 2013,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottage\","
        },
        {
          "line": 2026,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingForm\""
        },
        {
          "line": 2029,
          "keywords": [
            "calendar"
          ],
          "text": "\"src/CalendarView.tsx\": {"
        },
        {
          "line": 2030,
          "keywords": [
            "calendar"
          ],
          "text": "\"path\": \"src/CalendarView.tsx\","
        },
        {
          "line": 2054,
          "keywords": [
            "calendar"
          ],
          "text": "\"CalendarView\","
        },
        {
          "line": 2055,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchBookings\","
        },
        {
          "line": 2057,
          "keywords": [
            "booking"
          ],
          "text": "\"filterAndSortBookings\","
        },
        {
          "line": 2066,
          "keywords": [
            "calendar"
          ],
          "text": "\"CalendarView\""
        },
        {
          "line": 2069,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/CottageForm.tsx\": {"
        },
        {
          "line": 2070,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/CottageForm.tsx\","
        },
        {
          "line": 2078,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"CottageForm\","
        },
        {
          "line": 2091,
          "keywords": [
            "bank"
          ],
          "text": "\"./components/BankAccountField\","
        },
        {
          "line": 2099,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottageForm\","
        },
        {
          "line": 2100,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottage\","
        },
        {
          "line": 2126,
          "keywords": [
            "cottage"
          ],
          "text": "\"COTTAGE_AMENITIES\","
        },
        {
          "line": 2129,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottageForm\","
        },
        {
          "line": 2133,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/CottagePage.tsx\": {"
        },
        {
          "line": 2134,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/CottagePage.tsx\","
        },
        {
          "line": 2154,
          "keywords": [
            "calendar"
          ],
          "text": "\"./components/Calendar\","
        },
        {
          "line": 2156,
          "keywords": [
            "booking"
          ],
          "text": "\"./components/BookingModal\""
        },
        {
          "line": 2159,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagePage\","
        },
        {
          "line": 2160,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottage\","
        },
        {
          "line": 2166,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagePage\","
        },
        {
          "line": 2170,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/CottagesList.tsx\": {"
        },
        {
          "line": 2171,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/CottagesList.tsx\","
        },
        {
          "line": 2190,
          "keywords": [
            "booking"
          ],
          "text": "\"./components/BookingModal\","
        },
        {
          "line": 2195,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagesList\","
        },
        {
          "line": 2196,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottages\","
        },
        {
          "line": 2197,
          "keywords": [
            "booking"
          ],
          "text": "\"handleBookingClick\","
        },
        {
          "line": 2198,
          "keywords": [
            "booking"
          ],
          "text": "\"handleBookingSuccess\""
        },
        {
          "line": 2203,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagesList\""
        },
        {
          "line": 2223,
          "keywords": [
            "booking"
          ],
          "text": "\"./services/bookingService\","
        },
        {
          "line": 2226,
          "keywords": [
            "cottage"
          ],
          "text": "\"./types/cottage\","
        },
        {
          "line": 2227,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\""
        },
        {
          "line": 2232,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchUserBookings\","
        },
        {
          "line": 2235,
          "keywords": [
            "booking"
          ],
          "text": "\"getBookingIcon\","
        },
        {
          "line": 2239,
          "keywords": [
            "booking"
          ],
          "text": "\"getBookingDetails\","
        },
        {
          "line": 2244,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingCard\","
        },
        {
          "line": 2246,
          "keywords": [
            "booking"
          ],
          "text": "\"getBookingStatusDisplay\""
        },
        {
          "line": 2252,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingCard\","
        },
        {
          "line": 2256,
          "keywords": [
            "horse"
          ],
          "text": "\"src/HorseForm.tsx\": {"
        },
        {
          "line": 2257,
          "keywords": [
            "horse"
          ],
          "text": "\"path\": \"src/HorseForm.tsx\","
        },
        {
          "line": 2278,
          "keywords": [
            "horse"
          ],
          "text": "\"HorseForm\","
        },
        {
          "line": 2288,
          "keywords": [
            "horse"
          ],
          "text": "\"HorseForm\""
        },
        {
          "line": 2291,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "\"src/HotelBookingForm.tsx\": {"
        },
        {
          "line": 2292,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "\"path\": \"src/HotelBookingForm.tsx\","
        },
        {
          "line": 2311,
          "keywords": [
            "booking"
          ],
          "text": "\"./components/BookingAuth\","
        },
        {
          "line": 2313,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 2314,
          "keywords": [
            "calendar"
          ],
          "text": "\"./components/Calendar\""
        },
        {
          "line": 2317,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "\"HotelBookingForm\","
        },
        {
          "line": 2318,
          "keywords": [
            "hotel"
          ],
          "text": "\"fetchHotel\","
        },
        {
          "line": 2329,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "\"HotelBookingForm\""
        },
        {
          "line": 2332,
          "keywords": [
            "hotel"
          ],
          "text": "\"src/HotelForm.tsx\": {"
        },
        {
          "line": 2333,
          "keywords": [
            "hotel"
          ],
          "text": "\"path\": \"src/HotelForm.tsx\","
        },
        {
          "line": 2351,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 2355,
          "keywords": [
            "bank"
          ],
          "text": "\"./components/BankAccountField\","
        },
        {
          "line": 2360,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelForm\","
        },
        {
          "line": 2361,
          "keywords": [
            "hotel"
          ],
          "text": "\"fetchHotel\","
        },
        {
          "line": 2377,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelForm\""
        },
        {
          "line": 2380,
          "keywords": [
            "hotel"
          ],
          "text": "\"src/HotelPage.tsx\": {"
        },
        {
          "line": 2381,
          "keywords": [
            "hotel"
          ],
          "text": "\"path\": \"src/HotelPage.tsx\","
        },
        {
          "line": 2399,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 2400,
          "keywords": [
            "calendar"
          ],
          "text": "\"./components/Calendar\","
        },
        {
          "line": 2404,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelPage\","
        },
        {
          "line": 2405,
          "keywords": [
            "hotel"
          ],
          "text": "\"fetchHotel\","
        },
        {
          "line": 2411,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelPage\""
        },
        {
          "line": 2414,
          "keywords": [
            "hotel"
          ],
          "text": "\"src/HotelsList.tsx\": {"
        },
        {
          "line": 2415,
          "keywords": [
            "hotel"
          ],
          "text": "\"path\": \"src/HotelsList.tsx\","
        },
        {
          "line": 2432,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 2434,
          "keywords": [
            "hotel"
          ],
          "text": "\"./components/HotelCard\""
        },
        {
          "line": 2437,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelsList\","
        },
        {
          "line": 2438,
          "keywords": [
            "hotel"
          ],
          "text": "\"fetchHotels\""
        },
        {
          "line": 2443,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelsList\""
        },
        {
          "line": 2472,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchBookings\","
        },
        {
          "line": 2473,
          "keywords": [
            "notification"
          ],
          "text": "\"generateNotifications\","
        },
        {
          "line": 2474,
          "keywords": [
            "booking"
          ],
          "text": "\"filterAndSortBookings\","
        },
        {
          "line": 2476,
          "keywords": [
            "booking"
          ],
          "text": "\"updateBookingStatus\","
        },
        {
          "line": 2478,
          "keywords": [
            "booking"
          ],
          "text": "\"toggleBookingSelection\","
        },
        {
          "line": 2479,
          "keywords": [
            "booking"
          ],
          "text": "\"selectAllBookings\","
        },
        {
          "line": 2514,
          "keywords": [
            "notification"
          ],
          "text": "\"./components/MessagingNotificationSystem\""
        },
        {
          "line": 2581,
          "keywords": [
            "booking"
          ],
          "text": "\"loadUpcomingBookings\","
        },
        {
          "line": 2584,
          "keywords": [
            "commission"
          ],
          "text": "\"loadCommission\","
        },
        {
          "line": 2586,
          "keywords": [
            "commission"
          ],
          "text": "\"handleCommissionPayment\","
        },
        {
          "line": 2588,
          "keywords": [
            "calendar"
          ],
          "text": "\"navigateToCalendar\","
        },
        {
          "line": 2590,
          "keywords": [
            "booking"
          ],
          "text": "\"navigateToBookings\","
        },
        {
          "line": 2593,
          "keywords": [
            "booking"
          ],
          "text": "\"navigateToNewBooking\","
        },
        {
          "line": 2622,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./components/VehicleCard\","
        },
        {
          "line": 2623,
          "keywords": [
            "hotel"
          ],
          "text": "\"./components/HotelCard\","
        },
        {
          "line": 2624,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\","
        },
        {
          "line": 2625,
          "keywords": [
            "hotel"
          ],
          "text": "\"./types/hotel\","
        },
        {
          "line": 2633,
          "keywords": [
            "booking"
          ],
          "text": "\"handleBookingClick\""
        },
        {
          "line": 2673,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"src/ProviderBookings.tsx\": {"
        },
        {
          "line": 2674,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"path\": \"src/ProviderBookings.tsx\","
        },
        {
          "line": 2682,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"name\": \"ProviderBookings\","
        },
        {
          "line": 2691,
          "keywords": [
            "booking"
          ],
          "text": "\"./services/bookingService\""
        },
        {
          "line": 2694,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchBookings\""
        },
        {
          "line": 2700,
          "keywords": [
            "provider"
          ],
          "text": "\"src/ProviderDetails.tsx\": {"
        },
        {
          "line": 2701,
          "keywords": [
            "provider"
          ],
          "text": "\"path\": \"src/ProviderDetails.tsx\","
        },
        {
          "line": 2728,
          "keywords": [
            "provider"
          ],
          "text": "\"ProviderDetails\","
        },
        {
          "line": 2729,
          "keywords": [
            "provider"
          ],
          "text": "\"fetchProviderData\""
        },
        {
          "line": 2734,
          "keywords": [
            "provider"
          ],
          "text": "\"ProviderDetails\","
        },
        {
          "line": 2738,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"src/SnowmobileForm.tsx\": {"
        },
        {
          "line": 2739,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"path\": \"src/SnowmobileForm.tsx\","
        },
        {
          "line": 2761,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"SnowmobileForm\","
        },
        {
          "line": 2768,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"SnowmobileForm\""
        },
        {
          "line": 2796,
          "keywords": [
            "booking"
          ],
          "text": "\"loadUserBookings\","
        },
        {
          "line": 2798,
          "keywords": [
            "notification"
          ],
          "text": "\"loadNotifications\","
        },
        {
          "line": 2799,
          "keywords": [
            "booking"
          ],
          "text": "\"handleCancelBooking\","
        },
        {
          "line": 2803,
          "keywords": [
            "booking"
          ],
          "text": "\"getBookingStatusColor\","
        },
        {
          "line": 2804,
          "keywords": [
            "notification"
          ],
          "text": "\"markNotificationAsRead\""
        },
        {
          "line": 2810,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "\"src/VehicleBookingForm.tsx\": {"
        },
        {
          "line": 2811,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "\"path\": \"src/VehicleBookingForm.tsx\","
        },
        {
          "line": 2830,
          "keywords": [
            "booking"
          ],
          "text": "\"./components/BookingAuth\","
        },
        {
          "line": 2831,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./utils/vehiclePricing\","
        },
        {
          "line": 2832,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\","
        },
        {
          "line": 2836,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "\"VehicleBookingForm\","
        },
        {
          "line": 2837,
          "keywords": [
            "vehicle"
          ],
          "text": "\"fetchVehicle\","
        },
        {
          "line": 2847,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "\"VehicleBookingForm\""
        },
        {
          "line": 2850,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/VehicleForm.tsx\": {"
        },
        {
          "line": 2851,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/VehicleForm.tsx\","
        },
        {
          "line": 2872,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\","
        },
        {
          "line": 2873,
          "keywords": [
            "bank"
          ],
          "text": "\"./components/BankAccountField\","
        },
        {
          "line": 2877,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehicleForm\","
        },
        {
          "line": 2878,
          "keywords": [
            "vehicle"
          ],
          "text": "\"fetchVehicle\","
        },
        {
          "line": 2880,
          "keywords": [
            "bank"
          ],
          "text": "\"handleBankAccountChange\","
        },
        {
          "line": 2890,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehicleForm\""
        },
        {
          "line": 2893,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/VehiclePage.tsx\": {"
        },
        {
          "line": 2894,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/VehiclePage.tsx\","
        },
        {
          "line": 2912,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\","
        },
        {
          "line": 2913,
          "keywords": [
            "calendar"
          ],
          "text": "\"./components/Calendar\","
        },
        {
          "line": 2917,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehiclePage\","
        },
        {
          "line": 2918,
          "keywords": [
            "vehicle"
          ],
          "text": "\"fetchVehicle\","
        },
        {
          "line": 2924,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehiclePage\""
        },
        {
          "line": 2927,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/VehiclesList.tsx\": {"
        },
        {
          "line": 2928,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/VehiclesList.tsx\","
        },
        {
          "line": 2945,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./types/vehicle\","
        },
        {
          "line": 2947,
          "keywords": [
            "vehicle"
          ],
          "text": "\"./components/VehicleCard\""
        },
        {
          "line": 2950,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehiclesList\","
        },
        {
          "line": 2951,
          "keywords": [
            "vehicle"
          ],
          "text": "\"fetchVehicles\""
        },
        {
          "line": 2956,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehiclesList\""
        },
        {
          "line": 3044,
          "keywords": [
            "bank"
          ],
          "text": "\"src/components/BankAccountField.tsx\": {"
        },
        {
          "line": 3045,
          "keywords": [
            "bank"
          ],
          "text": "\"path\": \"src/components/BankAccountField.tsx\","
        },
        {
          "line": 3053,
          "keywords": [
            "bank"
          ],
          "text": "\"name\": \"BankAccountField\","
        },
        {
          "line": 3059,
          "keywords": [
            "bank"
          ],
          "text": "\"../services/bankAccountService\","
        },
        {
          "line": 3060,
          "keywords": [
            "bank"
          ],
          "text": "\"../types/bank\","
        },
        {
          "line": 3075,
          "keywords": [
            "bank"
          ],
          "text": "\"src/components/BankAccountManager.tsx\": {"
        },
        {
          "line": 3076,
          "keywords": [
            "bank"
          ],
          "text": "\"path\": \"src/components/BankAccountManager.tsx\","
        },
        {
          "line": 3084,
          "keywords": [
            "bank"
          ],
          "text": "\"name\": \"BankAccountManager\","
        },
        {
          "line": 3092,
          "keywords": [
            "bank"
          ],
          "text": "\"../services/bankAccountService\","
        },
        {
          "line": 3093,
          "keywords": [
            "bank"
          ],
          "text": "\"../types/bank\","
        },
        {
          "line": 3101,
          "keywords": [
            "cottage"
          ],
          "text": "\"loadLinkedCottages\","
        },
        {
          "line": 3112,
          "keywords": [
            "bank"
          ],
          "text": "\"src/components/BankInfoForm.tsx\": {"
        },
        {
          "line": 3113,
          "keywords": [
            "bank"
          ],
          "text": "\"path\": \"src/components/BankInfoForm.tsx\","
        },
        {
          "line": 3130,
          "keywords": [
            "bank"
          ],
          "text": "\"BankInfoForm\","
        },
        {
          "line": 3131,
          "keywords": [
            "bank"
          ],
          "text": "\"handleBankChange\""
        },
        {
          "line": 3136,
          "keywords": [
            "bank"
          ],
          "text": "\"BankInfoForm\""
        },
        {
          "line": 3139,
          "keywords": [
            "booking"
          ],
          "text": "\"src/components/BookingAuth.tsx\": {"
        },
        {
          "line": 3140,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/components/BookingAuth.tsx\","
        },
        {
          "line": 3160,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingAuth\","
        },
        {
          "line": 3167,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingAuth\""
        },
        {
          "line": 3170,
          "keywords": [
            "booking"
          ],
          "text": "\"src/components/BookingModal.tsx\": {"
        },
        {
          "line": 3171,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/components/BookingModal.tsx\","
        },
        {
          "line": 3192,
          "keywords": [
            "calendar"
          ],
          "text": "\"./Calendar\","
        },
        {
          "line": 3193,
          "keywords": [
            "booking"
          ],
          "text": "\"./BookingAuth\","
        },
        {
          "line": 3202,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingModal\","
        },
        {
          "line": 3203,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottage\","
        },
        {
          "line": 3212,
          "keywords": [
            "booking"
          ],
          "text": "\"proceedWithBooking\","
        },
        {
          "line": 3218,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingModal\""
        },
        {
          "line": 3221,
          "keywords": [
            "calendar"
          ],
          "text": "\"src/components/Calendar.tsx\": {"
        },
        {
          "line": 3222,
          "keywords": [
            "calendar"
          ],
          "text": "\"path\": \"src/components/Calendar.tsx\","
        },
        {
          "line": 3230,
          "keywords": [
            "calendar"
          ],
          "text": "\"name\": \"Calendar\","
        },
        {
          "line": 3298,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottageDetails\","
        },
        {
          "line": 3438,
          "keywords": [
            "notification"
          ],
          "text": "\"./NotificationSystem\","
        },
        {
          "line": 3451,
          "keywords": [
            "horse"
          ],
          "text": "\"src/components/HorseCard.tsx\": {"
        },
        {
          "line": 3452,
          "keywords": [
            "horse"
          ],
          "text": "\"path\": \"src/components/HorseCard.tsx\","
        },
        {
          "line": 3470,
          "keywords": [
            "horse"
          ],
          "text": "\"HorseCard\","
        },
        {
          "line": 3476,
          "keywords": [
            "horse"
          ],
          "text": "\"HorseCard\""
        },
        {
          "line": 3479,
          "keywords": [
            "hotel"
          ],
          "text": "\"src/components/HotelCard.tsx\": {"
        },
        {
          "line": 3480,
          "keywords": [
            "hotel"
          ],
          "text": "\"path\": \"src/components/HotelCard.tsx\","
        },
        {
          "line": 3496,
          "keywords": [
            "hotel"
          ],
          "text": "\"../types/hotel\""
        },
        {
          "line": 3499,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelCard\""
        },
        {
          "line": 3504,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelCard\""
        },
        {
          "line": 3507,
          "keywords": [
            "notification"
          ],
          "text": "\"src/components/MessagingNotificationSystem.tsx\": {"
        },
        {
          "line": 3508,
          "keywords": [
            "notification"
          ],
          "text": "\"path\": \"src/components/MessagingNotificationSystem.tsx\","
        },
        {
          "line": 3516,
          "keywords": [
            "notification"
          ],
          "text": "\"name\": \"MessagingNotificationSystem\","
        },
        {
          "line": 3527,
          "keywords": [
            "notification"
          ],
          "text": "\"playNotificationSound\","
        },
        {
          "line": 3528,
          "keywords": [
            "notification"
          ],
          "text": "\"sendEmailNotification\","
        },
        {
          "line": 3530,
          "keywords": [
            "notification"
          ],
          "text": "\"clearAllNotifications\","
        },
        {
          "line": 3531,
          "keywords": [
            "notification"
          ],
          "text": "\"getNotificationIcon\","
        },
        {
          "line": 3560,
          "keywords": [
            "booking"
          ],
          "text": "\"handleBookingConversation\","
        },
        {
          "line": 3585,
          "keywords": [
            "notification"
          ],
          "text": "\"src/components/NotificationSystem.tsx\": {"
        },
        {
          "line": 3586,
          "keywords": [
            "notification"
          ],
          "text": "\"path\": \"src/components/NotificationSystem.tsx\","
        },
        {
          "line": 3604,
          "keywords": [
            "notification"
          ],
          "text": "\"NotificationSystem\","
        },
        {
          "line": 3605,
          "keywords": [
            "notification"
          ],
          "text": "\"getNotificationIcon\","
        },
        {
          "line": 3613,
          "keywords": [
            "notification"
          ],
          "text": "\"NotificationSystem\""
        },
        {
          "line": 3768,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"src/components/ProviderCommissionDashboard.tsx\": {"
        },
        {
          "line": 3769,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"path\": \"src/components/ProviderCommissionDashboard.tsx\","
        },
        {
          "line": 3777,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"name\": \"ProviderCommissionDashboard\","
        },
        {
          "line": 3786,
          "keywords": [
            "commission"
          ],
          "text": "\"fetchCommissionData\","
        },
        {
          "line": 3902,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"src/components/SnowmobileCard.tsx\": {"
        },
        {
          "line": 3903,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"path\": \"src/components/SnowmobileCard.tsx\","
        },
        {
          "line": 3921,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"SnowmobileCard\""
        },
        {
          "line": 3926,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"SnowmobileCard\""
        },
        {
          "line": 4030,
          "keywords": [
            "booking"
          ],
          "text": "\"src/components/UserBookingsSection.tsx\": {"
        },
        {
          "line": 4031,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/components/UserBookingsSection.tsx\","
        },
        {
          "line": 4039,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"UserBookingsSection\","
        },
        {
          "line": 4048,
          "keywords": [
            "booking"
          ],
          "text": "\"../services/bookingExpirationService\","
        },
        {
          "line": 4052,
          "keywords": [
            "booking"
          ],
          "text": "\"fetchUserBookings\","
        },
        {
          "line": 4144,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/components/VehicleCard.tsx\": {"
        },
        {
          "line": 4145,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/components/VehicleCard.tsx\","
        },
        {
          "line": 4161,
          "keywords": [
            "vehicle"
          ],
          "text": "\"../types/vehicle\""
        },
        {
          "line": 4164,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehicleCard\""
        },
        {
          "line": 4169,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehicleCard\""
        },
        {
          "line": 4256,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"AuthProvider\","
        },
        {
          "line": 4293,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"DebugProvider\","
        },
        {
          "line": 4322,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"PermissionsProvider\","
        },
        {
          "line": 4334,
          "keywords": [
            "booking"
          ],
          "text": "\"checkFirstBookingCompletion\","
        },
        {
          "line": 4357,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"ThemeProvider\","
        },
        {
          "line": 4399,
          "keywords": [
            "booking"
          ],
          "text": "\"src/hooks/useBookingQueries.ts\": {"
        },
        {
          "line": 4400,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/hooks/useBookingQueries.ts\","
        },
        {
          "line": 4408,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"bookingKeys\","
        },
        {
          "line": 4412,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"name\": \"useProviderBookings\","
        },
        {
          "line": 4416,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"useUserBookings\","
        },
        {
          "line": 4420,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"useCreateBooking\","
        },
        {
          "line": 4424,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"useUpdateBooking\","
        },
        {
          "line": 4428,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"useDeleteBooking\","
        },
        {
          "line": 4432,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"name\": \"usePrefetchProviderBookings\","
        },
        {
          "line": 4442,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"useProviderBookings\","
        },
        {
          "line": 4443,
          "keywords": [
            "booking"
          ],
          "text": "\"useUserBookings\","
        },
        {
          "line": 4444,
          "keywords": [
            "booking"
          ],
          "text": "\"useCreateBooking\","
        },
        {
          "line": 4445,
          "keywords": [
            "booking"
          ],
          "text": "\"useUpdateBooking\","
        },
        {
          "line": 4446,
          "keywords": [
            "booking"
          ],
          "text": "\"useDeleteBooking\","
        },
        {
          "line": 4447,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"usePrefetchProviderBookings\""
        },
        {
          "line": 4608,
          "keywords": [
            "booking"
          ],
          "text": "\"canViewBooking\","
        },
        {
          "line": 4609,
          "keywords": [
            "booking"
          ],
          "text": "\"canManageBookingStatus\","
        },
        {
          "line": 4610,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"canViewProviderBookings\","
        },
        {
          "line": 4611,
          "keywords": [
            "bank"
          ],
          "text": "\"canViewBankAccounts\","
        },
        {
          "line": 4612,
          "keywords": [
            "bank"
          ],
          "text": "\"canManageBankAccounts\","
        },
        {
          "line": 4614,
          "keywords": [
            "bank"
          ],
          "text": "\"canEditBankAccount\","
        },
        {
          "line": 4640,
          "keywords": [
            "provider"
          ],
          "text": "\"updateProvider\""
        },
        {
          "line": 4696,
          "keywords": [
            "cottage"
          ],
          "text": "\"validateCottage\","
        },
        {
          "line": 4697,
          "keywords": [
            "booking"
          ],
          "text": "\"validateBooking\","
        },
        {
          "line": 4698,
          "keywords": [
            "vehicle"
          ],
          "text": "\"validateVehicle\","
        },
        {
          "line": 4699,
          "keywords": [
            "hotel"
          ],
          "text": "\"validateHotel\","
        },
        {
          "line": 4767,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/pages/Cottages/CottageForm.tsx\": {"
        },
        {
          "line": 4768,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/pages/Cottages/CottageForm.tsx\","
        },
        {
          "line": 4776,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"CottageForm\","
        },
        {
          "line": 4789,
          "keywords": [
            "bank"
          ],
          "text": "\"../../components/BankAccountField\","
        },
        {
          "line": 4793,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottageForm\","
        },
        {
          "line": 4794,
          "keywords": [
            "bank"
          ],
          "text": "\"loadSavedBankAccounts\","
        },
        {
          "line": 4795,
          "keywords": [
            "cottage"
          ],
          "text": "\"fetchCottage\","
        },
        {
          "line": 4804,
          "keywords": [
            "bank"
          ],
          "text": "\"handleBankAccountSelect\","
        },
        {
          "line": 4816,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottageForm\","
        },
        {
          "line": 4820,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/pages/Cottages/NewCottagePage.tsx\": {"
        },
        {
          "line": 4821,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/pages/Cottages/NewCottagePage.tsx\","
        },
        {
          "line": 4836,
          "keywords": [
            "cottage"
          ],
          "text": "\"../../CottageForm\","
        },
        {
          "line": 4840,
          "keywords": [
            "cottage"
          ],
          "text": "\"NewCottagePage\""
        },
        {
          "line": 4845,
          "keywords": [
            "cottage"
          ],
          "text": "\"NewCottagePage\""
        },
        {
          "line": 4857,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"bookingSchema\","
        },
        {
          "line": 4861,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"cottageSchema\","
        },
        {
          "line": 4865,
          "keywords": [
            "vehicle"
          ],
          "text": "\"name\": \"vehicleSchema\","
        },
        {
          "line": 4873,
          "keywords": [
            "commission"
          ],
          "text": "\"name\": \"commissionSchema\","
        },
        {
          "line": 4877,
          "keywords": [
            "hotel"
          ],
          "text": "\"name\": \"hotelSchema\","
        },
        {
          "line": 4881,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"validateBooking\","
        },
        {
          "line": 4885,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"validateCottage\","
        },
        {
          "line": 4889,
          "keywords": [
            "vehicle"
          ],
          "text": "\"name\": \"validateVehicle\","
        },
        {
          "line": 4897,
          "keywords": [
            "commission"
          ],
          "text": "\"name\": \"validateCommission\","
        },
        {
          "line": 4901,
          "keywords": [
            "hotel"
          ],
          "text": "\"name\": \"validateHotel\","
        },
        {
          "line": 4909,
          "keywords": [
            "booking"
          ],
          "text": "\"validateBooking\","
        },
        {
          "line": 4910,
          "keywords": [
            "cottage"
          ],
          "text": "\"validateCottage\","
        },
        {
          "line": 4911,
          "keywords": [
            "vehicle"
          ],
          "text": "\"validateVehicle\","
        },
        {
          "line": 4913,
          "keywords": [
            "commission"
          ],
          "text": "\"validateCommission\","
        },
        {
          "line": 4914,
          "keywords": [
            "hotel"
          ],
          "text": "\"validateHotel\""
        },
        {
          "line": 4945,
          "keywords": [
            "bank"
          ],
          "text": "\"src/services/bankAccountService.ts\": {"
        },
        {
          "line": 4946,
          "keywords": [
            "bank"
          ],
          "text": "\"path\": \"src/services/bankAccountService.ts\","
        },
        {
          "line": 4954,
          "keywords": [
            "bank"
          ],
          "text": "\"name\": \"bankAccountService\","
        },
        {
          "line": 4960,
          "keywords": [
            "bank"
          ],
          "text": "\"../types/bank\""
        },
        {
          "line": 4967,
          "keywords": [
            "booking"
          ],
          "text": "\"src/services/bookingExpirationService.ts\": {"
        },
        {
          "line": 4968,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/services/bookingExpirationService.ts\","
        },
        {
          "line": 4976,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"BookingExpirationService\","
        },
        {
          "line": 4980,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"bookingExpirationService\","
        },
        {
          "line": 4990,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingExpirationService\""
        },
        {
          "line": 4995,
          "keywords": [
            "booking"
          ],
          "text": "\"src/services/bookingService.ts\": {"
        },
        {
          "line": 4996,
          "keywords": [
            "booking"
          ],
          "text": "\"path\": \"src/services/bookingService.ts\","
        },
        {
          "line": 5004,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "\"name\": \"getBookingsByProviderId\","
        },
        {
          "line": 5008,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"createBooking\","
        },
        {
          "line": 5012,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"updateBooking\","
        },
        {
          "line": 5016,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"deleteBooking\","
        },
        {
          "line": 5020,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"getReviewsByProviderId\","
        },
        {
          "line": 5024,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"getBookingsByUser\","
        },
        {
          "line": 5028,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"getCottages\","
        },
        {
          "line": 5032,
          "keywords": [
            "vehicle"
          ],
          "text": "\"name\": \"getVehicles\","
        },
        {
          "line": 5036,
          "keywords": [
            "hotel"
          ],
          "text": "\"name\": \"getHotels\","
        },
        {
          "line": 5040,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"calculateProviderStats\","
        },
        {
          "line": 5048,
          "keywords": [
            "provider"
          ],
          "text": "\"calculateProviderStats\""
        },
        {
          "line": 5184,
          "keywords": [
            "bank"
          ],
          "text": "\"./bankAccountService\","
        },
        {
          "line": 5185,
          "keywords": [
            "bank"
          ],
          "text": "\"../types/bank\""
        },
        {
          "line": 5239,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"getProviderConversations\","
        },
        {
          "line": 5265,
          "keywords": [
            "notification"
          ],
          "text": "\"src/services/notificationService.ts\": {"
        },
        {
          "line": 5266,
          "keywords": [
            "notification"
          ],
          "text": "\"path\": \"src/services/notificationService.ts\","
        },
        {
          "line": 5274,
          "keywords": [
            "notification"
          ],
          "text": "\"name\": \"notificationService\","
        },
        {
          "line": 5385,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"addProviderReply\","
        },
        {
          "line": 5389,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"getUserBookings\","
        },
        {
          "line": 5507,
          "keywords": [
            "booking"
          ],
          "text": "\"name\": \"registerCustomerDuringBooking\","
        },
        {
          "line": 5551,
          "keywords": [
            "bank"
          ],
          "text": "\"src/types/bank.ts\": {"
        },
        {
          "line": 5552,
          "keywords": [
            "bank"
          ],
          "text": "\"path\": \"src/types/bank.ts\","
        },
        {
          "line": 5565,
          "keywords": [
            "cottage"
          ],
          "text": "\"src/types/cottage.ts\": {"
        },
        {
          "line": 5566,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"src/types/cottage.ts\","
        },
        {
          "line": 5593,
          "keywords": [
            "hotel"
          ],
          "text": "\"src/types/hotel.ts\": {"
        },
        {
          "line": 5594,
          "keywords": [
            "hotel"
          ],
          "text": "\"path\": \"src/types/hotel.ts\","
        },
        {
          "line": 5646,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"getDefaultCottagePricing\","
        },
        {
          "line": 5650,
          "keywords": [
            "hotel"
          ],
          "text": "\"name\": \"getDefaultHotelPricing\","
        },
        {
          "line": 5654,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"isCottagePricing\","
        },
        {
          "line": 5658,
          "keywords": [
            "hotel"
          ],
          "text": "\"name\": \"isHotelPricing\","
        },
        {
          "line": 5662,
          "keywords": [
            "cottage"
          ],
          "text": "\"name\": \"isFlexibleCottagePricing\","
        },
        {
          "line": 5666,
          "keywords": [
            "hotel"
          ],
          "text": "\"name\": \"isFlexibleHotelPricing\","
        },
        {
          "line": 5714,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/types/vehicle.ts\": {"
        },
        {
          "line": 5715,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/types/vehicle.ts\","
        },
        {
          "line": 6086,
          "keywords": [
            "bank"
          ],
          "text": "\"../services/bankAccountService\""
        },
        {
          "line": 6090,
          "keywords": [
            "bank"
          ],
          "text": "\"testBankAccountService\","
        },
        {
          "line": 6224,
          "keywords": [
            "provider"
          ],
          "text": "\"name\": \"validateProviderForm\","
        },
        {
          "line": 6242,
          "keywords": [
            "vehicle"
          ],
          "text": "\"src/utils/vehiclePricing.ts\": {"
        },
        {
          "line": 6243,
          "keywords": [
            "vehicle"
          ],
          "text": "\"path\": \"src/utils/vehiclePricing.ts\","
        },
        {
          "line": 6251,
          "keywords": [
            "vehicle"
          ],
          "text": "\"name\": \"calculateVehicleDeposit\","
        },
        {
          "line": 6255,
          "keywords": [
            "vehicle"
          ],
          "text": "\"name\": \"calculateVehiclePrice\","
        },
        {
          "line": 6259,
          "keywords": [
            "vehicle"
          ],
          "text": "\"name\": \"isVehicleAvailable\","
        },
        {
          "line": 6265,
          "keywords": [
            "vehicle"
          ],
          "text": "\"calculateVehicleDeposit\","
        },
        {
          "line": 6266,
          "keywords": [
            "vehicle"
          ],
          "text": "\"calculateVehiclePrice\","
        },
        {
          "line": 6267,
          "keywords": [
            "vehicle"
          ],
          "text": "\"isVehicleAvailable\""
        },
        {
          "line": 6301,
          "keywords": [
            "cottage"
          ],
          "text": "\"test-cottage-functionality.md\": {"
        },
        {
          "line": 6302,
          "keywords": [
            "cottage"
          ],
          "text": "\"path\": \"test-cottage-functionality.md\","
        },
        {
          "line": 6399,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagePage\": \"src/CottagePage.tsx\","
        },
        {
          "line": 6402,
          "keywords": [
            "bank"
          ],
          "text": "\"AdminBankAccounts\": \"src/AdminBankAccounts.tsx\","
        },
        {
          "line": 6403,
          "keywords": [
            "cottage"
          ],
          "text": "\"AdminCottages\": \"src/AdminCottages.tsx\","
        },
        {
          "line": 6405,
          "keywords": [
            "horse"
          ],
          "text": "\"AdminHorses\": \"src/AdminHorses.tsx\","
        },
        {
          "line": 6406,
          "keywords": [
            "hotel"
          ],
          "text": "\"AdminHotels\": \"src/AdminHotels.tsx\","
        },
        {
          "line": 6407,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"AdminSnowmobiles\": \"src/AdminSnowmobiles.tsx\","
        },
        {
          "line": 6408,
          "keywords": [
            "vehicle"
          ],
          "text": "\"AdminVehicles\": \"src/AdminVehicles.tsx\","
        },
        {
          "line": 6411,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingForm\": \"src/BookingForm.tsx\","
        },
        {
          "line": 6412,
          "keywords": [
            "calendar"
          ],
          "text": "\"CalendarView\": \"src/CalendarView.tsx\","
        },
        {
          "line": 6413,
          "keywords": [
            "cottage"
          ],
          "text": "\"COTTAGE_AMENITIES\": \"src/CottageForm.tsx\","
        },
        {
          "line": 6414,
          "keywords": [
            "cottage"
          ],
          "text": "\"ALL_MONTHS\": \"src/CottageForm.tsx\","
        },
        {
          "line": 6415,
          "keywords": [
            "cottage"
          ],
          "text": "\"DEFAULT_MONTHS\": \"src/CottageForm.tsx\","
        },
        {
          "line": 6416,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottageForm\": \"src/pages/Cottages/CottageForm.tsx\","
        },
        {
          "line": 6417,
          "keywords": [
            "cottage"
          ],
          "text": "\"SectionHeader\": \"src/pages/Cottages/CottageForm.tsx\","
        },
        {
          "line": 6418,
          "keywords": [
            "cottage"
          ],
          "text": "\"CottagesList\": \"src/CottagesList.tsx\","
        },
        {
          "line": 6420,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingCard\": \"src/CustomerProfile.tsx\","
        },
        {
          "line": 6422,
          "keywords": [
            "horse"
          ],
          "text": "\"HorseForm\": \"src/HorseForm.tsx\","
        },
        {
          "line": 6423,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "\"HotelBookingForm\": \"src/HotelBookingForm.tsx\","
        },
        {
          "line": 6424,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelForm\": \"src/HotelForm.tsx\","
        },
        {
          "line": 6425,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelPage\": \"src/HotelPage.tsx\","
        },
        {
          "line": 6426,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelsList\": \"src/HotelsList.tsx\","
        },
        {
          "line": 6430,
          "keywords": [
            "provider"
          ],
          "text": "\"ProviderDetails\": \"src/ProviderDetails.tsx\","
        },
        {
          "line": 6431,
          "keywords": [
            "provider"
          ],
          "text": "\"USE_STUB_DATA\": \"src/ProviderDetails.tsx\","
        },
        {
          "line": 6432,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"SnowmobileForm\": \"src/SnowmobileForm.tsx\","
        },
        {
          "line": 6433,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "\"VehicleBookingForm\": \"src/VehicleBookingForm.tsx\","
        },
        {
          "line": 6434,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehicleForm\": \"src/VehicleForm.tsx\","
        },
        {
          "line": 6435,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehiclePage\": \"src/VehiclePage.tsx\","
        },
        {
          "line": 6436,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehiclesList\": \"src/VehiclesList.tsx\","
        },
        {
          "line": 6437,
          "keywords": [
            "bank"
          ],
          "text": "\"BankInfoForm\": \"src/components/BankInfoForm.tsx\","
        },
        {
          "line": 6438,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingAuth\": \"src/components/BookingAuth.tsx\","
        },
        {
          "line": 6439,
          "keywords": [
            "booking"
          ],
          "text": "\"BookingModal\": \"src/components/BookingModal.tsx\","
        },
        {
          "line": 6441,
          "keywords": [
            "horse"
          ],
          "text": "\"HorseCard\": \"src/components/HorseCard.tsx\","
        },
        {
          "line": 6442,
          "keywords": [
            "hotel"
          ],
          "text": "\"HotelCard\": \"src/components/HotelCard.tsx\","
        },
        {
          "line": 6444,
          "keywords": [
            "notification"
          ],
          "text": "\"NotificationSystem\": \"src/components/NotificationSystem.tsx\","
        },
        {
          "line": 6449,
          "keywords": [
            "snowmobile"
          ],
          "text": "\"SnowmobileCard\": \"src/components/SnowmobileCard.tsx\","
        },
        {
          "line": 6452,
          "keywords": [
            "booking"
          ],
          "text": "\"ResourceIcon\": \"src/components/UserBookingsSection.tsx\","
        },
        {
          "line": 6454,
          "keywords": [
            "vehicle"
          ],
          "text": "\"VehicleCard\": \"src/components/VehicleCard.tsx\","
        },
        {
          "line": 6460,
          "keywords": [
            "cottage"
          ],
          "text": "\"NewCottagePage\": \"src/pages/Cottages/NewCottagePage.tsx\""
        },
        {
          "line": 6500,
          "keywords": [
            "commission"
          ],
          "text": "\"commissionService\": \"backend/services/commissionService.js\","
        },
        {
          "line": 6502,
          "keywords": [
            "bank"
          ],
          "text": "\"bankAccountService\": \"src/services/bankAccountService.ts\","
        },
        {
          "line": 6503,
          "keywords": [
            "booking"
          ],
          "text": "\"bookingExpirationService\": \"src/services/bookingExpirationService.ts\","
        },
        {
          "line": 6504,
          "keywords": [
            "booking"
          ],
          "text": "\"bookingService\": \"src/services/bookingService.ts\","
        },
        {
          "line": 6512,
          "keywords": [
            "notification"
          ],
          "text": "\"notificationService\": \"src/services/notificationService.ts\","
        },
        {
          "line": 6547,
          "keywords": [
            "commission"
          ],
          "text": "\"POST /generate-invoices\": \"backend/routes/commission.js\","
        },
        {
          "line": 6548,
          "keywords": [
            "commission"
          ],
          "text": "\"GET /invoices\": \"backend/routes/commission.js\","
        },
        {
          "line": 6549,
          "keywords": [
            "commission"
          ],
          "text": "\"GET /invoices/:invoiceId\": \"backend/routes/commission.js\","
        },
        {
          "line": 6550,
          "keywords": [
            "commission"
          ],
          "text": "\"POST /invoices/:invoiceId/mark-paid\": \"backend/routes/commission.js\","
        },
        {
          "line": 6551,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"GET /provider/:providerId/summary\": \"backend/routes/commission.js\","
        },
        {
          "line": 6552,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"GET /provider/:providerId/invoices\": \"backend/routes/commission.js\","
        },
        {
          "line": 6553,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "\"PUT /provider/:providerId/commission-rate\": \"backend/routes/commission.js\","
        },
        {
          "line": 6554,
          "keywords": [
            "commission"
          ],
          "text": "\"POST /enforce-payments\": \"backend/routes/commission.js\","
        },
        {
          "line": 6555,
          "keywords": [
            "commission"
          ],
          "text": "\"POST /send-reminders\": \"backend/routes/commission.js\","
        },
        {
          "line": 6563,
          "keywords": [
            "notification"
          ],
          "text": "\"GET /:userId\": \"backend/routes/notifications.js\","
        },
        {
          "line": 6564,
          "keywords": [
            "notification"
          ],
          "text": "\"POST /\": \"backend/routes/notifications.js\","
        },
        {
          "line": 6565,
          "keywords": [
            "notification"
          ],
          "text": "\"PATCH /:notificationId/read\": \"backend/routes/notifications.js\","
        },
        {
          "line": 6566,
          "keywords": [
            "notification"
          ],
          "text": "\"PATCH /user/:userId/read-all\": \"backend/routes/notifications.js\","
        },
        {
          "line": 6567,
          "keywords": [
            "notification"
          ],
          "text": "\"POST /check-in-reminders\": \"backend/routes/notifications.js\","
        },
        {
          "line": 6568,
          "keywords": [
            "booking",
            "notification"
          ],
          "text": "\"POST /booking-created\": \"backend/routes/notifications.js\","
        }
      ]
    },
    {
      "path": "ai-service/context/code_context.js",
      "occurrences": [
        {
          "line": 20,
          "keywords": [
            "cottage"
          ],
          "text": "// Bakhmaro Cottages project structure mapping"
        },
        {
          "line": 105,
          "keywords": [
            "booking"
          ],
          "text": "description: 'Node.js + Express API for bookings'"
        },
        {
          "line": 121,
          "keywords": [
            "booking"
          ],
          "text": "customHooks: ['useAuth', 'useBooking', 'useAPI'],"
        },
        {
          "line": 137,
          "keywords": [
            "provider"
          ],
          "text": "authorization: 'Role-based (CUSTOMER, PROVIDER, SUPER_ADMIN)',"
        },
        {
          "line": 462,
          "keywords": [
            "calendar"
          ],
          "text": "'Date formatting according to Georgian calendar',"
        }
      ]
    },
    {
      "path": "ai-service/context/project_context.js",
      "occurrences": [
        {
          "line": 2,
          "keywords": [
            "cottage",
            "rental"
          ],
          "text": "- ·Éû·Éö·Éê·É¢·É§·Éù·É†·Éõ·Éê: Bakhmaro Cottages Rental System"
        }
      ]
    },
    {
      "path": "ai-service/context/system_prompts.js",
      "occurrences": [
        {
          "line": 53,
          "keywords": [
            "booking"
          ],
          "text": "üß† Thinking: checking file /src/components/BookingForm.tsx"
        },
        {
          "line": 245,
          "keywords": [
            "cottage"
          ],
          "text": "\"·É°·Éû·Éî·É™·Éò·Éê·Éö·Éò·Éñ·Éê·É™·Éò·Éê·Éê Bakhmaro Cottages ·Éô·Éù·Éì·Éë·Éê·Éñ·Éò·É° ·Éú·Éê·Éï·Éò·Éí·Éê·É™·Éò·Éê·É®·Éò ·Éì·Éê ·Éê·Éú·Éê·Éö·Éò·Éñ·É®·Éò.\","
        }
      ]
    },
    {
      "path": "ai-service/controllers/ai_controller.js",
      "occurrences": [
        {
          "line": 111,
          "keywords": [
            "provider"
          ],
          "text": "const { message, isProvider, userId = 'anonymous', conversationId = `stream-${Date.now()}` } = req.body; // Added conversationId for context"
        },
        {
          "line": 447,
          "keywords": [
            "cottage"
          ],
          "text": "- ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò (Cottages)"
        },
        {
          "line": 448,
          "keywords": [
            "hotel"
          ],
          "text": "- ·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·Éî·Éë·Éò (Hotels)"
        },
        {
          "line": 449,
          "keywords": [
            "vehicle"
          ],
          "text": "- ·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò (Vehicles)"
        },
        {
          "line": 450,
          "keywords": [
            "horse"
          ],
          "text": "- ·É™·ÉÆ·Éî·Éú·Éî·Éë·Éò (Horses)"
        },
        {
          "line": 451,
          "keywords": [
            "snowmobile"
          ],
          "text": "- ·É°·Éú·Éù·É£·Éõ·Éù·Éë·Éò·Éö·Éî·Éë·Éò (Snowmobiles)"
        },
        {
          "line": 545,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingService.ts - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 546,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingForm.tsx - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·É§·Éù·É†·Éõ·Éê"
        },
        {
          "line": 603,
          "keywords": [
            "calendar"
          ],
          "text": "} else if (queryType === 'file_search_calendar') {"
        },
        {
          "line": 604,
          "keywords": [
            "calendar"
          ],
          "text": "console.log('üîç [Calendar Search] Processing calendar-specific file search');"
        },
        {
          "line": 605,
          "keywords": [
            "calendar"
          ],
          "text": "response = await handleSpecializedFileSearch(message, userId, 'calendar');"
        },
        {
          "line": 606,
          "keywords": [
            "calendar"
          ],
          "text": "usedService = 'specialized_calendar_search';"
        },
        {
          "line": 876,
          "keywords": [
            "calendar"
          ],
          "text": "file_search_calendar: ["
        },
        {
          "line": 877,
          "keywords": [
            "calendar"
          ],
          "text": "/(·Éõ·Éù·É´·Éî·Éë·Éú·Éî|·É´·Éî·Éë·Éú·Éê|find|search).*(·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†|calendar)/i,"
        },
        {
          "line": 878,
          "keywords": [
            "calendar"
          ],
          "text": "/(·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†|calendar).*(·Éõ·Éù·É´·Éî·Éë·Éú·Éî|·É´·Éî·Éë·Éú·Éê|find|search)/i,"
        },
        {
          "line": 879,
          "keywords": [
            "calendar"
          ],
          "text": "/calendar.*component/i,"
        },
        {
          "line": 883,
          "keywords": [
            "booking"
          ],
          "text": "file_search_booking:["
        },
        {
          "line": 884,
          "keywords": [
            "booking"
          ],
          "text": "/(·Éõ·Éù·É´·Éî·Éë·Éú·Éî|·É´·Éî·Éë·Éú·Éê|find|search).*(·ÉØ·Éê·Éï·É®·Éú|booking|reservation)/i,"
        },
        {
          "line": 885,
          "keywords": [
            "booking"
          ],
          "text": "/(·ÉØ·Éê·Éï·É®·Éú|booking).*(·É§·Éê·Éò·Éö|file|·Éô·Éù·Éõ·Éû·Éù·Éú·Éî·Éú·É¢|component)/i"
        },
        {
          "line": 926,
          "keywords": [
            "booking"
          ],
          "text": "booking_help: ["
        },
        {
          "line": 927,
          "keywords": [
            "booking"
          ],
          "text": "/·ÉØ·Éê·Éï·É®·Éú·Éê/, /booking/, /·É†·Éî·Éñ·Éî·É†·Éï·Éê·É™·Éò·Éê/, /reservation/, /·Éì·Éê·ÉØ·Éê·Éï·É®·Éú·Éê/, /reserve/,"
        },
        {
          "line": 931,
          "keywords": [
            "booking"
          ],
          "text": "booking_system_query: ["
        },
        {
          "line": 932,
          "keywords": [
            "booking"
          ],
          "text": "/·Éì·Éê·ÉØ·Éê·Éï·É®·Éú·Éò·É°\\s*·É°·Éò·É°·É¢·Éî·Éõ·Éê/, /·ÉØ·Éê·Éï·É®·Éú·Éò·É°\\s*·É°·Éò·É°·É¢·Éî·Éõ·Éê/, /booking\\s*system/,"
        },
        {
          "line": 933,
          "keywords": [
            "booking"
          ],
          "text": "/·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É°\\s*·Éû·É†·Éù·É™·Éî·É°·Éò/, /booking\\s*process/, /order\\s*flow/,"
        },
        {
          "line": 934,
          "keywords": [
            "booking"
          ],
          "text": "/·É†·Éù·Éí·Éù·É†\\s*·Éõ·É£·É®·Éê·Éù·Éë·É°.*·Éì·Éê·ÉØ·Éê·Éï·É®·Éú/, /·É†·Éù·Éí·Éù·É†\\s*·Éõ·É£·É®·Éê·Éù·Éë·É°.*·ÉØ·Éê·Éï·É®·Éú/, /·É†·Éù·Éí·Éù·É†\\s*·Éõ·É£·É®·Éê·Éù·Éë·É°.*booking/,"
        },
        {
          "line": 935,
          "keywords": [
            "booking"
          ],
          "text": "/·É†·Éê\\s*·Éê·É†·Éò·É°.*·Éì·Éê·ÉØ·Éê·Éï·É®·Éú/, /·É†·Éê\\s*·Éê·É†·Éò·É°.*·ÉØ·Éê·Éï·É®·Éú/, /what\\s*is.*booking/"
        },
        {
          "line": 1354,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê (BookingService)"
        },
        {
          "line": 1392,
          "keywords": [
            "booking"
          ],
          "text": "if (lowerMessage.includes('bookingservice') || lowerMessage.includes('booking service')) {"
        },
        {
          "line": 1393,
          "keywords": [
            "booking"
          ],
          "text": "return `üìã BookingService.ts-·É®·Éò ·Éî·É° ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò·Éê:"
        },
        {
          "line": 1396,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ createBooking() - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É®·Éî·É•·Éõ·Éú·Éê"
        },
        {
          "line": 1397,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ updateBooking() - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éí·Éê·Éú·Éê·ÉÆ·Éö·Éî·Éë·Éê"
        },
        {
          "line": 1398,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ cancelBooking() - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éí·Éê·É£·É•·Éõ·Éî·Éë·Éê"
        },
        {
          "line": 1399,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ getBookingsByUser() - ·Éõ·Éù·Éõ·ÉÆ·Éõ·Éê·É†·Éî·Éë·Éö·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éî·Éë·Éò"
        },
        {
          "line": 1400,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ validateBookingDates() - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éï·Éê·Éö·Éò·Éì·Éê·É™·Éò·Éê"
        },
        {
          "line": 1405,
          "keywords": [
            "booking"
          ],
          "text": "if (lowerMessage.includes('bookingmodal') || lowerMessage.includes('booking modal')) {"
        },
        {
          "line": 1406,
          "keywords": [
            "booking"
          ],
          "text": "return `üè† BookingModal.tsx-·É®·Éò ·Éî·É° ·Éê·É†·Éò·É°:"
        },
        {
          "line": 1423,
          "keywords": [
            "booking",
            "hotel",
            "vehicle"
          ],
          "text": "‚Ä¢ BookingModal, HotelCard, VehicleCard..."
        },
        {
          "line": 1426,
          "keywords": [
            "booking",
            "notification"
          ],
          "text": "‚Ä¢ bookingService, userService, notificationService..."
        },
        {
          "line": 1457,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ bookingService.ts - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É°·Éó·Éï·Éò·É°"
        },
        {
          "line": 1459,
          "keywords": [
            "notification"
          ],
          "text": "‚Ä¢ notificationService.ts - ·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò·É°·Éó·Éï·Éò·É°"
        },
        {
          "line": 1471,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ \"BookingService ·É†·Éê ·É®·Éî·Éò·É™·Éê·Éï·É°?\" - ·Éô·Éù·Éì·Éò·É° ·Éê·Éú·Éê·Éö·Éò·Éñ·Éò"
        },
        {
          "line": 1513,
          "keywords": [
            "calendar"
          ],
          "text": "'calendar': ['·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†·Éò', 'calendar', 'Calendar.tsx', 'useCalendar', 'CalendarService', 'datepicker'],"
        },
        {
          "line": 1514,
          "keywords": [
            "booking"
          ],
          "text": "'booking': ['·ÉØ·Éê·Éï·É®·Éú·Éê', 'booking', 'BookingModal', 'BookingService', 'BookingForm', 'reservation'],"
        },
        {
          "line": 1516,
          "keywords": [
            "notification"
          ],
          "text": "'messaging': ['·Éõ·Éî·É°·Éò·ÉØ·Éò', 'messaging', 'MessagingSystem', 'message', 'notification'],"
        },
        {
          "line": 1619,
          "keywords": [
            "booking"
          ],
          "text": "comprehensive_grammar: '·Éí·Éê·É°·É¨·Éù·É†·Éî ·É•·Éê·É†·Éó·É£·Éö·Éò ·Éí·É†·Éê·Éõ·Éê·É¢·Éò·Éô·Éê ·Éì·Éê ·Éù·É†·Éó·Éù·Éí·É†·Éê·É§·Éò·Éê. ·Éó·Éê·Éï·Éò·Éì·Éê·Éú ·Éê·Éò·É™·Éò·Éö·Éî \"·Éõ·Éî ·Éï·Éê·É†...\" ·É°·É¢·Éò·Éö·Éò·É° ·Éó·Éï·Éò·Éó·Éê·É¶·Éõ·Éù·É©·Éî·Éú·Éî·Éë·Éò. ·É®·Éî·É™·Éï·Éê·Éö·Éî \"·É©·Éî·Éõ·Éò ·É°·Éê·Éò·É¢·Éò\" -> \"·Éë·Éê·ÉÆ·Éõ·Éê·É†·Éù·É° Booking ·Éû·Éö·Éê·É¢·É§·Éù·É†·Éõ·Éê\". ·Éí·Éê·ÉÆ·Éê·Éì·Éî ·É¢·Éî·É•·É°·É¢·Éò ·Éë·É£·Éú·Éî·Éë·É†·Éò·Éï·Éò ·Éì·Éê ·Éû·É†·Éù·É§·Éî·É°·Éò·Éù·Éú·Éê·Éö·É£·É†·Éò. ·Éì·Éê·Éê·Éë·É†·É£·Éú·Éî ·Éõ·ÉÆ·Éù·Éö·Éù·Éì ·Éí·Éê·É°·É¨·Éù·É†·Éî·Éë·É£·Éö·Éò ·É¢·Éî·É•·É°·É¢·Éò. ·Éì·Éê·Éê·Éë·É†·É£·Éú·Éî ·Éõ·ÉÆ·Éù·Éö·Éù·Éì ·Éí·Éê·É°·É¨·Éù·É†·Éî·Éë·É£·Éö·Éò ·É¢·Éî·É•·É°·É¢·Éò.'"
        },
        {
          "line": 1886,
          "keywords": [
            "provider"
          ],
          "text": "async function processWithRAG(message, isProvider, userId) {"
        }
      ]
    },
    {
      "path": "ai-service/knowledge_base.json",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_0\","
        },
        {
          "line": 11,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        },
        {
          "line": 401,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_1\","
        },
        {
          "line": 403,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        },
        {
          "line": 793,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_2\","
        },
        {
          "line": 795,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        },
        {
          "line": 1185,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_3\","
        },
        {
          "line": 1187,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        },
        {
          "line": 1577,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_4\","
        },
        {
          "line": 1579,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        },
        {
          "line": 1969,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_5\","
        },
        {
          "line": 1971,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        },
        {
          "line": 2361,
          "keywords": [
            "cottage"
          ],
          "text": "\"id\": \"cottage_rules.md_6\","
        },
        {
          "line": 2363,
          "keywords": [
            "cottage"
          ],
          "text": "\"source\": \"cottage_rules.md\","
        }
      ]
    },
    {
      "path": "ai-service/middleware/telemetry_middleware.js",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "provider"
          ],
          "text": "const { MeterProvider } = require('@opentelemetry/sdk-metrics');"
        },
        {
          "line": 24,
          "keywords": [
            "provider"
          ],
          "text": "const meterProvider = new MeterProvider({"
        },
        {
          "line": 33,
          "keywords": [
            "provider"
          ],
          "text": "metrics.setGlobalMeterProvider(meterProvider);"
        }
      ]
    },
    {
      "path": "ai-service/routes/ai_chat.js",
      "occurrences": [
        {
          "line": 22,
          "keywords": [
            "cottage"
          ],
          "text": "buildCottageDetailsResponse,"
        },
        {
          "line": 287,
          "keywords": [
            "cottage"
          ],
          "text": "if (intent.name === 'cottage_details') {"
        },
        {
          "line": 288,
          "keywords": [
            "cottage"
          ],
          "text": "return respondWithPayload(buildCottageDetailsResponse(metadata, builderOptions));"
        }
      ]
    },
    {
      "path": "ai-service/routes/ai_stream.js",
      "occurrences": [
        {
          "line": 332,
          "keywords": [
            "provider"
          ],
          "text": "const codexMeta = { provider: 'codex' };"
        },
        {
          "line": 400,
          "keywords": [
            "provider"
          ],
          "text": "emitCoreMeta('offline-fallback', { provider: 'offline', reason: 'groq_unavailable' });"
        },
        {
          "line": 461,
          "keywords": [
            "provider"
          ],
          "text": "emitCoreMeta(activeMode, { provider: 'groq', responseType: typeof streamResponse });"
        },
        {
          "line": 478,
          "keywords": [
            "provider"
          ],
          "text": "emitCoreMeta('error', { provider: 'groq', error: streamMetadataExtras.error });"
        }
      ]
    },
    {
      "path": "ai-service/routes/auto_improve.js",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "provider"
          ],
          "text": "const { loadSimilarOutcomes } = require('../services/proposal_memory_provider');"
        }
      ]
    },
    {
      "path": "ai-service/services/ai_response_improver.js",
      "occurrences": [
        {
          "line": 47,
          "keywords": [
            "booking"
          ],
          "text": "'booking': '·ÉØ·Éê·Éï·É®·Éê·Éú·Éò',"
        }
      ]
    },
    {
      "path": "ai-service/services/backup_system_service.js",
      "occurrences": [
        {
          "line": 168,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "const collections = ['users', 'cottages', 'bookings', 'reviews', 'activity', 'admin_credentials'];"
        }
      ]
    },
    {
      "path": "ai-service/services/codeAnalyzer.js",
      "occurrences": [
        {
          "line": 89,
          "keywords": [
            "booking"
          ],
          "text": "// Core booking modules"
        },
        {
          "line": 90,
          "keywords": [
            "booking",
            "hotel",
            "vehicle"
          ],
          "text": "'BookingForm.tsx', 'BookingModal.tsx', 'HotelBookingForm.tsx', 'VehicleBookingForm.tsx',"
        },
        {
          "line": 92,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "'AdminCottages.tsx', 'AdminHotels.tsx', 'AdminVehicles.tsx', 'AdminUsers.tsx',"
        },
        {
          "line": 96,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "'CottagePage.tsx', 'HotelPage.tsx', 'VehiclePage.tsx',"
        },
        {
          "line": 98,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "'CottagesList.tsx', 'HotelsList.tsx', 'VehiclesList.tsx',"
        },
        {
          "line": 100,
          "keywords": [
            "booking"
          ],
          "text": "'bookingService.ts', 'customerService.ts', 'priceCodeService.ts',"
        },
        {
          "line": 164,
          "keywords": [
            "booking"
          ],
          "text": "if (fileName.includes('Booking')) return 'Booking System';"
        },
        {
          "line": 392,
          "keywords": [
            "cottage"
          ],
          "text": "'·Éô·Éù·É¢·Éî·ÉØ': ['cottage'],"
        },
        {
          "line": 393,
          "keywords": [
            "hotel"
          ],
          "text": "'·É°·Éê·É°·É¢·É£·Éõ·É†·Éù': ['hotel'],"
        },
        {
          "line": 394,
          "keywords": [
            "vehicle"
          ],
          "text": "'·Éê·Éï·É¢·Éù·Éõ·Éù·Éë·Éò·Éö': ['vehicle', 'car'],"
        },
        {
          "line": 395,
          "keywords": [
            "booking"
          ],
          "text": "'·ÉØ·Éê·Éï·É®·Éê·Éú': ['booking', 'reservation'],"
        },
        {
          "line": 396,
          "keywords": [
            "calendar"
          ],
          "text": "'·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†': ['calendar'],"
        },
        {
          "line": 398,
          "keywords": [
            "booking"
          ],
          "text": "'·É®·Éî·Éô·Éï·Éî·Éó': ['order', 'booking'],"
        },
        {
          "line": 434,
          "keywords": [
            "vehicle"
          ],
          "text": "'pricing.ts', 'vehiclePricing.ts', 'seasonalPricing.ts',"
        },
        {
          "line": 435,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "'BookingForm.tsx', 'BookingModal.tsx', 'CottageForm.tsx',"
        },
        {
          "line": 436,
          "keywords": [
            "cottage"
          ],
          "text": "'AdminCottages.tsx', 'MainPage.tsx', 'ai_controller.js'"
        },
        {
          "line": 542,
          "keywords": [
            "booking"
          ],
          "text": "if (filename.includes('booking') || filename.includes('Booking')) score += 8;"
        },
        {
          "line": 543,
          "keywords": [
            "cottage"
          ],
          "text": "if (filename.includes('cottage') || filename.includes('Cottage')) score += 6;"
        },
        {
          "line": 548,
          "keywords": [
            "booking"
          ],
          "text": "// Explain booking system specifically"
        },
        {
          "line": 549,
          "keywords": [
            "booking"
          ],
          "text": "async explainBookingSystem(query) {"
        },
        {
          "line": 551,
          "keywords": [
            "booking"
          ],
          "text": "console.log('üìã [Booking System] Starting targeted analysis...');"
        },
        {
          "line": 553,
          "keywords": [
            "booking"
          ],
          "text": "// Hardcoded fallback explanation for booking system"
        },
        {
          "line": 554,
          "keywords": [
            "booking"
          ],
          "text": "const fallbackBookingExplanation = `üéØ **·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éò·É° ·Éì·Éî·É¢·Éê·Éö·É£·É†·Éò ·Éê·É¶·É¨·Éî·É†·Éê:**"
        },
        {
          "line": 558,
          "keywords": [
            "booking"
          ],
          "text": "1. **·É§·Éù·É†·Éõ·Éò·É° ·É®·Éî·Éï·É°·Éî·Éë·Éê** (BookingForm.tsx/BookingModal.tsx):"
        },
        {
          "line": 564,
          "keywords": [
            "booking"
          ],
          "text": "2. **·Éï·Éê·Éö·Éò·Éì·Éê·É™·Éò·Éê ·Éì·Éê ·É®·Éî·Éõ·Éù·É¨·Éõ·Éî·Éë·Éê** (bookingService.ts):"
        },
        {
          "line": 570,
          "keywords": [
            "booking"
          ],
          "text": "3. **·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É®·Éî·É•·Éõ·Éú·Éê** (bookingService.ts):"
        },
        {
          "line": 572,
          "keywords": [
            "booking"
          ],
          "text": "- ·É£·Éú·Éò·Éô·Éê·Éö·É£·É†·Éò booking ID-·Éò·É° ·Éí·Éî·Éú·Éî·É†·Éê·É™·Éò·Éê"
        },
        {
          "line": 592,
          "keywords": [
            "calendar"
          ],
          "text": "‚Ä¢ Calendar Integration - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éò·É°·Éó·Éï·Éò·É°"
        },
        {
          "line": 595,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingForm.tsx - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éò ·É§·Éù·É†·Éõ·Éê"
        },
        {
          "line": 596,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingModal.tsx - ·Éõ·Éù·Éì·Éê·Éö·É£·É†·Éò ·É§·Éê·Éú·ÉØ·Éê·É†·Éê ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É°·Éó·Éï·Éò·É°"
        },
        {
          "line": 597,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ bookingService.ts - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éß·Éï·Éî·Éö·Éê ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 601,
          "keywords": [
            "booking"
          ],
          "text": "const bookingModules = ["
        },
        {
          "line": 602,
          "keywords": [
            "booking"
          ],
          "text": "'src/BookingForm.tsx',"
        },
        {
          "line": 603,
          "keywords": [
            "booking"
          ],
          "text": "'src/components/BookingModal.tsx',"
        },
        {
          "line": 604,
          "keywords": [
            "booking"
          ],
          "text": "'src/components/BookingAuth.tsx',"
        },
        {
          "line": 605,
          "keywords": [
            "booking"
          ],
          "text": "'src/services/bookingService.ts',"
        },
        {
          "line": 613,
          "keywords": [
            "booking"
          ],
          "text": "for (const modulePath of bookingModules) {"
        },
        {
          "line": 621,
          "keywords": [
            "booking"
          ],
          "text": "console.log(`‚ö†Ô∏è [Booking System] Could not read ${modulePath}`);"
        },
        {
          "line": 626,
          "keywords": [
            "booking"
          ],
          "text": "console.log(`‚úÖ [Booking System] Found ${foundModules.length} modules: ${foundModules.join(', ')}`);"
        },
        {
          "line": 627,
          "keywords": [
            "booking"
          ],
          "text": "return fallbackBookingExplanation + `\\n\\nüìÑ **·Éê·É¶·Éõ·Éù·É©·Éî·Éú·Éò·Éö·Éò ·Éõ·Éù·Éì·É£·Éö·Éî·Éë·Éò:** ${foundModules.length}/6`;"
        },
        {
          "line": 629,
          "keywords": [
            "booking"
          ],
          "text": "console.log('‚ö†Ô∏è [Booking System] Using hardcoded explanation');"
        },
        {
          "line": 630,
          "keywords": [
            "booking"
          ],
          "text": "return fallbackBookingExplanation + `\\n\\n‚ö†Ô∏è **·É®·Éî·Éú·Éò·É®·Éï·Éú·Éê:** ·Éí·Éê·Éõ·Éù·Éò·Éß·Éî·Éú·Éî·Éë·Éê ·É©·Éê·É®·Éî·Éú·Éî·Éë·É£·Éö·Éò ·Éê·É¶·É¨·Éî·É†·Éê.`;"
        },
        {
          "line": 634,
          "keywords": [
            "booking"
          ],
          "text": "console.error('‚ùå [Booking System] explainBookingSystem failed:', error);"
        },
        {
          "line": 821,
          "keywords": [
            "vehicle"
          ],
          "text": "return { category: 'pricing', type: 'pricing_query', requiresSpecificFiles: ['pricing.ts', 'vehiclePricing.ts'] };"
        }
      ]
    },
    {
      "path": "ai-service/services/enhanced_error_handler.js",
      "occurrences": [
        {
          "line": 434,
          "keywords": [
            "notification"
          ],
          "text": "// Emit Georgian error notification"
        },
        {
          "line": 435,
          "keywords": [
            "notification"
          ],
          "text": "async emitGeorgianErrorNotification(error) {"
        }
      ]
    },
    {
      "path": "ai-service/services/fileService.js",
      "occurrences": [
        {
          "line": 284,
          "keywords": [
            "booking"
          ],
          "text": "'·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê': ['booking', 'reservation'],"
        },
        {
          "line": 285,
          "keywords": [
            "cottage"
          ],
          "text": "'·Éô·Éù·É¢·Éî·ÉØ·Éò': ['cottage'],"
        },
        {
          "line": 286,
          "keywords": [
            "hotel"
          ],
          "text": "'·É°·Éê·É°·É¢·É£·Éõ·É†·Éù': ['hotel'],"
        },
        {
          "line": 289,
          "keywords": [
            "vehicle"
          ],
          "text": "'·Éê·Éï·É¢·Éù·Éõ·Éù·Éë·Éò·Éö·Éò': ['vehicle', 'car'],"
        },
        {
          "line": 290,
          "keywords": [
            "calendar"
          ],
          "text": "'·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†·Éò': ['calendar'],"
        },
        {
          "line": 306,
          "keywords": [
            "vehicle"
          ],
          "text": "expandedTerms.push('pricing', 'vehiclePricing', 'seasonalPricing');"
        },
        {
          "line": 308,
          "keywords": [
            "booking"
          ],
          "text": "if (term.includes('·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê') || term.includes('booking')) {"
        },
        {
          "line": 309,
          "keywords": [
            "booking"
          ],
          "text": "expandedTerms.push('BookingForm', 'BookingModal', 'bookingService');"
        }
      ]
    },
    {
      "path": "ai-service/services/file_access_service.js",
      "occurrences": [
        {
          "line": 43,
          "keywords": [
            "calendar"
          ],
          "text": "'·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†·Éò': ['calendar', 'date', 'datepicker', 'events', 'Calendar.tsx', 'useCalendar', 'CalendarService'],"
        },
        {
          "line": 44,
          "keywords": [
            "booking"
          ],
          "text": "'·ÉØ·Éê·Éï·É®·Éê·Éú·Éò': ['booking', 'reservation', '·ÉØ·Éê·Éï·É®·Éú·Éò·É°', 'BookingModal', 'BookingService', 'BookingForm'],"
        },
        {
          "line": 46,
          "keywords": [
            "hotel"
          ],
          "text": "'·É°·Éê·É°·É¢·É£·Éõ·É†·Éù': ['hotel', 'accommodation', '·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·É°', 'HotelCard', 'HotelForm', 'HotelPage'],"
        },
        {
          "line": 47,
          "keywords": [
            "cottage"
          ],
          "text": "'·Éô·Éù·É¢·Éî·ÉØ·Éò': ['cottage', 'cabin', '·Éô·Éù·É¢·Éî·ÉØ·Éò·É°', 'CottageForm', 'CottagePage', 'CottageCard'],"
        },
        {
          "line": 52,
          "keywords": [
            "notification"
          ],
          "text": "'·Éõ·Éî·É°·Éò·ÉØ·Éò·Éú·Éí·Éò': ['messaging', 'message', '·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éê', 'MessagingSystem', 'notificationService'],"
        },
        {
          "line": 53,
          "keywords": [
            "vehicle"
          ],
          "text": "'·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò': ['vehicle', 'transport', 'VehicleCard', 'VehicleForm', 'VehiclePage'],"
        },
        {
          "line": 54,
          "keywords": [
            "horse"
          ],
          "text": "'·É™·ÉÆ·Éî·Éú·Éî·Éë·Éò': ['horse', 'horses', 'HorseCard', 'HorseForm'],"
        },
        {
          "line": 55,
          "keywords": [
            "snowmobile"
          ],
          "text": "'·É°·Éú·Éù·É£·Éõ·Éù·Éë·Éò·Éö·Éî·Éë·Éò': ['snowmobile', 'SnowmobileCard', 'SnowmobileForm'],"
        }
      ]
    },
    {
      "path": "ai-service/services/groq_service.js",
      "occurrences": [
        {
          "line": 381,
          "keywords": [
            "booking"
          ],
          "text": "const SYSTEM_PROMPT = `You are an AI developer assistant for the Bakhmaro booking platform."
        },
        {
          "line": 383,
          "keywords": [
            "booking",
            "cottage",
            "hotel"
          ],
          "text": "When asked for general information about the site, read the relevant code and describe the structure and features (e.g. cottages, hotels, booking system)."
        }
      ]
    },
    {
      "path": "ai-service/services/gurulo_intent_router.js",
      "occurrences": [
        {
          "line": 14,
          "keywords": [
            "cottage"
          ],
          "text": "'free cottage',"
        },
        {
          "line": 15,
          "keywords": [
            "cottage"
          ],
          "text": "'cottages',"
        },
        {
          "line": 52,
          "keywords": [
            "cottage"
          ],
          "text": "const COTTAGE_DETAIL_KEYWORDS = ['·Éì·Éî·É¢·Éê·Éö', '·Éò·Éú·É§·Éù', 'amenity', 'bed', 'bath', 'kitchen', 'wifi', 'capacity', 'size'];"
        },
        {
          "line": 295,
          "keywords": [
            "cottage"
          ],
          "text": "if (hasKeyword(normalizedLower, COTTAGE_DETAIL_KEYWORDS)) {"
        },
        {
          "line": 297,
          "keywords": [
            "cottage"
          ],
          "text": "name: 'cottage_details',"
        }
      ]
    },
    {
      "path": "ai-service/services/gurulo_response_builder.js",
      "occurrences": [
        {
          "line": 55,
          "keywords": [
            "cottage"
          ],
          "text": "en: \"I'm here to help with guest topics only‚ÄîBakhmaro cottages, pricing, weather, routes, and tours. I can't assist with technical questions.\","
        },
        {
          "line": 64,
          "keywords": [
            "cottage"
          ],
          "text": "availability: '/cottages',"
        },
        {
          "line": 65,
          "keywords": [
            "cottage"
          ],
          "text": "pricing: '/cottages#pricing',"
        },
        {
          "line": 66,
          "keywords": [
            "cottage"
          ],
          "text": "weather: '/cottages#weather',"
        },
        {
          "line": 67,
          "keywords": [
            "cottage"
          ],
          "text": "tripPlan: '/cottages#plan',"
        },
        {
          "line": 68,
          "keywords": [
            "cottage"
          ],
          "text": "policies: '/cottages#policies',"
        },
        {
          "line": 70,
          "keywords": [
            "cottage"
          ],
          "text": "transport: '/cottages#transport',"
        },
        {
          "line": 71,
          "keywords": [
            "cottage"
          ],
          "text": "attractions: '/cottages#attractions',"
        },
        {
          "line": 72,
          "keywords": [
            "cottage"
          ],
          "text": "details: '/cottages#details',"
        },
        {
          "line": 310,
          "keywords": [
            "cottage"
          ],
          "text": "? 'Happy to chat! Ask me about cottages, prices, or planning your stay.'"
        },
        {
          "line": 439,
          "keywords": [
            "cottage"
          ],
          "text": "? 'No cottages match that capacity. Try adjusting dates or guest count.'"
        },
        {
          "line": 459,
          "keywords": [
            "cottage"
          ],
          "text": "title: language === 'en' ? 'Available cottages' : '·Éó·Éê·Éï·Éò·É°·É£·É§·Éê·Éö·Éò ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò',"
        },
        {
          "line": 498,
          "keywords": [
            "cottage"
          ],
          "text": "? 'Nightly rates vary from ‚Çæ140 for cozy couples stays up to ‚Çæ260 for family cottages with full amenities.'"
        },
        {
          "line": 558,
          "keywords": [
            "horse"
          ],
          "text": "'Day 2 ‚Äì Morning horseback ride, afternoon picnic near the ridge.',"
        },
        {
          "line": 599,
          "keywords": [
            "booking"
          ],
          "text": "? 'Bookings are confirmed with a 30% deposit, refundable up to 14 days before arrival.'"
        },
        {
          "line": 689,
          "keywords": [
            "horse"
          ],
          "text": "? 'Sunrise decks, star-gazing platforms, guided mushroom foraging, and horseback trails await nearby.'"
        },
        {
          "line": 712,
          "keywords": [
            "cottage"
          ],
          "text": "function buildCottageDetailsResponse(metadata = {}, options = {}) {"
        },
        {
          "line": 716,
          "keywords": [
            "cottage"
          ],
          "text": "title: language === 'en' ? 'Cottage highlights' : '·Éô·Éù·É¢·Éî·ÉØ·Éò·É° ·Éõ·Éê·ÉÆ·Éê·É°·Éò·Éê·Éó·Éî·Éë·Éö·Éî·Éë·Éò',"
        },
        {
          "line": 722,
          "keywords": [
            "cottage"
          ],
          "text": "cta: formatCta(language === 'en' ? 'View cottage details' : '·Éò·ÉÆ·Éò·Éö·Éî ·Éô·Éù·É¢·Éî·ÉØ·Éò·É° ·Éì·Éî·É¢·Éê·Éö·Éî·Éë·Éò', CTA_ROUTES.details),"
        },
        {
          "line": 730,
          "keywords": [
            "cottage"
          ],
          "text": "intent_detected: 'cottage_details',"
        },
        {
          "line": 783,
          "keywords": [
            "cottage"
          ],
          "text": "buildCottageDetailsResponse,"
        }
      ]
    },
    {
      "path": "ai-service/services/openai_fallback_service.js",
      "occurrences": [
        {
          "line": 25,
          "keywords": [
            "provider"
          ],
          "text": "provider: 'openai'"
        },
        {
          "line": 51,
          "keywords": [
            "provider"
          ],
          "text": "provider: 'offline'"
        },
        {
          "line": 82,
          "keywords": [
            "provider"
          ],
          "text": "provider: 'openai',"
        },
        {
          "line": 112,
          "keywords": [
            "provider"
          ],
          "text": "provider: 'openai-error',"
        },
        {
          "line": 123,
          "keywords": [
            "provider"
          ],
          "text": "provider: OPENAI_API_KEY ? 'openai' : 'offline',"
        }
      ]
    },
    {
      "path": "ai-service/services/pricing_explainer.js",
      "occurrences": [
        {
          "line": 10,
          "keywords": [
            "cottage"
          ],
          "text": "const cottagePricing = await fileService.getFileContext('src/utils/pricing.ts');"
        },
        {
          "line": 11,
          "keywords": [
            "vehicle"
          ],
          "text": "const vehiclePricing = await fileService.getFileContext('src/utils/vehiclePricing.ts');"
        },
        {
          "line": 17,
          "keywords": [
            "cottage"
          ],
          "text": "${cottagePricing.content || cottagePricing}"
        },
        {
          "line": 19,
          "keywords": [
            "vehicle"
          ],
          "text": "==== VEHICLE_PRICING.TS ===="
        },
        {
          "line": 20,
          "keywords": [
            "vehicle"
          ],
          "text": "${vehiclePricing.content || vehiclePricing}"
        }
      ]
    },
    {
      "path": "ai-service/services/prompt_manager.js",
      "occurrences": [
        {
          "line": 438,
          "keywords": [
            "cottage"
          ],
          "text": "name: 'Bakhmaro Cottages Platform',"
        }
      ]
    },
    {
      "path": "ai-service/services/site_summary.js",
      "occurrences": [
        {
          "line": 2,
          "keywords": [
            "booking"
          ],
          "text": "* Bakhmaro Booking Platform - Static Site Information"
        },
        {
          "line": 12,
          "keywords": [
            "cottage"
          ],
          "text": "cottages: {"
        },
        {
          "line": 17,
          "keywords": [
            "hotel"
          ],
          "text": "hotels: {"
        },
        {
          "line": 22,
          "keywords": [
            "vehicle"
          ],
          "text": "vehicles: {"
        },
        {
          "line": 27,
          "keywords": [
            "horse"
          ],
          "text": "horses: {"
        },
        {
          "line": 32,
          "keywords": [
            "snowmobile"
          ],
          "text": "snowmobiles: {"
        },
        {
          "line": 41,
          "keywords": [
            "booking"
          ],
          "text": "booking: {"
        },
        {
          "line": 66,
          "keywords": [
            "provider"
          ],
          "text": "\"Provider - ·Éõ·Éù·Éõ·É°·Éê·ÉÆ·É£·É†·Éî·Éë·Éò·É° ·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò\","
        },
        {
          "line": 76,
          "keywords": [
            "booking"
          ],
          "text": "bookings: \"·ÉØ·Éê·Éï·É®·Éú·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê ·Éì·Éê ·Éõ·Éù·Éú·Éò·É¢·Éù·É†·Éò·Éú·Éí·Éò\","
        },
        {
          "line": 78,
          "keywords": [
            "provider"
          ],
          "text": "providers: \"·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê ·Éì·Éê ·Éô·Éù·Éõ·Éò·É°·Éò·Éî·Éë·Éò\","
        },
        {
          "line": 80,
          "keywords": [
            "notification"
          ],
          "text": "notifications: \"·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê\","
        },
        {
          "line": 139,
          "keywords": [
            "booking",
            "calendar"
          ],
          "text": "- BookingModal.tsx, Calendar.tsx, PricingManager.tsx"
        },
        {
          "line": 144,
          "keywords": [
            "booking"
          ],
          "text": "- bookingService.ts, userService.ts, priceCodeService.ts"
        },
        {
          "line": 167,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingModal.tsx - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·Éõ·Éó·Éê·Éï·Éê·É†·Éò ·É§·Éê·Éú·ÉØ·Éê·É†·Éê"
        },
        {
          "line": 168,
          "keywords": [
            "calendar"
          ],
          "text": "‚Ä¢ Calendar.tsx - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éê·É†·É©·Éî·Éï·Éò·É° ·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†·Éò"
        },
        {
          "line": 173,
          "keywords": [
            "cottage"
          ],
          "text": "‚Ä¢ AdminCottages.tsx - ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê"
        },
        {
          "line": 178,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ bookingService.ts - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·Éß·Éï·Éî·Éö·Éê ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 181,
          "keywords": [
            "notification"
          ],
          "text": "‚Ä¢ notificationService.ts - ·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê"
        },
        {
          "line": 200,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ src/services/bookingService.ts - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·É°·É†·É£·Éö·Éò ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 203,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ src/components/BookingModal.tsx - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° UI"
        },
        {
          "line": 207,
          "keywords": [
            "calendar"
          ],
          "text": "‚Ä¢ src/components/Calendar.tsx - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 218,
          "keywords": [
            "booking"
          ],
          "text": "booking_process: () => {"
        },
        {
          "line": 244,
          "keywords": [
            "provider"
          ],
          "text": "‚Ä¢ Customer, Provider, Admin ·É†·Éù·Éö·Éî·Éë·Éò"
        },
        {
          "line": 277,
          "keywords": [
            "booking"
          ],
          "text": "// Booking related components"
        },
        {
          "line": 278,
          "keywords": [
            "booking"
          ],
          "text": "'BookingModal': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éõ·Éù·Éì·Éê·Éö·É£·É†·Éò ·É§·Éê·Éú·ÉØ·Éê·É†·Éê - ·Éú·Éù·Éõ·É†·Éî·Éë·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É°·Éó·Éï·Éò·É°, ·Éê·É°·Éî·Éï·Éî ·É§·Éê·É°·Éò·É° ·Éí·Éê·Éõ·Éù·Éó·Éï·Éö·Éê ·Éì·Éê ·Éï·Éê·Éö·Éò·Éì·Éê·É™·Éò·Éê',"
        },
        {
          "line": 279,
          "keywords": [
            "booking"
          ],
          "text": "'BookingForm': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É§·Éù·É†·Éõ·Éê - ·Éõ·Éù·Éú·Éê·É™·Éî·Éõ·Éî·Éë·Éò·É° ·É®·Éî·Éß·Éï·Éê·Éú·Éò·É°·Éó·Éï·Éò·É°, ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·É®·Éî·É†·É©·Éî·Éï·Éê ·Éì·Éê ·É¢·Éî·É†·Éõ·Éò·Éú·Éî·Éë·Éò·É° ·Éì·Éê·Éì·Éê·É°·É¢·É£·É†·Éî·Éë·Éê',"
        },
        {
          "line": 280,
          "keywords": [
            "booking"
          ],
          "text": "'BookingAuth': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éê·Éï·É¢·Éù·É†·Éò·Éñ·Éê·É™·Éò·Éê - ·Éõ·Éù·Éõ·ÉÆ·Éõ·Éê·É†·Éî·Éë·Éö·Éò·É° ·É®·Éî·É°·Éï·Éö·Éê/·É†·Éî·Éí·Éò·É°·É¢·É†·Éê·É™·Éò·Éê ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éû·É†·Éù·É™·Éî·É°·É®·Éò',"
        },
        {
          "line": 281,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "'VehicleBookingForm': '·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É§·Éù·É†·Éõ·Éê - ·Éõ·Éê·Éú·É•·Éê·Éú·Éî·Éë·Éò·É°, ·Éê·É¢·Éï·Éî·Éë·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê',"
        },
        {
          "line": 282,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "'HotelBookingForm': '·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É§·Éù·É†·Éõ·Éê - ·Éù·Éó·Éê·ÉÆ·Éî·Éë·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê ·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·Éî·Éë·É®·Éò',"
        },
        {
          "line": 285,
          "keywords": [
            "booking"
          ],
          "text": "'AdminBookings': '·Éê·Éì·Éõ·Éò·Éú·Éò·É°·É¢·É†·Éê·É¢·Éù·É†·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê - ·Éß·Éï·Éî·Éö·Éê ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éú·Éê·ÉÆ·Éï·Éê/·É†·Éî·Éì·Éê·É•·É¢·Éò·É†·Éî·Éë·Éê',"
        },
        {
          "line": 287,
          "keywords": [
            "commission"
          ],
          "text": "'AdminCommission': '·Éô·Éù·Éõ·Éò·É°·Éò·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê - ·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éî·Éë·Éò·É° ·Éô·Éù·Éõ·Éò·É°·Éò·Éò·É° ·Éí·Éê·Éõ·Éù·Éó·Éï·Éö·Éê ·Éì·Éê ·Éí·Éê·Éì·Éê·ÉÆ·Éì·Éê',"
        },
        {
          "line": 292,
          "keywords": [
            "booking"
          ],
          "text": "booking: ["
        },
        {
          "line": 293,
          "keywords": [
            "booking"
          ],
          "text": "'BookingService.ts', 'bookingService.ts', 'BookingForm.tsx',"
        },
        {
          "line": 294,
          "keywords": [
            "booking"
          ],
          "text": "'BookingModal.tsx', 'BookingAuth.tsx', 'UserBookingsSection.tsx',"
        },
        {
          "line": 295,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "'AdminProviderBookings.tsx', 'ProviderBookings.tsx'"
        },
        {
          "line": 298,
          "keywords": [
            "vehicle"
          ],
          "text": "'pricing.ts', 'priceCodeService.ts', 'vehiclePricing.ts',"
        },
        {
          "line": 302,
          "keywords": [
            "cottage",
            "hotel"
          ],
          "text": "'AdminCottages.tsx', 'AdminUsers.tsx', 'AdminHotels.tsx',"
        },
        {
          "line": 303,
          "keywords": [
            "provider"
          ],
          "text": "'AdminProviders.tsx', 'MainDashboard.tsx'"
        },
        {
          "line": 305,
          "keywords": [
            "cottage"
          ],
          "text": "cottage: ["
        },
        {
          "line": 306,
          "keywords": [
            "cottage"
          ],
          "text": "'CottageForm.tsx', 'CottagePage.tsx', 'CottagesList.tsx'"
        },
        {
          "line": 372,
          "keywords": [
            "booking"
          ],
          "text": "case 'booking_process':"
        },
        {
          "line": 373,
          "keywords": [
            "booking"
          ],
          "text": "case 'booking_system':"
        },
        {
          "line": 374,
          "keywords": [
            "booking"
          ],
          "text": "return templates.booking_process();"
        },
        {
          "line": 424,
          "keywords": [
            "booking"
          ],
          "text": "'booking': {"
        },
        {
          "line": 425,
          "keywords": [
            "booking"
          ],
          "text": "description: '·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éò·É° ·É§·Éê·Éò·Éö·Éî·Éë·Éò - BookingService.ts, BookingModal.tsx',"
        },
        {
          "line": 427,
          "keywords": [
            "booking",
            "calendar"
          ],
          "text": "relatedFiles: ['src/services/bookingService.ts', 'src/components/BookingModal.tsx', 'src/components/Calendar.tsx']"
        },
        {
          "line": 432,
          "keywords": [
            "vehicle"
          ],
          "text": "relatedFiles: ['src/utils/pricing.ts', 'src/utils/vehiclePricing.ts', 'src/components/PricingManager.tsx']"
        },
        {
          "line": 437,
          "keywords": [
            "cottage"
          ],
          "text": "relatedFiles: ['src/AdminUsers.tsx', 'src/AdminCottages.tsx', 'src/MainDashboard.tsx']"
        },
        {
          "line": 465,
          "keywords": [
            "provider"
          ],
          "text": "summary += `üìä ·É†·Éù·Éö·Éî·Éë·Éò: Customer, Provider, Admin, Super Admin\\n`;"
        }
      ]
    },
    {
      "path": "ai-service/test_ai_comprehensive.js",
      "occurrences": [
        {
          "line": 17,
          "keywords": [
            "booking"
          ],
          "text": "query: '·Éõ·Éù·Éõ·Éò·Éß·Éî·Éï·Éò Bakhmaro Booking-·Éò·É° ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éò ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò',"
        },
        {
          "line": 31,
          "keywords": [
            "booking"
          ],
          "text": "id: 'booking_process',"
        },
        {
          "line": 408,
          "keywords": [
            "booking"
          ],
          "text": "if (expanded.includes('booking') && expanded.includes('reservation')) {"
        }
      ]
    },
    {
      "path": "ai-service/test_ai_final_scenarios.js",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "booking"
          ],
          "text": "query: '·Éõ·Éù·Éõ·Éò·Éß·Éî·Éï·Éò Bakhmaro Booking-·Éò·É° ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éò ·Éí·Éï·Éî·É†·Éì·Éî·Éë·Éò',"
        },
        {
          "line": 16,
          "keywords": [
            "booking"
          ],
          "text": "id: 'booking_process',"
        },
        {
          "line": 19,
          "keywords": [
            "booking"
          ],
          "text": "description: 'Step-by-step booking process'"
        },
        {
          "line": 22,
          "keywords": [
            "provider"
          ],
          "text": "// 3. Provider ·É†·Éù·Éö·Éò·É° ·É£·É§·Éö·Éî·Éë·Éî·Éë·Éò"
        },
        {
          "line": 24,
          "keywords": [
            "provider"
          ],
          "text": "id: 'provider_permissions',"
        },
        {
          "line": 25,
          "keywords": [
            "provider"
          ],
          "text": "query: '·É†·Éê ·Éì·Éù·Éú·Éò·É° ·É¨·Éï·Éì·Éù·Éõ·Éê ·Éê·É•·Éï·É° Provider ·É†·Éù·Éö·É°?',"
        },
        {
          "line": 26,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "expectedElements: ['view_dashboard', 'manage_cottages', 'view_bookings', 'admin ·Éû·Éê·Éú·Éî·Éö·Éò'],"
        },
        {
          "line": 27,
          "keywords": [
            "provider"
          ],
          "text": "description: 'Provider role permissions and access levels'"
        },
        {
          "line": 34,
          "keywords": [
            "cottage"
          ],
          "text": "expectedElements: ['AdminCottages.tsx', 'CottageForm.tsx', 'CottagePage.tsx', 'firestore'],"
        },
        {
          "line": 35,
          "keywords": [
            "cottage"
          ],
          "text": "description: 'Technical file structure for cottage management'"
        },
        {
          "line": 50,
          "keywords": [
            "booking"
          ],
          "text": "expectedElements: ['depositAmount', 'totalPrice', 'BookingModal', '·Éê·Éï·Éê·Éú·É°·Éò'],"
        },
        {
          "line": 58,
          "keywords": [
            "commission"
          ],
          "text": "expectedElements: ['manage_users', 'manage_roles', 'view_logs', 'commission ·Éõ·Éê·É†·Éó·Éï·Éê'],"
        },
        {
          "line": 98,
          "keywords": [
            "notification"
          ],
          "text": "expectedElements: ['MessagingSystem', 'real-time', 'notifications'],"
        },
        {
          "line": 99,
          "keywords": [
            "notification"
          ],
          "text": "description: 'Internal messaging and notification system'"
        },
        {
          "line": 104,
          "keywords": [
            "bank"
          ],
          "text": "id: 'bank_account_management',"
        },
        {
          "line": 106,
          "keywords": [
            "bank",
            "commission"
          ],
          "text": "expectedElements: ['BankAccountManager', 'commission', 'payment routing'],"
        },
        {
          "line": 107,
          "keywords": [
            "bank",
            "provider"
          ],
          "text": "description: 'Bank account management for providers'"
        }
      ]
    },
    {
      "path": "ai-service/test_groq_full_system.js",
      "occurrences": [
        {
          "line": 246,
          "keywords": [
            "booking"
          ],
          "text": "'·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éê ·Éê·É•·Éï·É° BookingService-·É°?',"
        }
      ]
    },
    {
      "path": "ai-service/test_groq_responses.js",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éê ·Éê·É•·Éï·É° bookingService.ts-·É®·Éò?\","
        },
        {
          "line": 8,
          "keywords": [
            "booking"
          ],
          "text": "context: \"·Éî·É° ·Éô·Éò·Éó·ÉÆ·Éï·Éê ·Éî·ÉÆ·Éî·Éë·Éê booking service-·Éò·É° ·É§·É£·Éú·É•·É™·Éò·Éù·Éú·Éê·Éö·É°\""
        },
        {
          "line": 12,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éù·Éí·Éù·É† ·Éõ·É£·É®·Éê·Éù·Éë·É° BookingModal ·Éô·Éù·Éõ·Éû·Éù·Éú·Éî·Éú·É¢·Éò?\","
        },
        {
          "line": 17,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·Éö·Éù·Éí·Éò·Éô·Éê·Éê transport booking ·É°·Éî·É†·Éï·Éò·É°·É®·Éò?\","
        },
        {
          "line": 18,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "context: \"·Éî·É° ·Éô·Éò·Éó·ÉÆ·Éï·Éê ·Éî·ÉÆ·Éî·Éë·Éê vehicle booking ·Éö·Éù·Éí·Éò·Éô·Éê·É°\""
        }
      ]
    },
    {
      "path": "ai-service/tests/gurulo_chat_flow.test.js",
      "occurrences": [
        {
          "line": 53,
          "keywords": [
            "cottage"
          ],
          "text": "expect(sections[0].cta).toContain('/cottages');"
        },
        {
          "line": 55,
          "keywords": [
            "cottage"
          ],
          "text": "expect(sections[1].cta).toContain('/cottages#plan');"
        },
        {
          "line": 75,
          "keywords": [
            "cottage"
          ],
          "text": "expect(sections[0].cta).toContain('/cottages');"
        },
        {
          "line": 80,
          "keywords": [
            "cottage"
          ],
          "text": "test('Availability intent with full params returns cottage cards and CTA links', async () => {"
        },
        {
          "line": 95,
          "keywords": [
            "cottage"
          ],
          "text": "expect(sections[0].cta).toContain('/cottages?from=2025-07-01&to=2025-07-04&guests=3');"
        },
        {
          "line": 96,
          "keywords": [
            "cottage"
          ],
          "text": "expect(sections[1].cta).toContain('/cottages#pricing');"
        }
      ]
    },
    {
      "path": "ai-service/tests/task_manager.integration.test.js",
      "occurrences": [
        {
          "line": 18,
          "keywords": [
            "booking"
          ],
          "text": "'·Éí·Éó·ÉÆ·Éù·Éï ·Éõ·Éù·É´·Éî·Éë·Éú·Éî ·É§·Éê·Éò·Éö·Éò bookingService.ts ·É†·Éù·Éõ ·Éí·Éê·Éú·Éï·Éê·Éê·Éö·Éò·Éñ·Éù',"
        }
      ]
    },
    {
      "path": "ai-service/utils/enhanced_georgian_validator.js",
      "occurrences": [
        {
          "line": 134,
          "keywords": [
            "booking"
          ],
          "text": "'·É©·Éî·Éõ·Éò ·É°·Éê·Éò·É¢·Éò': '·Éë·Éê·ÉÆ·Éõ·Éê·É†·Éù·É° Booking ·Éû·Éö·Éê·É¢·É§·Éù·É†·Éõ·Éê',"
        }
      ]
    },
    {
      "path": "backend/.env.example",
      "occurrences": [
        {
          "line": 116,
          "keywords": [
            "notification"
          ],
          "text": "# üìß NOTIFICATIONS"
        },
        {
          "line": 118,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_EMAIL_ENABLED=false"
        },
        {
          "line": 119,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_EMAIL_RECIPIENTS=alerts@ai.bakhmaro.co"
        },
        {
          "line": 122,
          "keywords": [
            "notification"
          ],
          "text": "SMTP_USER=notifications@ai.bakhmaro.co"
        },
        {
          "line": 124,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_WEBHOOKS_ENABLED=false"
        },
        {
          "line": 125,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_WEBHOOK_URLS="
        },
        {
          "line": 126,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_WEBHOOK_SECRET=bk_notification_webhook_secret_2025"
        },
        {
          "line": 127,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_WEBHOOK_TIMEOUT=10000"
        },
        {
          "line": 128,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_EVENTS=proposal_created,applied,smoke_failed,rollback_done"
        },
        {
          "line": 129,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_RATE_LIMIT=100"
        },
        {
          "line": 130,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_RETRY_ATTEMPTS=3"
        },
        {
          "line": 131,
          "keywords": [
            "notification"
          ],
          "text": "NOTIFICATION_RETRY_BACKOFF=5000"
        }
      ]
    },
    {
      "path": "backend/ai_controller.js",
      "occurrences": [
        {
          "line": 123,
          "keywords": [
            "booking"
          ],
          "text": "const systemPrompt = `You are an AI assistant for the Bakhmaro booking platform. Answer in natural Georgian."
        },
        {
          "line": 364,
          "keywords": [
            "cottage"
          ],
          "text": "- ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò (Cottages)"
        },
        {
          "line": 365,
          "keywords": [
            "hotel"
          ],
          "text": "- ·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·Éî·Éë·Éò (Hotels)"
        },
        {
          "line": 366,
          "keywords": [
            "vehicle"
          ],
          "text": "- ·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò (Vehicles)"
        },
        {
          "line": 367,
          "keywords": [
            "horse"
          ],
          "text": "- ·É™·ÉÆ·Éî·Éú·Éî·Éë·Éò (Horses)"
        },
        {
          "line": 368,
          "keywords": [
            "snowmobile"
          ],
          "text": "- ·É°·Éú·Éù·É£·Éõ·Éù·Éë·Éò·Éö·Éî·Éë·Éò (Snowmobiles)"
        },
        {
          "line": 414,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingService.ts - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 415,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingForm.tsx - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·É§·Éù·É†·Éõ·Éê"
        },
        {
          "line": 684,
          "keywords": [
            "booking"
          ],
          "text": "booking_help: ["
        },
        {
          "line": 685,
          "keywords": [
            "booking"
          ],
          "text": "/·ÉØ·Éê·Éï·É®·Éê·Éú·Éò/, /booking/, /·É†·Éî·Éñ·Éî·É†·Éï·Éê·É™·Éò·Éê/, /reservation/, /·ÉØ·Éê·Éï·É®·Éú·Éê/, /book/"
        },
        {
          "line": 992,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê (BookingService)"
        },
        {
          "line": 1011,
          "keywords": [
            "booking"
          ],
          "text": "if (lowerMessage.includes('bookingservice') || lowerMessage.includes('booking service')) {"
        },
        {
          "line": 1012,
          "keywords": [
            "booking"
          ],
          "text": "return `üìã BookingService.ts ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éò ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò:"
        },
        {
          "line": 1013,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ createBooking() - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É®·Éî·É•·Éõ·Éú·Éê"
        },
        {
          "line": 1014,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ updateBooking() - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éí·Éê·Éú·Éê·ÉÆ·Éö·Éî·Éë·Éê"
        },
        {
          "line": 1015,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ cancelBooking() - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éí·Éê·É£·É•·Éõ·Éî·Éë·Éê"
        },
        {
          "line": 1016,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ getBookingsByUser() - ·Éõ·Éù·Éõ·ÉÆ·Éõ·Éê·É†·Éî·Éë·Éö·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éî·Éë·Éò"
        },
        {
          "line": 1017,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ validateBookingDates() - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éï·Éê·Éö·Éò·Éì·Éê·É™·Éò·Éê"
        },
        {
          "line": 1022,
          "keywords": [
            "booking"
          ],
          "text": "if (lowerMessage.includes('bookingmodal') || lowerMessage.includes('booking modal')) {"
        },
        {
          "line": 1023,
          "keywords": [
            "booking"
          ],
          "text": "return `üè† BookingModal.tsx ·Éô·Éù·Éõ·Éû·Éù·Éú·Éî·Éú·É¢·Éò:"
        },
        {
          "line": 1076,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ bookingService.ts - ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê"
        },
        {
          "line": 1078,
          "keywords": [
            "notification"
          ],
          "text": "‚Ä¢ notificationService.ts - ·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò"
        },
        {
          "line": 1087,
          "keywords": [
            "booking"
          ],
          "text": "·Éô·Éù·Éú·Éô·É†·Éî·É¢·É£·Éö·Éò ·Éô·Éò·Éó·ÉÆ·Éï·Éê ·Éì·Éê·Éõ·Éò·É°·Éï·Éò - ·Éõ·Éê·Éí·Éê·Éö·Éò·Éó·Éê·Éì: \"·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò·Éê BookingService-·É®·Éò?\" ·Éê·Éú \"·É†·Éù·Éí·Éù·É† ·Éõ·É£·É®·Éê·Éù·Éë·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê?\"`;"
        },
        {
          "line": 1126,
          "keywords": [
            "booking"
          ],
          "text": "comprehensive_grammar: '·Éí·Éê·É°·É¨·Éù·É†·Éî ·É•·Éê·É†·Éó·É£·Éö·Éò ·Éí·É†·Éê·Éõ·Éê·É¢·Éò·Éô·Éê ·Éì·Éê ·Éù·É†·Éó·Éù·Éí·É†·Éê·É§·Éò·Éê. ·Éó·Éê·Éï·Éò·Éì·Éê·Éú ·Éê·Éò·É™·Éò·Éö·Éî \"·Éõ·Éî ·Éï·Éê·É†...\" ·É°·É¢·Éò·Éö·Éò·É° ·Éó·Éï·Éò·Éó·Éê·É¶·Éõ·Éù·É©·Éî·Éú·Éî·Éë·Éò. ·É®·Éî·É™·Éï·Éê·Éö·Éî \"·É©·Éî·Éõ·Éò ·É°·Éê·Éò·É¢·Éò\" -> \"·Éë·Éê·ÉÆ·Éõ·Éê·É†·Éù·É° Booking ·Éû·Éö·Éê·É¢·É§·Éù·É†·Éõ·Éê\". ·Éí·Éê·ÉÆ·Éê·Éì·Éî ·É¢·Éî·É•·É°·É¢·Éò ·Éë·É£·Éú·Éî·Éë·É†·Éò·Éï·Éò ·Éì·Éê ·Éû·É†·Éù·É§·Éî·É°·Éò·Éù·Éú·Éê·Éö·É£·É†·Éò. ·Éì·Éê·Éê·Éë·É†·É£·Éú·Éî ·Éõ·ÉÆ·Éù·Éö·Éù·Éì ·Éí·Éê·É°·É¨·Éù·É†·Éî·Éë·É£·Éö·Éò ·É¢·Éî·É•·É°·É¢·Éò.'"
        }
      ]
    },
    {
      "path": "backend/ai_response_improver.js",
      "occurrences": [
        {
          "line": 22,
          "keywords": [
            "booking"
          ],
          "text": "'booking': '·ÉØ·Éê·Éï·É®·Éê·Éú·Éò',"
        }
      ]
    },
    {
      "path": "backend/backend/index.js",
      "occurrences": [
        {
          "line": 102,
          "keywords": [
            "notification"
          ],
          "text": "const notificationsRoute = require('./routes/notifications');"
        },
        {
          "line": 122,
          "keywords": [
            "notification"
          ],
          "text": "app.use('/api/notifications', notificationsRoute);"
        },
        {
          "line": 124,
          "keywords": [
            "commission"
          ],
          "text": "app.use('/api/commission', async (req, res) => {"
        },
        {
          "line": 126,
          "keywords": [
            "commission"
          ],
          "text": "const path = req.originalUrl.replace(/^\\/api\\/commission/, '/commission');"
        }
      ]
    },
    {
      "path": "backend/backend/index.js.backup.1753954201164",
      "occurrences": [
        {
          "line": 59,
          "keywords": [
            "notification"
          ],
          "text": "const notificationsRoute = require('./routes/notifications');"
        },
        {
          "line": 61,
          "keywords": [
            "commission"
          ],
          "text": "const commissionRoute = require('./routes/commission');"
        },
        {
          "line": 72,
          "keywords": [
            "notification"
          ],
          "text": "app.use('/api/notifications', notificationsRoute);"
        },
        {
          "line": 74,
          "keywords": [
            "commission"
          ],
          "text": "app.use('/api/commission', commissionRoute);"
        }
      ]
    },
    {
      "path": "backend/data/auto_improve_event_store.json",
      "occurrences": [
        {
          "line": 37878,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 37887,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 37898,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 38238,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 38247,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 38258,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 38598,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 38607,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 38618,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 38958,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 38967,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 38978,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 39264,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 39273,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 39284,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 39624,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 39633,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 39644,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 39984,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 39993,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 40004,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 40290,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 40299,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 40310,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 40650,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 40659,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 40670,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 41010,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 41019,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 41030,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 41370,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 41379,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 41390,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 41676,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 41685,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 41696,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 42036,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 42045,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 42056,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 42342,
          "keywords": [
            "provider"
          ],
          "text": "\"message\": \"‚úÖ ·É°·Éò·É°·É¢·Éî·Éõ·É£·É†·Éò ·Éù·Éû·Éî·É†·Éê·É™·Éò·Éê (services/proposal_memory_provider.js) ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·Éì·Éê·É°·É†·É£·Éö·Éì·Éê 161ms\","
        },
        {
          "line": 42351,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        },
        {
          "line": 42362,
          "keywords": [
            "provider"
          ],
          "text": "\"filePath\": \"services/proposal_memory_provider.js\","
        }
      ]
    },
    {
      "path": "backend/data/secrets_store.json",
      "occurrences": [
        {
          "line": 1103,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_EMAIL_ENABLED\","
        },
        {
          "line": 1114,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_EMAIL_RECIPIENTS\","
        },
        {
          "line": 1125,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_EVENTS\","
        },
        {
          "line": 1136,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_RATE_LIMIT\","
        },
        {
          "line": 1147,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_RETRY_ATTEMPTS\","
        },
        {
          "line": 1158,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_RETRY_BACKOFF\","
        },
        {
          "line": 1169,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_WEBHOOK_SECRET\","
        },
        {
          "line": 1180,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_WEBHOOK_TIMEOUT\","
        },
        {
          "line": 1191,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_WEBHOOK_URLS\","
        },
        {
          "line": 1202,
          "keywords": [
            "notification"
          ],
          "text": "\"key\": \"NOTIFICATION_WEBHOOKS_ENABLED\","
        }
      ]
    },
    {
      "path": "backend/index.js",
      "occurrences": [
        {
          "line": 398,
          "keywords": [
            "provider"
          ],
          "text": "const privilegedRoles = new Set(['SUPER_ADMIN', 'ADMIN', 'PROVIDER_ADMIN']);"
        },
        {
          "line": 672,
          "keywords": [
            "provider"
          ],
          "text": "const providerAuthRoutes = require('./routes/provider_auth');"
        },
        {
          "line": 1127,
          "keywords": [
            "notification"
          ],
          "text": "// User and Notification routes"
        },
        {
          "line": 1129,
          "keywords": [
            "notification"
          ],
          "text": "app.use('/api/notifications', require('./routes/notifications'));"
        },
        {
          "line": 1243,
          "keywords": [
            "notification"
          ],
          "text": "// Mount notification hooks routes"
        },
        {
          "line": 1244,
          "keywords": [
            "notification"
          ],
          "text": "const notificationHooks = require('./routes/notification_hooks');"
        },
        {
          "line": 1245,
          "keywords": [
            "notification"
          ],
          "text": "app.use('/api/notifications', notificationHooks);"
        }
      ]
    },
    {
      "path": "backend/index.js.backup.1753951408002",
      "occurrences": [
        {
          "line": 60,
          "keywords": [
            "notification"
          ],
          "text": "const notificationsRoute = require('./routes/notifications');"
        },
        {
          "line": 62,
          "keywords": [
            "commission"
          ],
          "text": "const commissionRoute = require('./routes/commission');"
        },
        {
          "line": 73,
          "keywords": [
            "notification"
          ],
          "text": "app.use('/api/notifications', notificationsRoute);"
        },
        {
          "line": 75,
          "keywords": [
            "commission"
          ],
          "text": "app.use('/api/commission', commissionRoute);"
        }
      ]
    },
    {
      "path": "backend/index.js.backup.1753951417419",
      "occurrences": [
        {
          "line": 60,
          "keywords": [
            "notification"
          ],
          "text": "const notificationsRoute = require('./routes/notifications');"
        },
        {
          "line": 62,
          "keywords": [
            "commission"
          ],
          "text": "const commissionRoute = require('./routes/commission');"
        },
        {
          "line": 73,
          "keywords": [
            "notification"
          ],
          "text": "app.use('/api/notifications', notificationsRoute);"
        },
        {
          "line": 75,
          "keywords": [
            "commission"
          ],
          "text": "app.use('/api/commission', commissionRoute);"
        }
      ]
    },
    {
      "path": "backend/middleware/admin_guards.js",
      "occurrences": [
        {
          "line": 61,
          "keywords": [
            "provider"
          ],
          "text": "const privilegedRoles = new Set(['ADMIN', 'SUPER_ADMIN', 'PROVIDER_ADMIN']);"
        }
      ]
    },
    {
      "path": "backend/middleware/error_handler.js",
      "occurrences": [
        {
          "line": 31,
          "keywords": [
            "booking"
          ],
          "text": "'BookingConflict': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éô·Éù·Éú·É§·Éö·Éò·É•·É¢·Éò - ·Éî·É° ·Éó·Éê·É†·Éò·É¶·Éò ·É£·Éô·Éï·Éî ·Éì·Éê·Éô·Éê·Éï·Éî·Éë·É£·Éö·Éò·Éê',"
        },
        {
          "line": 33,
          "keywords": [
            "booking"
          ],
          "text": "'BookingNotAllowed': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê ·Éê·Éõ ·Éû·Éò·É†·Éù·Éë·Éî·Éë·É®·Éò ·É®·Éî·É£·É´·Éö·Éî·Éë·Éî·Éö·Éò·Éê',"
        }
      ]
    },
    {
      "path": "backend/middleware/requireAdminSetupToken.js",
      "occurrences": [
        {
          "line": 3,
          "keywords": [
            "provider"
          ],
          "text": "const privilegedRoles = new Set(['SUPER_ADMIN', 'ADMIN', 'PROVIDER_ADMIN']);"
        }
      ]
    },
    {
      "path": "backend/middleware/role_guards.js",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "provider"
          ],
          "text": "const requireProvider = requireRole(['PROVIDER'], {"
        },
        {
          "line": 10,
          "keywords": [
            "provider"
          ],
          "text": "action: 'backend.guard.provider',"
        },
        {
          "line": 56,
          "keywords": [
            "provider"
          ],
          "text": "canAccessProvider: false,"
        },
        {
          "line": 67,
          "keywords": [
            "provider"
          ],
          "text": "case 'PROVIDER':"
        },
        {
          "line": 68,
          "keywords": [
            "provider"
          ],
          "text": "permissions.canAccessProvider = true;"
        },
        {
          "line": 81,
          "keywords": [
            "provider"
          ],
          "text": "requireProvider,"
        }
      ]
    },
    {
      "path": "backend/middleware/telemetry_middleware.js",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "provider"
          ],
          "text": "const { MeterProvider } = require('@opentelemetry/sdk-metrics');"
        },
        {
          "line": 24,
          "keywords": [
            "provider"
          ],
          "text": "const meterProvider = new MeterProvider({"
        },
        {
          "line": 33,
          "keywords": [
            "provider"
          ],
          "text": "metrics.setGlobalMeterProvider(meterProvider);"
        }
      ]
    },
    {
      "path": "backend/package-lock.json",
      "occurrences": [
        {
          "line": 5805,
          "keywords": [
            "bank"
          ],
          "text": "\"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\","
        }
      ]
    },
    {
      "path": "backend/package.json",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "cottage"
          ],
          "text": "\"description\": \"Backend server for Bakhmaro Cottages platform\","
        }
      ]
    },
    {
      "path": "backend/routes/admin_users.js",
      "occurrences": [
        {
          "line": 40,
          "keywords": [
            "provider"
          ],
          "text": "role: Joi.string().valid('SUPER_ADMIN', 'PROVIDER').required(),"
        },
        {
          "line": 60,
          "keywords": [
            "provider"
          ],
          "text": "is: 'PROVIDER',"
        },
        {
          "line": 65,
          "keywords": [
            "provider"
          ],
          "text": "is: 'PROVIDER',"
        },
        {
          "line": 70,
          "keywords": [
            "provider"
          ],
          "text": "is: 'PROVIDER',"
        }
      ]
    },
    {
      "path": "backend/routes/ai_admin.js",
      "occurrences": [
        {
          "line": 76,
          "keywords": [
            "provider"
          ],
          "text": "const provider = process.env.OPENAI_API_KEY || process.env.OPENAI_FALLBACK_KEY ? 'openai' : 'offline';"
        },
        {
          "line": 82,
          "keywords": [
            "provider"
          ],
          "text": "provider,"
        },
        {
          "line": 196,
          "keywords": [
            "provider"
          ],
          "text": "const provider = process.env.OPENAI_API_KEY || process.env.OPENAI_FALLBACK_KEY ? 'openai' : 'offline';"
        },
        {
          "line": 212,
          "keywords": [
            "provider"
          ],
          "text": "provider,"
        },
        {
          "line": 219,
          "keywords": [
            "provider"
          ],
          "text": "provider,"
        }
      ]
    },
    {
      "path": "backend/routes/ai_chat.js",
      "occurrences": [
        {
          "line": 135,
          "keywords": [
            "provider"
          ],
          "text": "const hasRealtimeProvider = Boolean("
        },
        {
          "line": 141,
          "keywords": [
            "provider"
          ],
          "text": "return hasRealtimeProvider ? 'auto' : 'disabled';"
        }
      ]
    },
    {
      "path": "backend/routes/ai_rollout_control.js",
      "occurrences": [
        {
          "line": 51,
          "keywords": [
            "notification"
          ],
          "text": "// Send notification if hooks service available"
        },
        {
          "line": 53,
          "keywords": [
            "notification"
          ],
          "text": "const NotificationHooksService = require('../services/notificationHooks');"
        },
        {
          "line": 54,
          "keywords": [
            "notification"
          ],
          "text": "const notificationHooks = new NotificationHooksService();"
        },
        {
          "line": 56,
          "keywords": [
            "notification"
          ],
          "text": "await notificationHooks.notify('rollout_update', {"
        },
        {
          "line": 64,
          "keywords": [
            "notification"
          ],
          "text": "console.warn('‚ö†Ô∏è Failed to send rollout notification:', notifyError.message);"
        },
        {
          "line": 131,
          "keywords": [
            "notification"
          ],
          "text": "// Send emergency rollback notification"
        },
        {
          "line": 133,
          "keywords": [
            "notification"
          ],
          "text": "const NotificationHooksService = require('../services/notificationHooks');"
        },
        {
          "line": 134,
          "keywords": [
            "notification"
          ],
          "text": "const notificationHooks = new NotificationHooksService();"
        },
        {
          "line": 136,
          "keywords": [
            "notification"
          ],
          "text": "await notificationHooks.notify('emergency_rollback', {"
        },
        {
          "line": 142,
          "keywords": [
            "notification"
          ],
          "text": "console.warn('‚ö†Ô∏è Failed to send rollback notification:', notifyError.message);"
        }
      ]
    },
    {
      "path": "backend/routes/auto_improve.js",
      "occurrences": [
        {
          "line": 215,
          "keywords": [
            "notification"
          ],
          "text": "// Notification hooks service"
        },
        {
          "line": 216,
          "keywords": [
            "notification"
          ],
          "text": "const NotificationHooksService = require('../services/notificationHooks');"
        },
        {
          "line": 217,
          "keywords": [
            "notification"
          ],
          "text": "const notificationHooks = new NotificationHooksService();"
        },
        {
          "line": 1958,
          "keywords": [
            "notification"
          ],
          "text": "// Send notification for successful apply with proper error handling"
        },
        {
          "line": 1959,
          "keywords": [
            "notification"
          ],
          "text": "const notificationPromise = (async () => {"
        },
        {
          "line": 1962,
          "keywords": [
            "notification"
          ],
          "text": "await notificationHooks.notify('applied', {"
        },
        {
          "line": 1971,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`‚úÖ [NOTIFICATIONS] Applied notification sent for ${proposalId}`);"
        },
        {
          "line": 1974,
          "keywords": [
            "notification"
          ],
          "text": "console.error(`‚ùå [NOTIFICATIONS] Failed to send applied notification for ${proposalId}:`, error.message);"
        },
        {
          "line": 1975,
          "keywords": [
            "notification"
          ],
          "text": "// Don't let notification failures fail the entire apply operation"
        },
        {
          "line": 1979,
          "keywords": [
            "notification"
          ],
          "text": "// Don't await notification - let it run in background"
        },
        {
          "line": 1980,
          "keywords": [
            "notification"
          ],
          "text": "notificationPromise.catch(err => {"
        },
        {
          "line": 1981,
          "keywords": [
            "notification"
          ],
          "text": "console.error(`‚ö†Ô∏è [NOTIFICATIONS] Background notification error for ${proposalId}:`, err.message);"
        },
        {
          "line": 2070,
          "keywords": [
            "notification"
          ],
          "text": "// Send notification for rollback completion"
        },
        {
          "line": 2074,
          "keywords": [
            "notification"
          ],
          "text": "await notificationHooks.notify('rollback_done', {"
        },
        {
          "line": 2085,
          "keywords": [
            "notification"
          ],
          "text": "console.error(`‚ùå [NOTIFICATIONS] Failed to send rollback_done notification for ${proposalId}:`, error);"
        }
      ]
    },
    {
      "path": "backend/routes/backup_fallback.js",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "provider"
          ],
          "text": "provider: null,"
        }
      ]
    },
    {
      "path": "backend/routes/jwt_auth.js",
      "occurrences": [
        {
          "line": 44,
          "keywords": [
            "provider"
          ],
          "text": "router.get('/admin-only', authenticateJWT, requireRole(['SUPER_ADMIN', 'PROVIDER']), (req, res) => {"
        }
      ]
    },
    {
      "path": "backend/routes/messaging.js",
      "occurrences": [
        {
          "line": 81,
          "keywords": [
            "booking"
          ],
          "text": "const { bookingId, listingTitle, listingType, participantIds, participantNames } = req.body;"
        }
      ]
    },
    {
      "path": "backend/routes/notification_hooks.js",
      "occurrences": [
        {
          "line": 5,
          "keywords": [
            "notification"
          ],
          "text": "const NotificationHooksService = require('../services/notificationHooks');"
        },
        {
          "line": 7,
          "keywords": [
            "notification"
          ],
          "text": "const notificationHooks = new NotificationHooksService();"
        },
        {
          "line": 9,
          "keywords": [
            "notification"
          ],
          "text": "// Get notification configuration"
        },
        {
          "line": 16,
          "keywords": [
            "notification"
          ],
          "text": "enabled: process.env.NOTIFICATION_EMAIL_ENABLED === 'true',"
        },
        {
          "line": 17,
          "keywords": [
            "notification"
          ],
          "text": "recipients: (process.env.NOTIFICATION_EMAIL_RECIPIENTS || '').split(',').filter(Boolean)"
        },
        {
          "line": 20,
          "keywords": [
            "notification"
          ],
          "text": "enabled: process.env.NOTIFICATION_WEBHOOKS_ENABLED === 'true',"
        },
        {
          "line": 21,
          "keywords": [
            "notification"
          ],
          "text": "urls: (process.env.NOTIFICATION_WEBHOOK_URLS || '').split(',').filter(Boolean)"
        },
        {
          "line": 24,
          "keywords": [
            "notification"
          ],
          "text": "enabled: (process.env.NOTIFICATION_EVENTS || 'proposal_created,applied,smoke_failed,rollback_done').split(','),"
        },
        {
          "line": 25,
          "keywords": [
            "notification"
          ],
          "text": "rateLimit: parseInt(process.env.NOTIFICATION_RATE_LIMIT || '100')"
        },
        {
          "line": 31,
          "keywords": [
            "notification"
          ],
          "text": "console.error('‚ùå [NOTIFICATIONS] Config error:', error);"
        },
        {
          "line": 39,
          "keywords": [
            "notification"
          ],
          "text": "// Test notification sending"
        },
        {
          "line": 56,
          "keywords": [
            "notification"
          ],
          "text": "const result = await notificationHooks.notify(eventType, testPayload);"
        },
        {
          "line": 66,
          "keywords": [
            "notification"
          ],
          "text": "console.error('‚ùå [NOTIFICATIONS] Test error:', error);"
        },
        {
          "line": 78,
          "keywords": [
            "notification"
          ],
          "text": "const deadLetterQueue = notificationHooks.getDeadLetterQueue();"
        },
        {
          "line": 87,
          "keywords": [
            "notification"
          ],
          "text": "console.error('‚ùå [NOTIFICATIONS] Dead letter error:', error);"
        },
        {
          "line": 98,
          "keywords": [
            "notification"
          ],
          "text": "await notificationHooks.processDeadLetterQueue();"
        },
        {
          "line": 106,
          "keywords": [
            "notification"
          ],
          "text": "console.error('‚ùå [NOTIFICATIONS] Dead letter processing error:', error);"
        },
        {
          "line": 126,
          "keywords": [
            "notification"
          ],
          "text": "const isValid = NotificationHooksService.verifyHMACSignature(payload, signature, secret);"
        },
        {
          "line": 135,
          "keywords": [
            "notification"
          ],
          "text": "console.error('‚ùå [NOTIFICATIONS] Verification error:', error);"
        }
      ]
    },
    {
      "path": "backend/routes/notifications.js",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "notification"
          ],
          "text": "// Mock notifications storage"
        },
        {
          "line": 5,
          "keywords": [
            "notification"
          ],
          "text": "let notifications = [];"
        },
        {
          "line": 7,
          "keywords": [
            "notification"
          ],
          "text": "// Notification types"
        },
        {
          "line": 8,
          "keywords": [
            "notification"
          ],
          "text": "const NOTIFICATION_TYPES = {"
        },
        {
          "line": 10,
          "keywords": [
            "booking"
          ],
          "text": "BOOKING: 'booking',"
        },
        {
          "line": 16,
          "keywords": [
            "notification"
          ],
          "text": "// Get user notifications"
        },
        {
          "line": 22,
          "keywords": [
            "notification"
          ],
          "text": "const userNotifications = notifications"
        },
        {
          "line": 23,
          "keywords": [
            "notification"
          ],
          "text": ".filter(notification => notification.userId === userId)"
        },
        {
          "line": 27,
          "keywords": [
            "notification"
          ],
          "text": "const unreadCount = notifications.filter("
        },
        {
          "line": 28,
          "keywords": [
            "notification"
          ],
          "text": "notification => notification.userId === userId && !notification.isRead"
        },
        {
          "line": 33,
          "keywords": [
            "notification"
          ],
          "text": "notifications: userNotifications,"
        },
        {
          "line": 35,
          "keywords": [
            "notification"
          ],
          "text": "total: notifications.filter(n => n.userId === userId).length"
        },
        {
          "line": 38,
          "keywords": [
            "notification"
          ],
          "text": "console.error('Error fetching notifications:', error);"
        },
        {
          "line": 46,
          "keywords": [
            "notification"
          ],
          "text": "// Create a new notification"
        },
        {
          "line": 65,
          "keywords": [
            "notification"
          ],
          "text": "const notification = {"
        },
        {
          "line": 78,
          "keywords": [
            "notification"
          ],
          "text": "notifications.push(notification);"
        },
        {
          "line": 82,
          "keywords": [
            "notification"
          ],
          "text": "notification"
        },
        {
          "line": 85,
          "keywords": [
            "notification"
          ],
          "text": "console.error('Error creating notification:', error);"
        },
        {
          "line": 93,
          "keywords": [
            "notification"
          ],
          "text": "// Mark notification as read"
        },
        {
          "line": 94,
          "keywords": [
            "notification"
          ],
          "text": "router.patch('/:notificationId/read', (req, res) => {"
        },
        {
          "line": 96,
          "keywords": [
            "notification"
          ],
          "text": "const { notificationId } = req.params;"
        },
        {
          "line": 98,
          "keywords": [
            "notification"
          ],
          "text": "const notificationIndex = notifications.findIndex("
        },
        {
          "line": 99,
          "keywords": [
            "notification"
          ],
          "text": "notification => notification.id === notificationId"
        },
        {
          "line": 102,
          "keywords": [
            "notification"
          ],
          "text": "if (notificationIndex === -1) {"
        },
        {
          "line": 109,
          "keywords": [
            "notification"
          ],
          "text": "notifications[notificationIndex].isRead = true;"
        },
        {
          "line": 113,
          "keywords": [
            "notification"
          ],
          "text": "notification: notifications[notificationIndex]"
        },
        {
          "line": 116,
          "keywords": [
            "notification"
          ],
          "text": "console.error('Error marking notification as read:', error);"
        },
        {
          "line": 124,
          "keywords": [
            "notification"
          ],
          "text": "// Mark all notifications as read for user"
        },
        {
          "line": 129,
          "keywords": [
            "notification"
          ],
          "text": "notifications = notifications.map(notification => {"
        },
        {
          "line": 130,
          "keywords": [
            "notification"
          ],
          "text": "if (notification.userId === userId && !notification.isRead) {"
        },
        {
          "line": 131,
          "keywords": [
            "notification"
          ],
          "text": "return { ...notification, isRead: true };"
        },
        {
          "line": 133,
          "keywords": [
            "notification"
          ],
          "text": "return notification;"
        },
        {
          "line": 141,
          "keywords": [
            "notification"
          ],
          "text": "console.error('Error marking all notifications as read:', error);"
        },
        {
          "line": 149,
          "keywords": [
            "notification"
          ],
          "text": "// Create check-in reminder notifications (called by scheduled job)"
        },
        {
          "line": 152,
          "keywords": [
            "booking"
          ],
          "text": "// This would typically query the database for bookings with check-in today"
        },
        {
          "line": 158,
          "keywords": [
            "booking"
          ],
          "text": "// Mock booking data - in real implementation, query from database"
        },
        {
          "line": 159,
          "keywords": [
            "booking"
          ],
          "text": "const todayBookings = ["
        },
        {
          "line": 162,
          "keywords": [
            "provider"
          ],
          "text": "userId: 'provider123',"
        },
        {
          "line": 169,
          "keywords": [
            "notification"
          ],
          "text": "const createdNotifications = [];"
        },
        {
          "line": 171,
          "keywords": [
            "booking"
          ],
          "text": "todayBookings.forEach(booking => {"
        },
        {
          "line": 172,
          "keywords": [
            "notification"
          ],
          "text": "const notification = {"
        },
        {
          "line": 173,
          "keywords": [
            "booking"
          ],
          "text": "id: `checkin_${booking.id}_${Date.now()}`,"
        },
        {
          "line": 174,
          "keywords": [
            "booking"
          ],
          "text": "userId: booking.userId,"
        },
        {
          "line": 175,
          "keywords": [
            "notification"
          ],
          "text": "type: NOTIFICATION_TYPES.REMINDER,"
        },
        {
          "line": 177,
          "keywords": [
            "booking"
          ],
          "text": "message: `·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê #${booking.id} - ${booking.listingTitle} - ·Éõ·Éò·É°·Éê·Éö·Éõ·Éî·Éë·Éê: ${booking.checkInTime}`,"
        },
        {
          "line": 178,
          "keywords": [
            "booking"
          ],
          "text": "actionUrl: `/admin/bookings/${booking.id}`,"
        },
        {
          "line": 180,
          "keywords": [
            "booking"
          ],
          "text": "bookingId: booking.id,"
        },
        {
          "line": 181,
          "keywords": [
            "booking"
          ],
          "text": "guestName: booking.guestName,"
        },
        {
          "line": 182,
          "keywords": [
            "booking"
          ],
          "text": "checkInTime: booking.checkInTime"
        },
        {
          "line": 189,
          "keywords": [
            "notification"
          ],
          "text": "notifications.push(notification);"
        },
        {
          "line": 190,
          "keywords": [
            "notification"
          ],
          "text": "createdNotifications.push(notification);"
        },
        {
          "line": 195,
          "keywords": [
            "notification"
          ],
          "text": "message: `${createdNotifications.length} ·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éê ·É®·Éî·Éò·É•·Éõ·Éú·Éê`,"
        },
        {
          "line": 196,
          "keywords": [
            "notification"
          ],
          "text": "notifications: createdNotifications"
        },
        {
          "line": 207,
          "keywords": [
            "booking",
            "notification"
          ],
          "text": "// Create booking notification"
        },
        {
          "line": 208,
          "keywords": [
            "booking"
          ],
          "text": "router.post('/booking-created', (req, res) => {"
        },
        {
          "line": 211,
          "keywords": [
            "provider"
          ],
          "text": "providerId,"
        },
        {
          "line": 212,
          "keywords": [
            "booking"
          ],
          "text": "bookingId,"
        },
        {
          "line": 220,
          "keywords": [
            "notification"
          ],
          "text": "const notification = {"
        },
        {
          "line": 221,
          "keywords": [
            "booking"
          ],
          "text": "id: `booking_${bookingId}_${Date.now()}`,"
        },
        {
          "line": 222,
          "keywords": [
            "provider"
          ],
          "text": "userId: providerId,"
        },
        {
          "line": 223,
          "keywords": [
            "booking",
            "notification"
          ],
          "text": "type: NOTIFICATION_TYPES.BOOKING,"
        },
        {
          "line": 226,
          "keywords": [
            "booking"
          ],
          "text": "actionUrl: `/admin/bookings/${bookingId}`,"
        },
        {
          "line": 228,
          "keywords": [
            "booking"
          ],
          "text": "bookingId,"
        },
        {
          "line": 240,
          "keywords": [
            "notification"
          ],
          "text": "notifications.push(notification);"
        },
        {
          "line": 244,
          "keywords": [
            "notification"
          ],
          "text": "notification"
        },
        {
          "line": 247,
          "keywords": [
            "booking",
            "notification"
          ],
          "text": "console.error('Error creating booking notification:', error);"
        }
      ]
    },
    {
      "path": "backend/routes/provider_auth.js",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "provider"
          ],
          "text": "// Provider-specific authentication middleware"
        },
        {
          "line": 10,
          "keywords": [
            "provider"
          ],
          "text": "const requireProviderRole = (req, res, next) => {"
        },
        {
          "line": 11,
          "keywords": [
            "provider"
          ],
          "text": "if (!req.session?.user || req.session.user.role !== 'PROVIDER') {"
        },
        {
          "line": 14,
          "keywords": [
            "provider"
          ],
          "text": "error: 'Provider access required',"
        },
        {
          "line": 15,
          "keywords": [
            "provider"
          ],
          "text": "code: 'PROVIDER_ONLY'"
        },
        {
          "line": 21,
          "keywords": [
            "provider"
          ],
          "text": "// Provider login endpoint"
        },
        {
          "line": 33,
          "keywords": [
            "provider"
          ],
          "text": "console.log('üîê [Provider Auth] Login attempt:', { email });"
        },
        {
          "line": 38,
          "keywords": [
            "provider"
          ],
          "text": "// Verify this user has PROVIDER role"
        },
        {
          "line": 40,
          "keywords": [
            "provider"
          ],
          "text": "const userRole = 'PROVIDER'; // Mock - get from Firestore"
        },
        {
          "line": 42,
          "keywords": [
            "provider"
          ],
          "text": "if (userRole !== 'PROVIDER') {"
        },
        {
          "line": 45,
          "keywords": [
            "provider"
          ],
          "text": "error: 'Not authorized as provider'"
        },
        {
          "line": 53,
          "keywords": [
            "provider"
          ],
          "text": "role: 'PROVIDER',"
        },
        {
          "line": 54,
          "keywords": [
            "provider"
          ],
          "text": "displayName: userCredential.user.displayName || 'Provider User',"
        },
        {
          "line": 58,
          "keywords": [
            "provider"
          ],
          "text": "req.session.userRole = 'PROVIDER';"
        },
        {
          "line": 60,
          "keywords": [
            "provider"
          ],
          "text": "// SOL-425: Audit log provider login"
        },
        {
          "line": 63,
          "keywords": [
            "provider"
          ],
          "text": "'PROVIDER',"
        },
        {
          "line": 69,
          "keywords": [
            "provider"
          ],
          "text": "console.log('‚úÖ [Provider Auth] Login successful:', { email, userId: userCredential.user.uid });"
        },
        {
          "line": 77,
          "keywords": [
            "provider"
          ],
          "text": "// SOL-425: Audit log failed provider login"
        },
        {
          "line": 85,
          "keywords": [
            "provider"
          ],
          "text": "console.error('‚ùå [Provider Auth] Login error:', error);"
        },
        {
          "line": 93,
          "keywords": [
            "provider"
          ],
          "text": "// Provider logout"
        },
        {
          "line": 94,
          "keywords": [
            "provider"
          ],
          "text": "router.post('/logout', requireProviderRole, (req, res) => {"
        },
        {
          "line": 97,
          "keywords": [
            "provider"
          ],
          "text": "console.error('‚ùå [Provider Auth] Logout error:', err);"
        },
        {
          "line": 105,
          "keywords": [
            "provider"
          ],
          "text": "console.log('‚úÖ [Provider Auth] Logout successful');"
        },
        {
          "line": 114,
          "keywords": [
            "provider"
          ],
          "text": "// Provider session check"
        },
        {
          "line": 115,
          "keywords": [
            "provider"
          ],
          "text": "router.get('/me', requireProviderRole, (req, res) => {"
        },
        {
          "line": 122,
          "keywords": [
            "provider"
          ],
          "text": "deviceTrust: false // Providers don't get device trust by default"
        },
        {
          "line": 126,
          "keywords": [
            "provider"
          ],
          "text": "// Provider dashboard access (example protected route)"
        },
        {
          "line": 127,
          "keywords": [
            "provider"
          ],
          "text": "router.get('/dashboard', requireProviderRole, (req, res) => {"
        },
        {
          "line": 130,
          "keywords": [
            "provider"
          ],
          "text": "message: 'Provider dashboard access granted',"
        }
      ]
    },
    {
      "path": "backend/routes/user_activity.js",
      "occurrences": [
        {
          "line": 44,
          "keywords": [
            "booking"
          ],
          "text": "if (['authentication_attempt', 'webauthn_flow', 'booking_activity'].includes(action)) {"
        }
      ]
    },
    {
      "path": "backend/services/codeAnalyzer.js",
      "occurrences": [
        {
          "line": 89,
          "keywords": [
            "booking"
          ],
          "text": "// Core booking modules"
        },
        {
          "line": 90,
          "keywords": [
            "booking",
            "hotel",
            "vehicle"
          ],
          "text": "'BookingForm.tsx', 'BookingModal.tsx', 'HotelBookingForm.tsx', 'VehicleBookingForm.tsx',"
        },
        {
          "line": 92,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "'AdminCottages.tsx', 'AdminHotels.tsx', 'AdminVehicles.tsx', 'AdminUsers.tsx',"
        },
        {
          "line": 96,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "'CottagePage.tsx', 'HotelPage.tsx', 'VehiclePage.tsx',"
        },
        {
          "line": 98,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "'CottagesList.tsx', 'HotelsList.tsx', 'VehiclesList.tsx',"
        },
        {
          "line": 100,
          "keywords": [
            "booking"
          ],
          "text": "'bookingService.ts', 'customerService.ts', 'priceCodeService.ts',"
        },
        {
          "line": 164,
          "keywords": [
            "booking"
          ],
          "text": "if (fileName.includes('Booking')) return 'Booking System';"
        },
        {
          "line": 392,
          "keywords": [
            "cottage"
          ],
          "text": "'·Éô·Éù·É¢·Éî·ÉØ': ['cottage'],"
        },
        {
          "line": 393,
          "keywords": [
            "hotel"
          ],
          "text": "'·É°·Éê·É°·É¢·É£·Éõ·É†·Éù': ['hotel'],"
        },
        {
          "line": 394,
          "keywords": [
            "vehicle"
          ],
          "text": "'·Éê·Éï·É¢·Éù·Éõ·Éù·Éë·Éò·Éö': ['vehicle', 'car'],"
        },
        {
          "line": 395,
          "keywords": [
            "booking"
          ],
          "text": "'·ÉØ·Éê·Éï·É®·Éê·Éú': ['booking', 'reservation'],"
        },
        {
          "line": 396,
          "keywords": [
            "calendar"
          ],
          "text": "'·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†': ['calendar'],"
        },
        {
          "line": 398,
          "keywords": [
            "booking"
          ],
          "text": "'·É®·Éî·Éô·Éï·Éî·Éó': ['order', 'booking'],"
        },
        {
          "line": 434,
          "keywords": [
            "vehicle"
          ],
          "text": "'pricing.ts', 'vehiclePricing.ts', 'seasonalPricing.ts',"
        },
        {
          "line": 435,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "'BookingForm.tsx', 'BookingModal.tsx', 'CottageForm.tsx',"
        },
        {
          "line": 436,
          "keywords": [
            "cottage"
          ],
          "text": "'AdminCottages.tsx', 'MainPage.tsx', 'ai_controller.js'"
        },
        {
          "line": 542,
          "keywords": [
            "booking"
          ],
          "text": "if (filename.includes('booking') || filename.includes('Booking')) score += 8;"
        },
        {
          "line": 543,
          "keywords": [
            "cottage"
          ],
          "text": "if (filename.includes('cottage') || filename.includes('Cottage')) score += 6;"
        }
      ]
    },
    {
      "path": "backend/services/fileService.js",
      "occurrences": [
        {
          "line": 283,
          "keywords": [
            "booking"
          ],
          "text": "'·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê': ['booking', 'reservation'],"
        },
        {
          "line": 284,
          "keywords": [
            "cottage"
          ],
          "text": "'·Éô·Éù·É¢·Éî·ÉØ·Éò': ['cottage'],"
        },
        {
          "line": 285,
          "keywords": [
            "hotel"
          ],
          "text": "'·É°·Éê·É°·É¢·É£·Éõ·É†·Éù': ['hotel'],"
        },
        {
          "line": 288,
          "keywords": [
            "vehicle"
          ],
          "text": "'·Éê·Éï·É¢·Éù·Éõ·Éù·Éë·Éò·Éö·Éò': ['vehicle', 'car'],"
        },
        {
          "line": 289,
          "keywords": [
            "calendar"
          ],
          "text": "'·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†·Éò': ['calendar'],"
        },
        {
          "line": 305,
          "keywords": [
            "vehicle"
          ],
          "text": "expandedTerms.push('pricing', 'vehiclePricing', 'seasonalPricing');"
        },
        {
          "line": 307,
          "keywords": [
            "booking"
          ],
          "text": "if (term.includes('·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê') || term.includes('booking')) {"
        },
        {
          "line": 308,
          "keywords": [
            "booking"
          ],
          "text": "expandedTerms.push('BookingForm', 'BookingModal', 'bookingService');"
        }
      ]
    },
    {
      "path": "backend/services/groq_service.js",
      "occurrences": [
        {
          "line": 246,
          "keywords": [
            "booking"
          ],
          "text": "const SYSTEM_PROMPT = `You are an AI developer assistant for the Bakhmaro booking platform."
        },
        {
          "line": 248,
          "keywords": [
            "booking",
            "cottage",
            "hotel"
          ],
          "text": "When asked for general information about the site, read the relevant code and describe the structure and features (e.g. cottages, hotels, booking system)."
        }
      ]
    },
    {
      "path": "backend/services/notificationHooks.js",
      "occurrences": [
        {
          "line": 5,
          "keywords": [
            "notification"
          ],
          "text": "class NotificationHooksService {"
        },
        {
          "line": 9,
          "keywords": [
            "notification"
          ],
          "text": "enabled: process.env.NOTIFICATION_EMAIL_ENABLED === 'true',"
        },
        {
          "line": 19,
          "keywords": [
            "notification"
          ],
          "text": "recipients: (process.env.NOTIFICATION_EMAIL_RECIPIENTS || '').split(',').filter(Boolean)"
        },
        {
          "line": 22,
          "keywords": [
            "notification"
          ],
          "text": "enabled: process.env.NOTIFICATION_WEBHOOKS_ENABLED === 'true',"
        },
        {
          "line": 23,
          "keywords": [
            "notification"
          ],
          "text": "urls: (process.env.NOTIFICATION_WEBHOOK_URLS || '').split(',').filter(Boolean),"
        },
        {
          "line": 24,
          "keywords": [
            "notification"
          ],
          "text": "secret: process.env.NOTIFICATION_WEBHOOK_SECRET || 'dev-secret-key',"
        },
        {
          "line": 25,
          "keywords": [
            "notification"
          ],
          "text": "timeout: parseInt(process.env.NOTIFICATION_WEBHOOK_TIMEOUT || '10000')"
        },
        {
          "line": 28,
          "keywords": [
            "notification"
          ],
          "text": "enabled: (process.env.NOTIFICATION_EVENTS || 'proposal_created,applied,smoke_failed,rollback_done').split(','),"
        },
        {
          "line": 30,
          "keywords": [
            "notification"
          ],
          "text": "maxPerHour: parseInt(process.env.NOTIFICATION_RATE_LIMIT || '100'),"
        },
        {
          "line": 35,
          "keywords": [
            "notification"
          ],
          "text": "maxAttempts: parseInt(process.env.NOTIFICATION_RETRY_ATTEMPTS || '3'),"
        },
        {
          "line": 36,
          "keywords": [
            "notification"
          ],
          "text": "backoffMs: parseInt(process.env.NOTIFICATION_RETRY_BACKOFF || '5000')"
        },
        {
          "line": 42,
          "keywords": [
            "notification"
          ],
          "text": "this.sentNotifications = new Set(); // Duplicate prevention"
        },
        {
          "line": 49,
          "keywords": [
            "notification"
          ],
          "text": "console.log('üîî [NOTIFICATIONS] Service initialized:', {"
        },
        {
          "line": 56,
          "keywords": [
            "notification"
          ],
          "text": "// Main notification dispatcher"
        },
        {
          "line": 59,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`üîî [NOTIFICATIONS] Event: ${eventType}`, { proposalId: payload.proposalId });"
        },
        {
          "line": 63,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`üîï [NOTIFICATIONS] Event ${eventType} disabled in config`);"
        },
        {
          "line": 69,
          "keywords": [
            "notification"
          ],
          "text": "console.warn(`‚ö†Ô∏è [NOTIFICATIONS] Rate limit exceeded for ${eventType}`);"
        },
        {
          "line": 74,
          "keywords": [
            "notification"
          ],
          "text": "const notificationKey = `${eventType}-${payload.proposalId}-${Date.now().toString().slice(0, -4)}`;"
        },
        {
          "line": 75,
          "keywords": [
            "notification"
          ],
          "text": "if (this.sentNotifications.has(notificationKey)) {"
        },
        {
          "line": 76,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`üîï [NOTIFICATIONS] Duplicate notification prevented: ${notificationKey}`);"
        },
        {
          "line": 80,
          "keywords": [
            "notification"
          ],
          "text": "// Create standardized notification payload"
        },
        {
          "line": 81,
          "keywords": [
            "notification"
          ],
          "text": "const notification = this.createNotificationPayload(eventType, payload);"
        },
        {
          "line": 83,
          "keywords": [
            "notification"
          ],
          "text": "// Send notifications"
        },
        {
          "line": 85,
          "keywords": [
            "notification"
          ],
          "text": "this.sendEmailNotification(notification),"
        },
        {
          "line": 86,
          "keywords": [
            "notification"
          ],
          "text": "this.sendWebhookNotifications(notification)"
        },
        {
          "line": 90,
          "keywords": [
            "notification"
          ],
          "text": "this.sentNotifications.add(notificationKey);"
        },
        {
          "line": 94,
          "keywords": [
            "notification"
          ],
          "text": "this.sentNotifications.delete(notificationKey);"
        },
        {
          "line": 100,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`‚úÖ [NOTIFICATIONS] Sent ${eventType}:`, {"
        },
        {
          "line": 114,
          "keywords": [
            "notification"
          ],
          "text": "console.error(`‚ùå [NOTIFICATIONS] Error sending ${eventType}:`, error);"
        },
        {
          "line": 119,
          "keywords": [
            "notification"
          ],
          "text": "// Create standardized Georgian notification payload"
        },
        {
          "line": 120,
          "keywords": [
            "notification"
          ],
          "text": "createNotificationPayload(eventType, payload) {"
        },
        {
          "line": 171,
          "keywords": [
            "notification"
          ],
          "text": "actions: this.getNotificationActions(eventType, payload.proposalId),"
        },
        {
          "line": 181,
          "keywords": [
            "notification"
          ],
          "text": "getNotificationActions(eventType, proposalId) {"
        },
        {
          "line": 236,
          "keywords": [
            "notification"
          ],
          "text": "// Send email notification"
        },
        {
          "line": 237,
          "keywords": [
            "notification"
          ],
          "text": "async sendEmailNotification(notification) {"
        },
        {
          "line": 242,
          "keywords": [
            "notification"
          ],
          "text": "const html = this.generateEmailHTML(notification);"
        },
        {
          "line": 247,
          "keywords": [
            "notification"
          ],
          "text": "subject: `${notification.title} - ${notification.proposal.title}`,"
        },
        {
          "line": 253,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`üìß [EMAIL] Sent notification for ${notification.event}`);"
        },
        {
          "line": 256,
          "keywords": [
            "notification"
          ],
          "text": "console.error(`‚ùå [EMAIL] Failed to send ${notification.event}:`, error);"
        },
        {
          "line": 257,
          "keywords": [
            "notification"
          ],
          "text": "this.addToDeadLetter('email', notification, error);"
        },
        {
          "line": 263,
          "keywords": [
            "notification"
          ],
          "text": "generateEmailHTML(notification) {"
        },
        {
          "line": 264,
          "keywords": [
            "notification"
          ],
          "text": "const { proposal, actions } = notification;"
        },
        {
          "line": 269,
          "keywords": [
            "notification"
          ],
          "text": "<h1 style=\"margin: 0; font-size: 24px;\">${notification.title}</h1>"
        },
        {
          "line": 270,
          "keywords": [
            "notification"
          ],
          "text": "<p style=\"margin: 10px 0 0; opacity: 0.8;\">${new Date(notification.timestamp).toLocaleString('ka-GE')}</p>"
        },
        {
          "line": 331,
          "keywords": [
            "notification"
          ],
          "text": "Correlation ID: ${notification.correlationId} |"
        },
        {
          "line": 332,
          "keywords": [
            "notification"
          ],
          "text": "AutoImprove System v${notification.metadata.version}"
        },
        {
          "line": 339,
          "keywords": [
            "notification"
          ],
          "text": "// Send webhook notifications with HMAC signature"
        },
        {
          "line": 340,
          "keywords": [
            "notification"
          ],
          "text": "async sendWebhookNotifications(notification) {"
        },
        {
          "line": 345,
          "keywords": [
            "notification"
          ],
          "text": "const payload = JSON.stringify(notification);"
        },
        {
          "line": 367,
          "keywords": [
            "notification"
          ],
          "text": "console.error('‚ùå [WEBHOOK] Failed to send notifications:', error);"
        },
        {
          "line": 455,
          "keywords": [
            "notification"
          ],
          "text": "// Add to dead letter queue for failed notifications"
        },
        {
          "line": 456,
          "keywords": [
            "notification"
          ],
          "text": "addToDeadLetter(type, notification, error) {"
        },
        {
          "line": 459,
          "keywords": [
            "notification"
          ],
          "text": "notification,"
        },
        {
          "line": 465,
          "keywords": [
            "notification"
          ],
          "text": "// Keep only last 100 failed notifications"
        },
        {
          "line": 470,
          "keywords": [
            "notification"
          ],
          "text": "console.log(`üíÄ [DEAD-LETTER] Added ${type} notification to queue`);"
        },
        {
          "line": 485,
          "keywords": [
            "notification"
          ],
          "text": "await this.sendEmailNotification(item.notification);"
        },
        {
          "line": 487,
          "keywords": [
            "notification"
          ],
          "text": "await this.sendWebhookNotifications(item.notification);"
        },
        {
          "line": 503,
          "keywords": [
            "notification"
          ],
          "text": "module.exports = NotificationHooksService;"
        }
      ]
    },
    {
      "path": "backend/services/pricing_explainer.js",
      "occurrences": [
        {
          "line": 10,
          "keywords": [
            "cottage"
          ],
          "text": "const cottagePricing = await fileService.getFileContext('src/utils/pricing.ts');"
        },
        {
          "line": 11,
          "keywords": [
            "vehicle"
          ],
          "text": "const vehiclePricing = await fileService.getFileContext('src/utils/vehiclePricing.ts');"
        },
        {
          "line": 17,
          "keywords": [
            "cottage"
          ],
          "text": "${cottagePricing.content || cottagePricing}"
        },
        {
          "line": 19,
          "keywords": [
            "vehicle"
          ],
          "text": "==== VEHICLE_PRICING.TS ===="
        },
        {
          "line": 20,
          "keywords": [
            "vehicle"
          ],
          "text": "${vehiclePricing.content || vehiclePricing}"
        }
      ]
    },
    {
      "path": "backend/services/site_summary.js",
      "occurrences": [
        {
          "line": 2,
          "keywords": [
            "booking"
          ],
          "text": "* Bakhmaro Booking Platform - Static Site Information"
        },
        {
          "line": 12,
          "keywords": [
            "cottage"
          ],
          "text": "cottages: {"
        },
        {
          "line": 17,
          "keywords": [
            "hotel"
          ],
          "text": "hotels: {"
        },
        {
          "line": 22,
          "keywords": [
            "vehicle"
          ],
          "text": "vehicles: {"
        },
        {
          "line": 27,
          "keywords": [
            "horse"
          ],
          "text": "horses: {"
        },
        {
          "line": 32,
          "keywords": [
            "snowmobile"
          ],
          "text": "snowmobiles: {"
        },
        {
          "line": 41,
          "keywords": [
            "booking"
          ],
          "text": "booking: {"
        },
        {
          "line": 66,
          "keywords": [
            "provider"
          ],
          "text": "\"Provider - ·Éõ·Éù·Éõ·É°·Éê·ÉÆ·É£·É†·Éî·Éë·Éò·É° ·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éò\","
        },
        {
          "line": 76,
          "keywords": [
            "booking"
          ],
          "text": "bookings: \"·ÉØ·Éê·Éï·É®·Éú·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê ·Éì·Éê ·Éõ·Éù·Éú·Éò·É¢·Éù·É†·Éò·Éú·Éí·Éò\","
        },
        {
          "line": 78,
          "keywords": [
            "provider"
          ],
          "text": "providers: \"·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê ·Éì·Éê ·Éô·Éù·Éõ·Éò·É°·Éò·Éî·Éë·Éò\","
        },
        {
          "line": 80,
          "keywords": [
            "notification"
          ],
          "text": "notifications: \"·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê\","
        },
        {
          "line": 139,
          "keywords": [
            "booking",
            "calendar"
          ],
          "text": "- BookingModal.tsx, Calendar.tsx, PricingManager.tsx"
        },
        {
          "line": 144,
          "keywords": [
            "booking"
          ],
          "text": "- bookingService.ts, userService.ts, priceCodeService.ts"
        },
        {
          "line": 167,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ BookingModal.tsx - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·Éõ·Éó·Éê·Éï·Éê·É†·Éò ·É§·Éê·Éú·ÉØ·Éê·É†·Éê"
        },
        {
          "line": 168,
          "keywords": [
            "calendar"
          ],
          "text": "‚Ä¢ Calendar.tsx - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éê·É†·É©·Éî·Éï·Éò·É° ·Éô·Éê·Éö·Éî·Éú·Éì·Éê·É†·Éò"
        },
        {
          "line": 173,
          "keywords": [
            "cottage"
          ],
          "text": "‚Ä¢ AdminCottages.tsx - ·Éô·Éù·É¢·Éî·ÉØ·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê"
        },
        {
          "line": 178,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ bookingService.ts - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·Éß·Éï·Éî·Éö·Éê ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 181,
          "keywords": [
            "notification"
          ],
          "text": "‚Ä¢ notificationService.ts - ·É®·Éî·É¢·Éß·Éù·Éë·Éò·Éú·Éî·Éë·Éî·Éë·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éê"
        },
        {
          "line": 200,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ src/services/bookingService.ts - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·É°·É†·É£·Éö·Éò ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 203,
          "keywords": [
            "booking"
          ],
          "text": "‚Ä¢ src/components/BookingModal.tsx - ·ÉØ·Éê·Éï·É®·Éú·Éò·É° UI"
        },
        {
          "line": 207,
          "keywords": [
            "calendar"
          ],
          "text": "‚Ä¢ src/components/Calendar.tsx - ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·Éö·Éù·Éí·Éò·Éô·Éê"
        },
        {
          "line": 218,
          "keywords": [
            "booking"
          ],
          "text": "booking_process: () => {"
        },
        {
          "line": 244,
          "keywords": [
            "provider"
          ],
          "text": "‚Ä¢ Customer, Provider, Admin ·É†·Éù·Éö·Éî·Éë·Éò"
        },
        {
          "line": 277,
          "keywords": [
            "booking"
          ],
          "text": "// Booking related components"
        },
        {
          "line": 278,
          "keywords": [
            "booking"
          ],
          "text": "'BookingModal': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éõ·Éù·Éì·Éê·Éö·É£·É†·Éò ·É§·Éê·Éú·ÉØ·Éê·É†·Éê - ·Éú·Éù·Éõ·É†·Éî·Éë·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É°·Éó·Éï·Éò·É°, ·Éê·É°·Éî·Éï·Éî ·É§·Éê·É°·Éò·É° ·Éí·Éê·Éõ·Éù·Éó·Éï·Éö·Éê ·Éì·Éê ·Éï·Éê·Éö·Éò·Éì·Éê·É™·Éò·Éê',"
        },
        {
          "line": 279,
          "keywords": [
            "booking"
          ],
          "text": "'BookingForm': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É§·Éù·É†·Éõ·Éê - ·Éõ·Éù·Éú·Éê·É™·Éî·Éõ·Éî·Éë·Éò·É° ·É®·Éî·Éß·Éï·Éê·Éú·Éò·É°·Éó·Éï·Éò·É°, ·Éó·Éê·É†·Éò·É¶·Éî·Éë·Éò·É° ·É®·Éî·É†·É©·Éî·Éï·Éê ·Éì·Éê ·É¢·Éî·É†·Éõ·Éò·Éú·Éî·Éë·Éò·É° ·Éì·Éê·Éì·Éê·É°·É¢·É£·É†·Éî·Éë·Éê',"
        },
        {
          "line": 280,
          "keywords": [
            "booking"
          ],
          "text": "'BookingAuth': '·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éê·Éï·É¢·Éù·É†·Éò·Éñ·Éê·É™·Éò·Éê - ·Éõ·Éù·Éõ·ÉÆ·Éõ·Éê·É†·Éî·Éë·Éö·Éò·É° ·É®·Éî·É°·Éï·Éö·Éê/·É†·Éî·Éí·Éò·É°·É¢·É†·Éê·É™·Éò·Éê ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éû·É†·Éù·É™·Éî·É°·É®·Éò',"
        },
        {
          "line": 281,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "'VehicleBookingForm': '·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É§·Éù·É†·Éõ·Éê - ·Éõ·Éê·Éú·É•·Éê·Éú·Éî·Éë·Éò·É°, ·Éê·É¢·Éï·Éî·Éë·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê',"
        },
        {
          "line": 282,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "'HotelBookingForm': '·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·É§·Éù·É†·Éõ·Éê - ·Éù·Éó·Éê·ÉÆ·Éî·Éë·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éê ·É°·Éê·É°·É¢·É£·Éõ·É†·Éù·Éî·Éë·É®·Éò',"
        },
        {
          "line": 285,
          "keywords": [
            "booking"
          ],
          "text": "'AdminBookings': '·Éê·Éì·Éõ·Éò·Éú·Éò·É°·É¢·É†·Éê·É¢·Éù·É†·Éò·É° ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê - ·Éß·Éï·Éî·Éö·Éê ·Éë·É†·Éù·Éú·Éò·É†·Éî·Éë·Éò·É° ·Éú·Éê·ÉÆ·Éï·Éê/·É†·Éî·Éì·Éê·É•·É¢·Éò·É†·Éî·Éë·Éê',"
        },
        {
          "line": 287,
          "keywords": [
            "commission"
          ],
          "text": "'AdminCommission': '·Éô·Éù·Éõ·Éò·É°·Éò·Éò·É° ·Éõ·Éê·É†·Éó·Éï·Éê - ·Éû·É†·Éù·Éï·Éê·Éò·Éì·Éî·É†·Éî·Éë·Éò·É° ·Éô·Éù·Éõ·Éò·É°·Éò·Éò·É° ·Éí·Éê·Éõ·Éù·Éó·Éï·Éö·Éê ·Éì·Éê ·Éí·Éê·Éì·Éê·ÉÆ·Éì·Éê',"
        },
        {
          "line": 292,
          "keywords": [
            "booking"
          ],
          "text": "booking: ["
        },
        {
          "line": 293,
          "keywords": [
            "booking"
          ],
          "text": "'BookingService.ts', 'bookingService.ts', 'BookingForm.tsx',"
        },
        {
          "line": 294,
          "keywords": [
            "booking"
          ],
          "text": "'BookingModal.tsx', 'BookingAuth.tsx', 'UserBookingsSection.tsx',"
        },
        {
          "line": 295,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "'AdminProviderBookings.tsx', 'ProviderBookings.tsx'"
        },
        {
          "line": 298,
          "keywords": [
            "vehicle"
          ],
          "text": "'pricing.ts', 'priceCodeService.ts', 'vehiclePricing.ts',"
        },
        {
          "line": 302,
          "keywords": [
            "cottage",
            "hotel"
          ],
          "text": "'AdminCottages.tsx', 'AdminUsers.tsx', 'AdminHotels.tsx',"
        },
        {
          "line": 303,
          "keywords": [
            "provider"
          ],
          "text": "'AdminProviders.tsx', 'MainDashboard.tsx'"
        },
        {
          "line": 305,
          "keywords": [
            "cottage"
          ],
          "text": "cottage: ["
        },
        {
          "line": 306,
          "keywords": [
            "cottage"
          ],
          "text": "'CottageForm.tsx', 'CottagePage.tsx', 'CottagesList.tsx'"
        },
        {
          "line": 375,
          "keywords": [
            "booking"
          ],
          "text": "case 'booking_process':"
        },
        {
          "line": 376,
          "keywords": [
            "booking"
          ],
          "text": "case 'booking_system':"
        },
        {
          "line": 377,
          "keywords": [
            "booking"
          ],
          "text": "return templates.booking_process();"
        },
        {
          "line": 427,
          "keywords": [
            "booking"
          ],
          "text": "'booking': {"
        },
        {
          "line": 428,
          "keywords": [
            "booking"
          ],
          "text": "description: '·ÉØ·Éê·Éï·É®·Éú·Éò·É° ·É°·Éò·É°·É¢·Éî·Éõ·Éò·É° ·É§·Éê·Éò·Éö·Éî·Éë·Éò - BookingService.ts, BookingModal.tsx',"
        },
        {
          "line": 430,
          "keywords": [
            "booking",
            "calendar"
          ],
          "text": "relatedFiles: ['src/services/bookingService.ts', 'src/components/BookingModal.tsx', 'src/components/Calendar.tsx']"
        },
        {
          "line": 435,
          "keywords": [
            "vehicle"
          ],
          "text": "relatedFiles: ['src/utils/pricing.ts', 'src/utils/vehiclePricing.ts', 'src/components/PricingManager.tsx']"
        },
        {
          "line": 440,
          "keywords": [
            "cottage"
          ],
          "text": "relatedFiles: ['src/AdminUsers.tsx', 'src/AdminCottages.tsx', 'src/MainDashboard.tsx']"
        },
        {
          "line": 468,
          "keywords": [
            "provider"
          ],
          "text": "summary += `üìä ·É†·Éù·Éö·Éî·Éë·Éò: Customer, Provider, Admin, Super Admin\\n`;"
        }
      ]
    },
    {
      "path": "backend/services/user_service.js",
      "occurrences": [
        {
          "line": 20,
          "keywords": [
            "provider"
          ],
          "text": "role, // SUPER_ADMIN, PROVIDER, CUSTOMER"
        }
      ]
    },
    {
      "path": "backend/test_ai_comprehensive.js",
      "occurrences": [
        {
          "line": 8,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·Éõ·Éù·Éõ·É¨·Éî·É†·Éî Bakhmaro booking-·Éò·É° ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éò ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò\","
        },
        {
          "line": 29,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éî·Éë·Éò·Éê BookingService.ts-·É®·Éò?\","
        },
        {
          "line": 31,
          "keywords": [
            "booking"
          ],
          "text": "expectedKeywords: [\"createBooking\", \"updateBooking\", \"getBookings\", \"validation\"],"
        },
        {
          "line": 36,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éù·Éí·Éù·É† ·Éõ·É£·É®·Éê·Éù·Éë·É° BookingModal ·Éô·Éù·Éõ·Éû·Éù·Éú·Éî·Éú·É¢·Éò?\","
        },
        {
          "line": 45,
          "keywords": [
            "hotel"
          ],
          "text": "expectedKeywords: [\"·É°·Éê·É°·É¢·É£·Éõ·É†·Éù\", \"hotel\", \"·Éë·É£·Éô·Éò·Éú·Éí·Éò\", \"·Éú·Éù·Éõ·Éî·É†·Éò\", \"·É¶·Éê·Éõ·Éî\"],"
        },
        {
          "line": 65,
          "keywords": [
            "vehicle"
          ],
          "text": "category: \"vehicle_types\","
        },
        {
          "line": 66,
          "keywords": [
            "vehicle"
          ],
          "text": "expectedKeywords: [\"·É¢·É†·Éê·Éú·É°·Éû·Éù·É†·É¢·Éò\", \"vehicle\", \"·Éõ·Éê·Éú·É•·Éê·Éú·Éê\", \"·É°·Éú·Éù·É£·Éõ·Éù·Éë·Éò·Éö·Éò\"],"
        }
      ]
    },
    {
      "path": "backend/test_ai_final_scenarios.js",
      "occurrences": [
        {
          "line": 9,
          "keywords": [
            "booking"
          ],
          "text": "query: '·Éõ·Éù·Éõ·Éò·Éß·Éî·Éï·Éò Bakhmaro Booking-·Éò·É° ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éò ·Éí·Éï·Éî·É†·Éì·Éî·Éë·Éò',"
        },
        {
          "line": 16,
          "keywords": [
            "booking"
          ],
          "text": "id: 'booking_process',"
        },
        {
          "line": 19,
          "keywords": [
            "booking"
          ],
          "text": "description: 'Step-by-step booking process'"
        },
        {
          "line": 22,
          "keywords": [
            "provider"
          ],
          "text": "// 3. Provider ·É†·Éù·Éö·Éò·É° ·É£·É§·Éö·Éî·Éë·Éî·Éë·Éò"
        },
        {
          "line": 24,
          "keywords": [
            "provider"
          ],
          "text": "id: 'provider_permissions',"
        },
        {
          "line": 25,
          "keywords": [
            "provider"
          ],
          "text": "query: '·É†·Éê ·Éì·Éù·Éú·Éò·É° ·É¨·Éï·Éì·Éù·Éõ·Éê ·Éê·É•·Éï·É° Provider ·É†·Éù·Éö·É°?',"
        },
        {
          "line": 26,
          "keywords": [
            "booking",
            "cottage"
          ],
          "text": "expectedElements: ['view_dashboard', 'manage_cottages', 'view_bookings', 'admin ·Éû·Éê·Éú·Éî·Éö·Éò'],"
        },
        {
          "line": 27,
          "keywords": [
            "provider"
          ],
          "text": "description: 'Provider role permissions and access levels'"
        },
        {
          "line": 34,
          "keywords": [
            "cottage"
          ],
          "text": "expectedElements: ['AdminCottages.tsx', 'CottageForm.tsx', 'CottagePage.tsx', 'firestore'],"
        },
        {
          "line": 35,
          "keywords": [
            "cottage"
          ],
          "text": "description: 'Technical file structure for cottage management'"
        },
        {
          "line": 50,
          "keywords": [
            "booking"
          ],
          "text": "expectedElements: ['depositAmount', 'totalPrice', 'BookingModal', '·Éê·Éï·Éê·Éú·É°·Éò'],"
        },
        {
          "line": 58,
          "keywords": [
            "commission"
          ],
          "text": "expectedElements: ['manage_users', 'manage_roles', 'view_logs', 'commission ·Éõ·Éê·É†·Éó·Éï·Éê'],"
        },
        {
          "line": 98,
          "keywords": [
            "notification"
          ],
          "text": "expectedElements: ['MessagingSystem', 'real-time', 'notifications'],"
        },
        {
          "line": 99,
          "keywords": [
            "notification"
          ],
          "text": "description: 'Internal messaging and notification system'"
        },
        {
          "line": 104,
          "keywords": [
            "bank"
          ],
          "text": "id: 'bank_account_management',"
        },
        {
          "line": 106,
          "keywords": [
            "bank",
            "commission"
          ],
          "text": "expectedElements: ['BankAccountManager', 'commission', 'payment routing'],"
        },
        {
          "line": 107,
          "keywords": [
            "bank",
            "provider"
          ],
          "text": "description: 'Bank account management for providers'"
        }
      ]
    },
    {
      "path": "backend/test_groq_responses.js",
      "occurrences": [
        {
          "line": 7,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éê ·Éê·É•·Éï·É° bookingService.ts-·É®·Éò?\","
        },
        {
          "line": 8,
          "keywords": [
            "booking"
          ],
          "text": "context: \"·Éî·É° ·Éô·Éò·Éó·ÉÆ·Éï·Éê ·Éî·ÉÆ·Éî·Éë·Éê booking service-·Éò·É° ·É§·É£·Éú·É•·É™·Éò·Éù·Éú·Éê·Éö·É°\""
        },
        {
          "line": 12,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éù·Éí·Éù·É† ·Éõ·É£·É®·Éê·Éù·Éë·É° BookingModal ·Éô·Éù·Éõ·Éû·Éù·Éú·Éî·Éú·É¢·Éò?\","
        },
        {
          "line": 17,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·Éö·Éù·Éí·Éò·Éô·Éê·Éê transport booking ·É°·Éî·É†·Éï·Éò·É°·É®·Éò?\","
        },
        {
          "line": 18,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "context: \"·Éî·É° ·Éô·Éò·Éó·ÉÆ·Éï·Éê ·Éî·ÉÆ·Éî·Éë·Éê vehicle booking ·Éö·Éù·Éí·Éò·Éô·Éê·É°\""
        }
      ]
    },
    {
      "path": "backend/utils/enhanced_georgian_validator.js",
      "occurrences": [
        {
          "line": 77,
          "keywords": [
            "booking"
          ],
          "text": "'·É©·Éî·Éõ·Éò ·É°·Éê·Éò·É¢·Éò': '·Éë·Éê·ÉÆ·Éõ·Éê·É†·Éù·É° Booking ·Éû·Éö·Éê·É¢·É§·Éù·É†·Éõ·Éê',"
        }
      ]
    },
    {
      "path": "backend/utils/rpid.js",
      "occurrences": [
        {
          "line": 178,
          "keywords": [
            "cottage",
            "rental"
          ],
          "text": "rpName: 'Bakhmaro Cottages - Georgian Rental Platform'"
        }
      ]
    },
    {
      "path": "docs/REPLIT_AI_ASSISTANT_ARCHITECTURE.md",
      "occurrences": [
        {
          "line": 430,
          "keywords": [
            "provider"
          ],
          "text": "interface DiagnosticsProvider {"
        }
      ]
    },
    {
      "path": "docs/ai-stream-diagnostic.md",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "provider"
          ],
          "text": "- Investigation performed within local repository snapshot; live infrastructure (browser UI, running backend, Groq provider) was not available."
        }
      ]
    },
    {
      "path": "docs/front-ai-chat-report.md",
      "occurrences": [
        {
          "line": 56,
          "keywords": [
            "provider"
          ],
          "text": "- Proxy consumes environment variables: `AI_SERVICE_URL`, `AI_INTERNAL_TOKEN`, `ALLOW_ANONYMOUS_AI_CHAT`, `AI_PROXY_STREAMING_MODE`, and optionally realtime provider keys (`GROQ_API_KEY`, `OPENAI_API_KEY`, `ANTHROPIC_API_KEY`) to switch streaming mode; sets signed service headers for upstream authentication.„ÄêF:backend/routes/ai_chat.js‚Ä†L11-L118„Äë"
        }
      ]
    },
    {
      "path": "docs/step0_frontend_inventory.csv",
      "occurrences": [
        {
          "line": 2,
          "keywords": [
            "commission"
          ],
          "text": "ai-frontend/src/AdminCommission.tsx,Component"
        },
        {
          "line": 3,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/AdminCottages.tsx,Component"
        },
        {
          "line": 5,
          "keywords": [
            "hotel"
          ],
          "text": "ai-frontend/src/AdminHotels.tsx,Component"
        },
        {
          "line": 9,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "ai-frontend/src/AdminProviderBookings.tsx,Component"
        },
        {
          "line": 10,
          "keywords": [
            "provider"
          ],
          "text": "ai-frontend/src/AdminProviders.tsx,Component"
        },
        {
          "line": 11,
          "keywords": [
            "snowmobile"
          ],
          "text": "ai-frontend/src/AdminSnowmobiles.tsx,Component"
        },
        {
          "line": 13,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/AdminVehicles.tsx,Component"
        },
        {
          "line": 15,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/BookingForm.tsx,Component"
        },
        {
          "line": 16,
          "keywords": [
            "calendar"
          ],
          "text": "ai-frontend/src/CalendarView.tsx,Component"
        },
        {
          "line": 17,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/CottageForm.tsx,Component"
        },
        {
          "line": 18,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/CottagePage.tsx,Page"
        },
        {
          "line": 19,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/CottagesList.tsx,Component"
        },
        {
          "line": 21,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "ai-frontend/src/HotelBookingForm.tsx,Component"
        },
        {
          "line": 22,
          "keywords": [
            "hotel"
          ],
          "text": "ai-frontend/src/HotelForm.tsx,Component"
        },
        {
          "line": 23,
          "keywords": [
            "hotel"
          ],
          "text": "ai-frontend/src/HotelPage.tsx,Page"
        },
        {
          "line": 24,
          "keywords": [
            "hotel"
          ],
          "text": "ai-frontend/src/HotelsList.tsx,Component"
        },
        {
          "line": 29,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "ai-frontend/src/ProviderBookings.tsx,Component"
        },
        {
          "line": 30,
          "keywords": [
            "provider"
          ],
          "text": "ai-frontend/src/ProviderDetails.tsx,Component"
        },
        {
          "line": 31,
          "keywords": [
            "snowmobile"
          ],
          "text": "ai-frontend/src/SnowmobileForm.tsx,Component"
        },
        {
          "line": 33,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "ai-frontend/src/VehicleBookingForm.tsx,Component"
        },
        {
          "line": 34,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/VehicleForm.tsx,Component"
        },
        {
          "line": 35,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/VehiclePage.tsx,Page"
        },
        {
          "line": 36,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/VehiclesList.tsx,Component"
        },
        {
          "line": 44,
          "keywords": [
            "bank"
          ],
          "text": "ai-frontend/src/components/BankAccountField.tsx,Component"
        },
        {
          "line": 45,
          "keywords": [
            "bank"
          ],
          "text": "ai-frontend/src/components/BankAccountManager.tsx,Component"
        },
        {
          "line": 46,
          "keywords": [
            "bank"
          ],
          "text": "ai-frontend/src/components/BankInfoForm.tsx,Component"
        },
        {
          "line": 47,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/components/BookingAuth.tsx,Component"
        },
        {
          "line": 48,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/components/BookingModal.tsx,Component"
        },
        {
          "line": 49,
          "keywords": [
            "calendar"
          ],
          "text": "ai-frontend/src/components/Calendar.tsx,Component"
        },
        {
          "line": 59,
          "keywords": [
            "horse"
          ],
          "text": "ai-frontend/src/components/HorseCard.tsx,Component"
        },
        {
          "line": 60,
          "keywords": [
            "hotel"
          ],
          "text": "ai-frontend/src/components/HotelCard.tsx,Component"
        },
        {
          "line": 62,
          "keywords": [
            "notification"
          ],
          "text": "ai-frontend/src/components/NotificationSystem.tsx,Component"
        },
        {
          "line": 63,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "ai-frontend/src/components/ProviderCommissionDashboard.tsx,Page"
        },
        {
          "line": 69,
          "keywords": [
            "snowmobile"
          ],
          "text": "ai-frontend/src/components/SnowmobileCard.tsx,Component"
        },
        {
          "line": 72,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/components/UserBookingsSection.tsx,Component"
        },
        {
          "line": 75,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/components/VehicleCard.tsx,Component"
        },
        {
          "line": 88,
          "keywords": [
            "provider"
          ],
          "text": "ai-frontend/src/contexts/FilePreviewProvider.tsx,Service"
        },
        {
          "line": 102,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/hooks/useBookingQueries.ts,Util"
        },
        {
          "line": 110,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/pages/Cottages/CottageForm.tsx,Page"
        },
        {
          "line": 111,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/pages/Cottages/NewCottagePage.tsx,Page"
        },
        {
          "line": 114,
          "keywords": [
            "provider"
          ],
          "text": "ai-frontend/src/pages/ProviderLogin.tsx,Page"
        },
        {
          "line": 118,
          "keywords": [
            "bank"
          ],
          "text": "ai-frontend/src/services/bankAccountService.ts,Service"
        },
        {
          "line": 119,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/services/bookingAuthService.ts,Service"
        },
        {
          "line": 120,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/services/bookingExpirationService.ts,Service"
        },
        {
          "line": 121,
          "keywords": [
            "booking"
          ],
          "text": "ai-frontend/src/services/bookingService.ts,Service"
        },
        {
          "line": 127,
          "keywords": [
            "notification"
          ],
          "text": "ai-frontend/src/services/notificationService.ts,Service"
        },
        {
          "line": 136,
          "keywords": [
            "bank"
          ],
          "text": "ai-frontend/src/types/bank.ts,Type"
        },
        {
          "line": 137,
          "keywords": [
            "cottage"
          ],
          "text": "ai-frontend/src/types/cottage.ts,Type"
        },
        {
          "line": 139,
          "keywords": [
            "hotel"
          ],
          "text": "ai-frontend/src/types/hotel.ts,Type"
        },
        {
          "line": 143,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/types/vehicle.ts,Type"
        },
        {
          "line": 154,
          "keywords": [
            "vehicle"
          ],
          "text": "ai-frontend/src/utils/vehiclePricing.ts,Util"
        }
      ]
    },
    {
      "path": "docs/step0_frontend_inventory.md",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "booking",
            "calendar",
            "commission",
            "cottage",
            "hotel",
            "provider",
            "rental",
            "snowmobile",
            "vehicle"
          ],
          "text": "This document captures the Bakhmaro rental domain footprint within the frontend workspace. It lists every file that still references booking, cottage, hotel, commission, customer, provider, calendar, vehicle, or snowmobile concepts (including Georgian UI copy), and records the role those files play. A CSV export is stored alongside this report for backup."
        },
        {
          "line": 17,
          "keywords": [
            "cottage",
            "vehicle"
          ],
          "text": "- `ai-frontend/src/AdminPanel.tsx` ‚Äî Implements tab navigation that redirects to /admin sub-routes like /admin/javshnissia, /admin/cottages, and /admin/vehicles."
        },
        {
          "line": 18,
          "keywords": [
            "cottage",
            "horse",
            "hotel",
            "snowmobile",
            "vehicle"
          ],
          "text": "- `ai-frontend/src/components/UnifiedListingForm.tsx` ‚Äî Centralizes creation routes for cottages, vehicles, hotels, horses, and snowmobiles under /admin/*/new."
        },
        {
          "line": 20,
          "keywords": [
            "cottage",
            "hotel",
            "vehicle"
          ],
          "text": "- `ai-frontend/src/components/Header.tsx` ‚Äî Navigation menu exposes public-facing cottage/hotel/vehicle routes and admin detection based on pathname."
        },
        {
          "line": 27,
          "keywords": [
            "commission"
          ],
          "text": "| `ai-frontend/src/AdminCommission.tsx` | Component |"
        },
        {
          "line": 28,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/AdminCottages.tsx` | Component |"
        },
        {
          "line": 30,
          "keywords": [
            "hotel"
          ],
          "text": "| `ai-frontend/src/AdminHotels.tsx` | Component |"
        },
        {
          "line": 34,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "| `ai-frontend/src/AdminProviderBookings.tsx` | Component |"
        },
        {
          "line": 35,
          "keywords": [
            "provider"
          ],
          "text": "| `ai-frontend/src/AdminProviders.tsx` | Component |"
        },
        {
          "line": 36,
          "keywords": [
            "snowmobile"
          ],
          "text": "| `ai-frontend/src/AdminSnowmobiles.tsx` | Component |"
        },
        {
          "line": 38,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/AdminVehicles.tsx` | Component |"
        },
        {
          "line": 40,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/BookingForm.tsx` | Component |"
        },
        {
          "line": 41,
          "keywords": [
            "calendar"
          ],
          "text": "| `ai-frontend/src/CalendarView.tsx` | Component |"
        },
        {
          "line": 42,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/CottageForm.tsx` | Component |"
        },
        {
          "line": 43,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/CottagePage.tsx` | Page |"
        },
        {
          "line": 44,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/CottagesList.tsx` | Component |"
        },
        {
          "line": 46,
          "keywords": [
            "booking",
            "hotel"
          ],
          "text": "| `ai-frontend/src/HotelBookingForm.tsx` | Component |"
        },
        {
          "line": 47,
          "keywords": [
            "hotel"
          ],
          "text": "| `ai-frontend/src/HotelForm.tsx` | Component |"
        },
        {
          "line": 48,
          "keywords": [
            "hotel"
          ],
          "text": "| `ai-frontend/src/HotelPage.tsx` | Page |"
        },
        {
          "line": 49,
          "keywords": [
            "hotel"
          ],
          "text": "| `ai-frontend/src/HotelsList.tsx` | Component |"
        },
        {
          "line": 54,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "| `ai-frontend/src/ProviderBookings.tsx` | Component |"
        },
        {
          "line": 55,
          "keywords": [
            "provider"
          ],
          "text": "| `ai-frontend/src/ProviderDetails.tsx` | Component |"
        },
        {
          "line": 56,
          "keywords": [
            "snowmobile"
          ],
          "text": "| `ai-frontend/src/SnowmobileForm.tsx` | Component |"
        },
        {
          "line": 58,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "| `ai-frontend/src/VehicleBookingForm.tsx` | Component |"
        },
        {
          "line": 59,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/VehicleForm.tsx` | Component |"
        },
        {
          "line": 60,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/VehiclePage.tsx` | Page |"
        },
        {
          "line": 61,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/VehiclesList.tsx` | Component |"
        },
        {
          "line": 69,
          "keywords": [
            "bank"
          ],
          "text": "| `ai-frontend/src/components/BankAccountField.tsx` | Component |"
        },
        {
          "line": 70,
          "keywords": [
            "bank"
          ],
          "text": "| `ai-frontend/src/components/BankAccountManager.tsx` | Component |"
        },
        {
          "line": 71,
          "keywords": [
            "bank"
          ],
          "text": "| `ai-frontend/src/components/BankInfoForm.tsx` | Component |"
        },
        {
          "line": 72,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/components/BookingAuth.tsx` | Component |"
        },
        {
          "line": 73,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/components/BookingModal.tsx` | Component |"
        },
        {
          "line": 74,
          "keywords": [
            "calendar"
          ],
          "text": "| `ai-frontend/src/components/Calendar.tsx` | Component |"
        },
        {
          "line": 84,
          "keywords": [
            "horse"
          ],
          "text": "| `ai-frontend/src/components/HorseCard.tsx` | Component |"
        },
        {
          "line": 85,
          "keywords": [
            "hotel"
          ],
          "text": "| `ai-frontend/src/components/HotelCard.tsx` | Component |"
        },
        {
          "line": 87,
          "keywords": [
            "notification"
          ],
          "text": "| `ai-frontend/src/components/NotificationSystem.tsx` | Component |"
        },
        {
          "line": 88,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "| `ai-frontend/src/components/ProviderCommissionDashboard.tsx` | Page |"
        },
        {
          "line": 94,
          "keywords": [
            "snowmobile"
          ],
          "text": "| `ai-frontend/src/components/SnowmobileCard.tsx` | Component |"
        },
        {
          "line": 97,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/components/UserBookingsSection.tsx` | Component |"
        },
        {
          "line": 100,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/components/VehicleCard.tsx` | Component |"
        },
        {
          "line": 113,
          "keywords": [
            "provider"
          ],
          "text": "| `ai-frontend/src/contexts/FilePreviewProvider.tsx` | Service |"
        },
        {
          "line": 127,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/hooks/useBookingQueries.ts` | Util |"
        },
        {
          "line": 135,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/pages/Cottages/CottageForm.tsx` | Page |"
        },
        {
          "line": 136,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/pages/Cottages/NewCottagePage.tsx` | Page |"
        },
        {
          "line": 139,
          "keywords": [
            "provider"
          ],
          "text": "| `ai-frontend/src/pages/ProviderLogin.tsx` | Page |"
        },
        {
          "line": 143,
          "keywords": [
            "bank"
          ],
          "text": "| `ai-frontend/src/services/bankAccountService.ts` | Service |"
        },
        {
          "line": 144,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/services/bookingAuthService.ts` | Service |"
        },
        {
          "line": 145,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/services/bookingExpirationService.ts` | Service |"
        },
        {
          "line": 146,
          "keywords": [
            "booking"
          ],
          "text": "| `ai-frontend/src/services/bookingService.ts` | Service |"
        },
        {
          "line": 152,
          "keywords": [
            "notification"
          ],
          "text": "| `ai-frontend/src/services/notificationService.ts` | Service |"
        },
        {
          "line": 161,
          "keywords": [
            "bank"
          ],
          "text": "| `ai-frontend/src/types/bank.ts` | Type |"
        },
        {
          "line": 162,
          "keywords": [
            "cottage"
          ],
          "text": "| `ai-frontend/src/types/cottage.ts` | Type |"
        },
        {
          "line": 164,
          "keywords": [
            "hotel"
          ],
          "text": "| `ai-frontend/src/types/hotel.ts` | Type |"
        },
        {
          "line": 168,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/types/vehicle.ts` | Type |"
        },
        {
          "line": 179,
          "keywords": [
            "vehicle"
          ],
          "text": "| `ai-frontend/src/utils/vehiclePricing.ts` | Util |"
        }
      ]
    },
    {
      "path": "functions/.env.example",
      "occurrences": [
        {
          "line": 4,
          "keywords": [
            "commission"
          ],
          "text": "# Upstream property API endpoint for scheduled commission sync"
        }
      ]
    },
    {
      "path": "functions/scheduledCommission.js",
      "occurrences": [
        {
          "line": 70,
          "keywords": [
            "commission"
          ],
          "text": "const result = await propertyApiRequest('/commission/generate-invoices', {"
        },
        {
          "line": 91,
          "keywords": [
            "commission"
          ],
          "text": "await propertyApiRequest('/commission/send-reminders', { method: 'POST' });"
        },
        {
          "line": 109,
          "keywords": [
            "commission"
          ],
          "text": "await propertyApiRequest('/commission/enforce-payments', { method: 'POST' });"
        },
        {
          "line": 119,
          "keywords": [
            "booking",
            "commission"
          ],
          "text": "// Trigger function to calculate commission when booking is completed"
        },
        {
          "line": 120,
          "keywords": [
            "booking"
          ],
          "text": "exports.onBookingCompleted = functions.firestore"
        },
        {
          "line": 121,
          "keywords": [
            "booking"
          ],
          "text": ".document('bookings/{bookingId}')"
        },
        {
          "line": 127,
          "keywords": [
            "booking"
          ],
          "text": "// Check if booking status changed to completed"
        },
        {
          "line": 129,
          "keywords": [
            "booking",
            "commission"
          ],
          "text": "console.log(`üìã Booking ${context.params.bookingId} completed, calculating commission...`);"
        },
        {
          "line": 131,
          "keywords": [
            "commission"
          ],
          "text": "const result = await propertyApiRequest('/commission/calculate', {"
        },
        {
          "line": 134,
          "keywords": [
            "provider"
          ],
          "text": "providerId: newValue.providerId,"
        },
        {
          "line": 136,
          "keywords": [
            "hotel"
          ],
          "text": "listingType: newValue.listingType || 'hotel',"
        },
        {
          "line": 140,
          "keywords": [
            "commission"
          ],
          "text": "const commission = result?.commission;"
        },
        {
          "line": 142,
          "keywords": [
            "commission"
          ],
          "text": "if (commission) {"
        },
        {
          "line": 144,
          "keywords": [
            "commission"
          ],
          "text": "commissionRate: commission.rate,"
        },
        {
          "line": 145,
          "keywords": [
            "commission"
          ],
          "text": "commissionAmount: commission.amount,"
        },
        {
          "line": 149,
          "keywords": [
            "booking",
            "commission"
          ],
          "text": "console.log(`‚úÖ Commission calculated for booking ${context.params.bookingId}: ‚Çæ${commission.amount}`);"
        },
        {
          "line": 151,
          "keywords": [
            "booking",
            "commission"
          ],
          "text": "console.warn(`‚ö†Ô∏è Commission calculation returned no result for booking ${context.params.bookingId}`);"
        },
        {
          "line": 157,
          "keywords": [
            "booking",
            "commission"
          ],
          "text": "console.error('‚ùå Error calculating commission for booking:', error);"
        },
        {
          "line": 177,
          "keywords": [
            "commission"
          ],
          "text": "await propertyApiRequest(`/commission/invoices/${invoiceId}/mark-paid`, {"
        },
        {
          "line": 194,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "// Function to update provider commission rates"
        },
        {
          "line": 195,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "exports.updateProviderCommissionRate = functions.https.onCall(async (data, context) => {"
        },
        {
          "line": 207,
          "keywords": [
            "provider"
          ],
          "text": "const { providerId, rate, model = 'percentage' } = data;"
        },
        {
          "line": 209,
          "keywords": [
            "provider"
          ],
          "text": "if (!providerId || !rate || rate < 0 || rate > 1) {"
        },
        {
          "line": 210,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "throw new functions.https.HttpsError('invalid-argument', 'Invalid provider ID or commission rate');"
        },
        {
          "line": 213,
          "keywords": [
            "provider"
          ],
          "text": "await db.collection('providers').doc(providerId).update({"
        },
        {
          "line": 214,
          "keywords": [
            "commission"
          ],
          "text": "customCommission: { model, rate },"
        },
        {
          "line": 219,
          "keywords": [
            "commission",
            "provider"
          ],
          "text": "console.log(`‚úÖ Updated commission rate for provider ${providerId} to ${rate * 100}%`);"
        },
        {
          "line": 221,
          "keywords": [
            "commission"
          ],
          "text": "return { success: true, message: 'Commission rate updated successfully' };"
        },
        {
          "line": 223,
          "keywords": [
            "commission"
          ],
          "text": "console.error('‚ùå Error updating commission rate:', error);"
        }
      ]
    },
    {
      "path": "package-lock.json",
      "occurrences": [
        {
          "line": 7866,
          "keywords": [
            "bank"
          ],
          "text": "\"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\","
        }
      ]
    },
    {
      "path": "pnpm-lock.yaml",
      "occurrences": [
        {
          "line": 2613,
          "keywords": [
            "bank"
          ],
          "text": "resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}"
        }
      ]
    },
    {
      "path": "replit.md",
      "occurrences": [
        {
          "line": 1,
          "keywords": [
            "cottage"
          ],
          "text": "# Bakhmaro Cottages Platform"
        },
        {
          "line": 4,
          "keywords": [
            "cottage",
            "rental"
          ],
          "text": "This project is \"·Éë·Éê·ÉÆ·Éõ·Éê·É†·Éù·É° ·É•·Éò·É†·Éê·Éï·Éî·Éë·Éê\" (Bakhmaro Rental), a Georgian cottage/accommodation rental platform. It aims to provide a comprehensive solution for property rentals, integrating a modern frontend, a robust backend, and an advanced AI service with RAG capabilities for enhanced data persistence, session management, and codebase understanding. The platform prioritizes security, performance, and a seamless user experience, including full Georgian language support."
        }
      ]
    },
    {
      "path": "restart-servers.js",
      "occurrences": [
        {
          "line": 5,
          "keywords": [
            "cottage"
          ],
          "text": "* Manual Server Restart Utility for Georgian Cottage Platform"
        }
      ]
    },
    {
      "path": "scripts/ensureLocalSecrets.js",
      "occurrences": [
        {
          "line": 33,
          "keywords": [
            "provider"
          ],
          "text": "auth_provider_x509_cert_url: 'https://www.googleapis.com/oauth2/v1/certs',"
        }
      ]
    },
    {
      "path": "scripts/test_front_gurulo_chat.js",
      "occurrences": [
        {
          "line": 72,
          "keywords": [
            "cottage"
          ],
          "text": "ensureCTA(responseSections, /\\/cottages/i);"
        },
        {
          "line": 97,
          "keywords": [
            "cottage"
          ],
          "text": "ensureCTA(responseSections, /\\/cottages/i);"
        }
      ]
    },
    {
      "path": "test_ai_scenarios.js",
      "occurrences": [
        {
          "line": 5,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·É§·É£·Éú·É•·É™·Éò·Éê ·Éê·É•·Éï·É° bookingService.ts-·É®·Éò?\","
        },
        {
          "line": 6,
          "keywords": [
            "booking",
            "provider"
          ],
          "text": "expectedTopics: [\"getBookingsByUser\", \"createBooking\", \"updateBooking\", \"deleteBooking\", \"calculateProviderStats\"],"
        },
        {
          "line": 11,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éù·Éí·Éù·É† ·Éõ·É£·É®·Éê·Éù·Éë·É° BookingModal ·Éô·Éù·Éõ·Éû·Éù·Éú·Éî·Éú·É¢·Éò?\","
        },
        {
          "line": 12,
          "keywords": [
            "booking",
            "calendar"
          ],
          "text": "expectedTopics: [\"booking form\", \"validation\", \"Firebase\", \"calendar\", \"pricing\"],"
        },
        {
          "line": 17,
          "keywords": [
            "booking"
          ],
          "text": "question: \"·É†·Éê ·Éö·Éù·Éí·Éò·Éô·Éê·Éê transport booking ·É°·Éî·É†·Éï·Éò·É°·É®·Éò?\","
        },
        {
          "line": 18,
          "keywords": [
            "booking",
            "vehicle"
          ],
          "text": "expectedTopics: [\"vehicle booking\", \"pricing\", \"availability\", \"validation\"],"
        },
        {
          "line": 23,
          "keywords": [
            "cottage"
          ],
          "text": "question: \"·É†·Éù·Éí·Éù·É† ·Éò·Éó·Éï·Éö·Éî·Éë·Éê ·É¶·Éê·Éõ·Éî·Éî·Éë·Éò·É° ·É¶·Éò·É†·Éî·Éë·É£·Éö·Éî·Éë·Éê cottage-·Éî·Éë·Éò·É°·Éó·Éï·Éò·É°?\","
        },
        {
          "line": 30,
          "keywords": [
            "notification"
          ],
          "text": "expectedTopics: [\"conversations\", \"real-time\", \"notifications\", \"support\"],"
        }
      ]
    }
  ]
}