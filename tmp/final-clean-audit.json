{
  "status": "findings",
  "summary": "Rental booking functionality and data pipelines remain in active services, backend routes, Firebase functions, and archived backups.",
  "findings": [
    {
      "category": "ai-service",
      "details": [
        "controllers/ai_controller.js returns canned answers for BookingService.ts and BookingModal.tsx",
        "services/site_summary.js still lists bookings/providers/cottages/hotels/vehicles/horses/snowmobiles as core features",
        "services/backup_system_service.js exports Firestore collections including cottages and bookings",
        "services/gurulo_response_builder.js keeps rental booking policies",
        "services/file_access_service.js expands Georgian search terms to booking/hospitality modules",
        "context/code_context.js describes backend as booking API"
      ]
    },
    {
      "category": "backend",
      "details": [
        "ai_controller.js system prompt targets the Bakhmaro booking platform",
        "routes/messaging.js exposes booking-linked conversation endpoints",
        "routes/user_activity.js logs booking_activity events"
      ]
    },
    {
      "category": "cloud_functions",
      "details": [
        "scheduledCommission.js handles commission invoicing, reminders, and enforces payments when bookings complete",
        "scheduledCommission.js updates provider commission records in Firestore"
      ]
    },
    {
      "category": "tests_and_tooling",
      "details": [
        "test_ai_scenarios.js asks about bookingService.ts, BookingModal, and transport bookings",
        "Additional ai-service/backend Groq tests mirror the same booking prompts"
      ]
    },
    {
      "category": "backup_archives",
      "details": [
        "backup_before_restore/src/AdminProviderBookings.tsx manages bookings for cottages/hotels/vehicles/horses/snowmobiles",
        "backup_before_restore/src/AdminCommission.tsx tracks provider commissions and booking totals",
        "backup_before_restore/src/AdminProviders.tsx manages provider roster and status"
      ]
    }
  ],
  "builds": {
    "ai-frontend": {
      "command": "pnpm -C ai-frontend build",
      "result": "pass"
    },
    "functions": {
      "command": "pnpm -C functions build",
      "result": "pass",
      "notes": "Node engine warning only"
    }
  }
}
