name: Gurula AI Assistant CI/CD Pipeline (Full Auto Deploy)

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  STAGING_REPL_URL: ${{ secrets.STAGING_REPL_URL }}
  PRODUCTION_REPL_URL: ${{ secrets.PRODUCTION_REPL_URL }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Full Auto Build + Firebase Deploy

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Clean and install dependencies
        run: |
          npm cache clean --force
          npm install --legacy-peer-deps --no-audit --no-fund

      - name: Build Frontend
        working-directory: ai-frontend
        run: |
          echo "‚öôÔ∏è Building frontend for deployment..."
          npm install --legacy-peer-deps --no-audit --no-fund
          npm run build

      - name: Build Backend
        working-directory: ai-service
        run: |
          echo "‚öôÔ∏è Building backend..."
          npm install --legacy-peer-deps --no-audit --no-fund
          npm run build || echo "Backend build optional"

      - name: Firebase Deploy
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
        uses: w9jds/firebase-action@v13.24.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deployment Confirmation
        run: |
          echo "‚úÖ Firebase auto-deploy complete!"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Environment: ${{ github.ref_name == 'main' && 'Production' || 'Staging' }}"
          echo "Timestamp: $(date)"

      - name: Notify (optional)
        if: always()
        run: |
          echo "üì£ Notifying deployment success..."
          # future Slack or Email integration

# If you don‚Äôt have Firebase setup yet ‚Äî it will skip deploy gracefully.
# If setup exists ‚Äî will auto-upload build result.
