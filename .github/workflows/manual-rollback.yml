name: Manual Production Rollback (Secure Mode)

on:
  workflow_dispatch:
    inputs:
      rollback_reason:
        description: 'Reason for rollback'
        required: true
        type: string
      target_commit:
        description: 'Target commit to rollback to (optional)'
        required: false
        type: string

jobs:
  rollback:
    runs-on: ubuntu-latest
    name: Execute Manual Rollback
    environment: production-rollback

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Rollback Request
        run: |
          echo "üîç Validating rollback request..."
          echo "Reason: ${{ github.event.inputs.rollback_reason }}"
          if [ -n "${{ github.event.inputs.target_commit }}" ]; then
            echo "Target commit: ${{ github.event.inputs.target_commit }}"
          else
            echo "Target commit not specified ‚Äî will rollback to previous stable version."
          fi

      - name: Execute Rollback
        env:
          PROD_URL: ${{ secrets.PRODUCTION_REPL_URL }}
          PROD_TOKEN: ${{ secrets.REPL_PRODUCTION_TOKEN }}
        run: |
          echo "‚ö†Ô∏è Executing rollback on production environment..."
          
          PAYLOAD=$(jq -n \
            --arg reason "${{ github.event.inputs.rollback_reason }}" \
            --arg commit "${{ github.event.inputs.target_commit }}" \
            '{
              reason: $reason,
              target_commit: ($commit | select(length > 0)),
              requested_by: "${{ github.actor }}",
              timestamp: (now | todate)
            }')

          echo "‚û°Ô∏è Sending rollback payload:"
          echo "$PAYLOAD" | jq

          curl -X POST "$PROD_URL/rollback" \
            -H "Authorization: Bearer $PROD_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" || exit 1

      - name: Verify Rollback Health
        env:
          PROD_URL: ${{ secrets.PRODUCTION_REPL_URL }}
        run: |
          echo "üîç Verifying system health after rollback..."
          sleep 30
          curl -f "$PROD_URL/api/health" || exit 1
          curl -f "$PROD_URL/api/ai/health" || exit 1
          echo "‚úÖ Rollback verified successfully."

      - name: Generate Rollback Report
        run: |
          echo "üìÑ Generating rollback report..."
          mkdir -p reports
          REPORT="reports/rollback-report-${{ github.run_number }}.md"

          cat << EOF > $REPORT
          # ‚ö†Ô∏è Production Rollback Report

          **Executed at:** $(date)
          **Reason:** ${{ github.event.inputs.rollback_reason }}
          **Target commit:** ${{ github.event.inputs.target_commit || 'Previous stable version' }}
          **Executed by:** ${{ github.actor }}
          **Environment:** ai.bakhmaro.co (Production)

          ## ‚úÖ Rollback Summary
          Rollback completed successfully and verified by API checks.

          ## üìã Next Steps
          1. Investigate the root cause of the deployment failure.
          2. Implement and test the fix in \`development\` branch.
          3. Run full CI/CD pipeline again before next release.
          4. Monitor system logs for anomalies during next 24h.

          ## üîó Reference
          Workflow Run: [GitHub Actions #${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          EOF

          cat $REPORT

      - name: Upload Rollback Report
        uses: actions/upload-artifact@v4
        with:
          name: rollback-report-${{ github.run_number }}
          path: reports/rollback-report-${{ github.run_number }}.md
