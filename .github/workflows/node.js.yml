name: Node.js Quality Pipeline (Enhanced QA)

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json

      - name: Verify secret scaffolding
        run: npm run check:secrets-required

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-fund

      - name: Run linting
        run: npm run lint --if-present

      - name: Run type checks
        run: npm run type-check --if-present

      - name: Build project
        run: npm run build --if-present

      - name: Run tests
        run: npm run test --if-present

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-pipeline-artifacts-${{ github.run_number }}
          path: |
            **/coverage/**
            ai-frontend/dist
          if-no-files-found: ignore

  integration:
    name: Integration smoke tests
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json

      - name: Verify secret scaffolding
        run: npm run check:secrets-required

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-fund

      - name: Run integration tests (skips when services are offline)
        run: npm run test:integration
