
name: Quality Gates

on:
  pull_request:
    branches: [ "main", "development" ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Gate
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          cd backend && npm install
          cd ../ai-service && npm install

      - name: TypeScript Strict Check
        run: |
          echo "üîç Running strict TypeScript check..."
          npx tsc --noEmit --strict

      - name: Code Formatting Check
        run: |
          echo "‚ú® Checking code formatting..."
          npx prettier --check "src/**/*.{ts,tsx,js,jsx}"

      - name: Security Vulnerability Check
        run: |
          echo "üõ°Ô∏è Checking for security vulnerabilities..."
          npm audit --audit-level moderate
          
          # Check for hardcoded secrets
          echo "Checking for hardcoded secrets..."
          ! grep -r "sk-" . --exclude-dir=node_modules --exclude-dir=.git
          ! grep -r "AIza" . --exclude-dir=node_modules --exclude-dir=.git

      - name: Performance Budget Check
        run: |
          echo "‚ö° Checking performance budget..."
          npm run build
          
          # Check bundle size
          BUNDLE_SIZE=$(du -sk dist | cut -f1)
          MAX_SIZE=5000  # 5MB limit
          
          if [ $BUNDLE_SIZE -gt $MAX_SIZE ]; then
            echo "‚ùå Bundle size $BUNDLE_SIZE KB exceeds limit $MAX_SIZE KB"
            exit 1
          fi
          
          echo "‚úÖ Bundle size $BUNDLE_SIZE KB within limits"

  ai-service-quality:
    runs-on: ubuntu-latest
    name: AI Service Quality Gate
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: AI Service Tests
        run: |
          echo "ü§ñ Running AI service quality checks..."
          cd ai-service
          npm install
          
          # Test AI service initialization
          timeout 30s node test_trusted_ops.js || echo "TrustedOps test completed"
          timeout 30s node test_security_fixes.js || echo "Security test completed"

      - name: Memory Leak Check
        run: |
          echo "üß† Checking for memory leaks..."
          cd ai-service
          
          # Run service for 30 seconds and check memory usage
          timeout 30s node --inspect server.js &
          sleep 30
          
          echo "‚úÖ Memory leak check completed"
