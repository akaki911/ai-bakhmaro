name: Quality Gates (Advanced AI & Backend Checks)

on:
  pull_request:
    branches:
      - main
      - development

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: 🧩 Code Quality Gate (Frontend + Backend)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json

      - name: Verify secret scaffolding
        run: npm run check:secrets-required

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-fund

      - name: Lint workspaces
        run: npm run lint --if-present

      - name: Type check frontend
        run: npm run type-check --if-present

      - name: Format check
        run: npx prettier --check "**/*.{ts,tsx,js,jsx,json,css,scss,md}"

      - name: Run tests
        run: npm run test --if-present

      - name: Build workspaces
        run: npm run build --if-present

      - name: Enforce bundle budget
        run: |
          if [ -d "ai-frontend/dist" ]; then
            BUNDLE_SIZE=$(du -sk ai-frontend/dist | cut -f1)
            MAX_SIZE=8000
            echo "Bundle size: ${BUNDLE_SIZE}KB (limit ${MAX_SIZE}KB)"
            if [ "$BUNDLE_SIZE" -gt "$MAX_SIZE" ]; then
              echo "❌ Bundle size exceeds limit"
              exit 1
            fi
          else
            echo "No built frontend found, skipping bundle size check."
          fi

      - name: Secret scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git

  ai-service-quality:
    runs-on: ubuntu-latest
    name: 🤖 AI Service Quality & Stability

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ai-service/package-lock.json

      - name: Verify secret scaffolding
        run: npm run check:secrets-required

      - name: Install AI service dependencies
        working-directory: ai-service
        run: npm install --no-audit --no-fund

      - name: Syntax check
        working-directory: ai-service
        run: |
          node --check server.js
          bash -n start-ai-service.sh 2>/dev/null || echo "Shell script syntax check skipped"

      - name: Run available npm scripts
        working-directory: ai-service
        run: |
          npm run lint --if-present
          npm run test --if-present
          npm run build --if-present
